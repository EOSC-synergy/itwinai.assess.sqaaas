{
    "meta": {
        "version": "3.0.0",
        "report_json_url": "https://raw.githubusercontent.com/eosc-synergy/itwinai.assess.sqaaas/unit_test_4_dev/.report/assessment_output.json"
    },
    "repository": [
        {
            "url": "https://github.com/interTwin-eu/itwinai",
            "name": "interTwin-eu/itwinai",
            "tag": "unit_test_4_dev",
            "commit_id": "628299b4a52edc9400ae25d30fe5d49a27a7b278",
            "is_main_repo": true,
            "avatar_url": "https://avatars.githubusercontent.com/u/123980631?v=4",
            "description": null,
            "languages": null,
            "topics": null,
            "stargazers_count": null,
            "watchers_count": null,
            "contributors_count": null,
            "forks_count": null,
            "badge_status": "bronze"
        }
    ],
    "report": {
        "QC.Acc": {
            "valid": true,
            "subcriteria": {
                "QC.Acc01": {
                    "description": "Is the source code managed with a Version Control System?",
                    "requirement_level": "MUST",
                    "hint": "The source code shall be managed with Git and remain publicly available for this criterion to be successful. Please check <a href=\"https://git-scm.com/book/es/v2\" target=\"_blank\">Pro Git</a> docs about how to get started using Git tool. Guidelines provided by the most popular social coding platforms (<a href=\"https://docs.github.com/get-started\" target=\"_blank\">GitHub</a>, <a href=\"https://about.gitlab.com/get-started/\" target=\"_blank\">GitLab</a>) are also a good starting point",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Source code uses Git for version control",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": "scm",
                                "version": "2.34.1",
                                "docker": {
                                    "image": "bitnami/git:2.34.1",
                                    "reviewed": "2021-12-30"
                                },
                                "ci": {
                                    "name": "QC.Acc github.com/interTwin-eu/itwinai git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree"
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/34/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Doc": {
            "valid": true,
            "subcriteria": {
                "QC.Doc06.1": {
                    "description": "Is the software scope outlined in the code repository?",
                    "requirement_level": "MUST",
                    "hint": "A README file presents your software to the audience interested in your software project. Several online sites simplify the task of creating the README file, such as <a href=\"https://www.makeareadme.com/\" target=\"_blank\">Make a README</a> or <a href=\"https://readme.so/\" target=\"_blank\">readme.so</a> sites. Be sure to add it to the code repository's root path",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A README file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/interTwin-eu/itwinai find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 4047}], \"CODE_OF_CONDUCT\": [{\"file_name\": \".github/CODE_OF_CONDUCT.md\", \"size\": 3969}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 3654}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 4047
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": ".github/CODE_OF_CONDUCT.md",
                                        "size": 3969
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 3654
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.3": {
                    "description": "Does the project establish a code of conduct for its participants?",
                    "requirement_level": "MUST",
                    "hint": "A CODE_OF_CONDUCT file sets the path for a constructive, respectful and positive atmosphere among all the contributors in your software project. Of course you can define your own, but in case you want to rely on external and widely-adopted code of conducts check out some of the most popular ones: <a href=\"https://contributor-covenant.org/\" target=\"_blank\">Contributor Covenant</a> or <a href=\"https://web.archive.org/web/20200330154000/http://citizencodeofconduct.org/\" target=\"_blank\">Citizen Code of Conduct</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A CODE_OF_CONDUCT file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/interTwin-eu/itwinai find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 4047}], \"CODE_OF_CONDUCT\": [{\"file_name\": \".github/CODE_OF_CONDUCT.md\", \"size\": 3969}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 3654}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 4047
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": ".github/CODE_OF_CONDUCT.md",
                                        "size": 3969
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 3654
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.2": {
                    "description": "Is there a clear path or guidelines on how to contribute to the code?",
                    "requirement_level": "MUST",
                    "hint": "A CONTRIBUTING file shall be present in the root path of the code repository describing the expected workflow to follow when adding contributions. Please check <a href=\"https://mozillascience.github.io/working-open-workshop/contributing/\" target=\"_blank\">Mozilla's guidelines</a> and <a href=\"https://github.com/github/docs/blob/main/CONTRIBUTING.md\" target=\"_blank\">GitHub's CONTRIBUTING.md example</a> to get inspired on how to write a good CONTRIBUTING file",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A CONTRIBUTING file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/interTwin-eu/itwinai find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 4047}], \"CODE_OF_CONDUCT\": [{\"file_name\": \".github/CODE_OF_CONDUCT.md\", \"size\": 3969}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 3654}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 4047
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": ".github/CODE_OF_CONDUCT.md",
                                        "size": 3969
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 3654
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc01.1": {
                    "description": "Are docs managed in the same repository as code?",
                    "requirement_level": "MAY",
                    "hint": "This subcriterion will succeed if the documentation files exist on the same repository as the source code, e.g. under a <code>docs/</code> folder",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Documentation resides in the same repository as code",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": null,
                                "version": null,
                                "docker": null,
                                "ci": {
                                    "name": "QC.Doc github.com/interTwin-eu/itwinai git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree"
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/52/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                },
                "QC.Doc02.X": {
                    "description": "Are docs following a style for the Markdown markup language?",
                    "requirement_level": "MAY",
                    "hint": "When using a docs-as-code approach, the style of the markup language is being checked. SQAaaS relies on <a href=\"https://github.com/markdownlint/markdownlint/\" target=\"_blank\">markdownlint</a> for Markdown files and <a href=\"https://github.com/twolfson/restructuredtext-lint/\" target=\"_blank\">restructuredtext-lint</a> for reStructuredText",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Docs are not fully compliant with markdownlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-markdownlint",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "markdownlint",
                                "lang": "Markdown",
                                "version": "0.11.0",
                                "docker": {
                                    "dockerfile": "QC.Doc/markdownlint/Dockerfile",
                                    "reviewed": "1970-01-01"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/interTwin-eu/itwinai markdownlint",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "mdl --json ."
                                    ],
                                    "stdout_text": "[{\"filename\":\"./AUTHORS.md\",\"line\":5,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./AUTHORS.md\",\"line\":6,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./README.md\",\"line\":8,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":26,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":27,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":28,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":29,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":30,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":36,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":71,\"rule\":\"MD007\",\"aliases\":[\"ul-indent\"],\"description\":\"Unordered list indentation\"},{\"filename\":\"./docs/README.md\",\"line\":11,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":12,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":16,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":36,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":51,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":71,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":72,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":98,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":99,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":100,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":101,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":106,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":107,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":109,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":113,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":114,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":148,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":149,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":162,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":163,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":164,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":166,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/README.md\",\"line\":68,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":70,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":80,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":82,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":109,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":127,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":139,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":148,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/README.md\",\"line\":106,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/README.md\",\"line\":148,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/CLI.md\",\"line\":7,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/Concepts.md\",\"line\":7,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":144,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":159,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":168,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":313,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":359,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":367,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":387,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":446,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":178,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":179,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":181,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":182,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":183,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":184,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":192,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":228,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":229,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":230,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":232,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":233,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":234,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":235,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":245,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":285,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":286,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":290,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":291,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":302,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":333,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":337,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":432,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":454,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":499,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":520,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":525,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":7,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":10,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":508,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":119,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":121,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/How-to-use-this-software.md\",\"line\":257,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":58,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":180,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":19,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":25,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":48,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":70,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":110,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":111,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":122,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":123,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":126,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":127,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":130,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":131,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":138,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":151,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":161,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":162,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":163,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":164,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":172,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":185,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":8,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":11,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./docs/docs/use-cases/mnist.md\",\"line\":25,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./docs/index.md\",\"line\":9,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":11,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":12,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":14,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":27,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":51,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./docs/index.md\",\"line\":21,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":122,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":29,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":39,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":111,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":114,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":153,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":69,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":80,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":54,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":69,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./use-cases/3dgan/README.md\",\"line\":80,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"},{\"filename\":\"./use-cases/README.md\",\"line\":9,\"rule\":\"MD009\",\"aliases\":[\"no-trailing-spaces\"],\"description\":\"Trailing spaces\"},{\"filename\":\"./use-cases/README.md\",\"line\":8,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/README.md\",\"line\":10,\"rule\":\"MD031\",\"aliases\":[\"blanks-around-fences\"],\"description\":\"Fenced code blocks should be surrounded by blank lines\"},{\"filename\":\"./use-cases/mnist/torch/README.md\",\"line\":44,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/mnist/torch/README.md\",\"line\":47,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./use-cases/mnist/torch/README.md\",\"line\":20,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./use-cases/mnist/torch/README.md\",\"line\":29,\"rule\":\"MD029\",\"aliases\":[\"ol-prefix\"],\"description\":\"Ordered list item prefix\"},{\"filename\":\"./use-cases/mnist/torch/README.md\",\"line\":29,\"rule\":\"MD032\",\"aliases\":[\"blanks-around-lists\"],\"description\":\"Lists should be surrounded by blank lines\"}]",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/61/log?consoleFull"
                                },
                                "level": "RECOMMENDED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "./AUTHORS.md": {
                                    "MD009": {
                                        "description": "Trailing spaces",
                                        "line": [
                                            5,
                                            6
                                        ]
                                    }
                                },
                                "./README.md": {
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            8,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            36
                                        ]
                                    }
                                },
                                "./docs/README.md": {
                                    "MD007": {
                                        "description": "Unordered list indentation",
                                        "line": [
                                            71
                                        ]
                                    },
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            11,
                                            12,
                                            16,
                                            36,
                                            51,
                                            71,
                                            72,
                                            98,
                                            99,
                                            100,
                                            101,
                                            106,
                                            107,
                                            109,
                                            113,
                                            114,
                                            148,
                                            149,
                                            162,
                                            163,
                                            164,
                                            166
                                        ]
                                    },
                                    "MD029": {
                                        "description": "Ordered list item prefix",
                                        "line": [
                                            68,
                                            70,
                                            80,
                                            82,
                                            109,
                                            127,
                                            139,
                                            148
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            106,
                                            148
                                        ]
                                    }
                                },
                                "./docs/docs/CLI.md": {
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            7
                                        ]
                                    }
                                },
                                "./docs/docs/Concepts.md": {
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            7
                                        ]
                                    }
                                },
                                "./docs/docs/How-to-use-this-software.md": {
                                    "MD009": {
                                        "description": "Trailing spaces",
                                        "line": [
                                            144,
                                            159,
                                            168,
                                            313,
                                            359,
                                            367,
                                            387,
                                            446
                                        ]
                                    },
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            178,
                                            179,
                                            181,
                                            182,
                                            183,
                                            184,
                                            192,
                                            228,
                                            229,
                                            230,
                                            232,
                                            233,
                                            234,
                                            235,
                                            245,
                                            285,
                                            286,
                                            290,
                                            291,
                                            302,
                                            333,
                                            337,
                                            432,
                                            454,
                                            499,
                                            520,
                                            525
                                        ]
                                    },
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            7,
                                            10
                                        ]
                                    },
                                    "MD029": {
                                        "description": "Ordered list item prefix",
                                        "line": [
                                            508
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            119,
                                            121,
                                            257
                                        ]
                                    }
                                },
                                "./docs/docs/use-cases/mnist.md": {
                                    "MD009": {
                                        "description": "Trailing spaces",
                                        "line": [
                                            58,
                                            180
                                        ]
                                    },
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            19,
                                            25,
                                            48,
                                            70,
                                            110,
                                            111,
                                            122,
                                            123,
                                            126,
                                            127,
                                            130,
                                            131,
                                            138,
                                            151,
                                            161,
                                            162,
                                            163,
                                            164,
                                            172,
                                            185
                                        ]
                                    },
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            8,
                                            11
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            25
                                        ]
                                    }
                                },
                                "./docs/index.md": {
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            9,
                                            11,
                                            12,
                                            14,
                                            27,
                                            51
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            21
                                        ]
                                    }
                                },
                                "./use-cases/3dgan/README.md": {
                                    "MD009": {
                                        "description": "Trailing spaces",
                                        "line": [
                                            122
                                        ]
                                    },
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            29,
                                            39,
                                            111,
                                            114,
                                            153
                                        ]
                                    },
                                    "MD029": {
                                        "description": "Ordered list item prefix",
                                        "line": [
                                            69,
                                            80
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            54,
                                            69,
                                            80
                                        ]
                                    }
                                },
                                "./use-cases/README.md": {
                                    "MD009": {
                                        "description": "Trailing spaces",
                                        "line": [
                                            9
                                        ]
                                    },
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            8
                                        ]
                                    },
                                    "MD031": {
                                        "description": "Fenced code blocks should be surrounded by blank lines",
                                        "line": [
                                            10
                                        ]
                                    }
                                },
                                "./use-cases/mnist/torch/README.md": {
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            44,
                                            47
                                        ]
                                    },
                                    "MD029": {
                                        "description": "Ordered list item prefix",
                                        "line": [
                                            20,
                                            29
                                        ]
                                    },
                                    "MD032": {
                                        "description": "Lists should be surrounded by blank lines",
                                        "line": [
                                            29
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 80,
                "total_subcriteria": 5,
                "success_subcriteria": 4
            }
        },
        "QC.Lic": {
            "valid": true,
            "subcriteria": {
                "QC.Lic01": {
                    "description": "Is code licensed to be freely used, modified and distributed by others?",
                    "requirement_level": "MUST",
                    "hint": "<p>Your source code repository shall be distributed under an open source license for this subcriterion to pass successfully. Be sure to have a license file present in the code repository matching the name <code>LICENSE</code> with optional extensions (depending on the format used): <code>[.md|.rst|.txt]</code>.</p><p>Valid licenses are any of those approved either by the <a href=\"https://opensource.org/licenses\" target=\"_blank\">Open Source Initiative</a> and/or the Free Software Foundation <a href=\"https://www.gnu.org/licenses/license-list.html\" target=\"_blank\"></a>. You can also check the <a href=\"https://choosealicense.com/\" target=\"_blank\">choosealicense.com</a> site</p>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "An Open Source license found in the code repository: MIT",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/interTwin-eu/itwinai licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false},{\"key\":\"other\",\"spdx_id\":\"NOASSERTION\",\"meta\":{\"title\":null,\"source\":null,\"description\":null,\"how\":null,\"using\":null,\"featured\":false,\"hidden\":true,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/other/\",\"rules\":{\"permissions\":[],\"conditions\":[],\"limitations\":[]},\"fields\":[],\"other\":true,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2023 interTwin Community\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2023 interTwin Community\"},{\"filename\":\"COPYRIGHT\",\"content\":\"This project is licensed under MIT.\\n\\nCopyrights in this project are retained by their contributors.\\nNo copyright assignment is required to contribute to this project.\\n\",\"content_hash\":\"fc7c92616e4353936eb44819f8733479636cdd22\",\"content_normalized\":\"this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.\",\"matcher\":null,\"matched_license\":\"NOASSERTION\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    },
                                    {
                                        "key": "other",
                                        "spdx_id": "NOASSERTION",
                                        "meta": {
                                            "title": null,
                                            "source": null,
                                            "description": null,
                                            "how": null,
                                            "using": null,
                                            "featured": false,
                                            "hidden": true,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/other/",
                                        "rules": {
                                            "permissions": [],
                                            "conditions": [],
                                            "limitations": []
                                        },
                                        "fields": [],
                                        "other": true,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2023 interTwin Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2023 interTwin Community"
                                    },
                                    {
                                        "filename": "COPYRIGHT",
                                        "content": "This project is licensed under MIT.\n\nCopyrights in this project are retained by their contributors.\nNo copyright assignment is required to contribute to this project.\n",
                                        "content_hash": "fc7c92616e4353936eb44819f8733479636cdd22",
                                        "content_normalized": "this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.",
                                        "matcher": null,
                                        "matched_license": "NOASSERTION",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic01.1": {
                    "description": "Is LICENSE file placed in the root path of the code repository?",
                    "requirement_level": "MUST",
                    "hint": "Most social coding platforms require the license file to placed in the root path of the code repository, so it is a good practice to use this location by default. Allowed file names are <code>LICENSE</code>, <code>LICENSE.md</code>, <code>LICENSE.rst</code>, <code>LICENSE.txt</code>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "LICENSE file is visible at the root path of the code repository: LICENSE",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/interTwin-eu/itwinai licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false},{\"key\":\"other\",\"spdx_id\":\"NOASSERTION\",\"meta\":{\"title\":null,\"source\":null,\"description\":null,\"how\":null,\"using\":null,\"featured\":false,\"hidden\":true,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/other/\",\"rules\":{\"permissions\":[],\"conditions\":[],\"limitations\":[]},\"fields\":[],\"other\":true,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2023 interTwin Community\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2023 interTwin Community\"},{\"filename\":\"COPYRIGHT\",\"content\":\"This project is licensed under MIT.\\n\\nCopyrights in this project are retained by their contributors.\\nNo copyright assignment is required to contribute to this project.\\n\",\"content_hash\":\"fc7c92616e4353936eb44819f8733479636cdd22\",\"content_normalized\":\"this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.\",\"matcher\":null,\"matched_license\":\"NOASSERTION\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    },
                                    {
                                        "key": "other",
                                        "spdx_id": "NOASSERTION",
                                        "meta": {
                                            "title": null,
                                            "source": null,
                                            "description": null,
                                            "how": null,
                                            "using": null,
                                            "featured": false,
                                            "hidden": true,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/other/",
                                        "rules": {
                                            "permissions": [],
                                            "conditions": [],
                                            "limitations": []
                                        },
                                        "fields": [],
                                        "other": true,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2023 interTwin Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2023 interTwin Community"
                                    },
                                    {
                                        "filename": "COPYRIGHT",
                                        "content": "This project is licensed under MIT.\n\nCopyrights in this project are retained by their contributors.\nNo copyright assignment is required to contribute to this project.\n",
                                        "content_hash": "fc7c92616e4353936eb44819f8733479636cdd22",
                                        "content_normalized": "this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.",
                                        "matcher": null,
                                        "matched_license": "NOASSERTION",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02": {
                    "description": "Does the code use a license approved by Open Source Initiative?",
                    "requirement_level": "MUST",
                    "hint": "The <a href=\"https://opensource.org/\" target=\"_blank\">Open Source Initiative (OSI)</a> sets out the requirements for software to be legally declared as Open Source. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI-approved licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is approved by the Open Source Initiative",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/interTwin-eu/itwinai licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false},{\"key\":\"other\",\"spdx_id\":\"NOASSERTION\",\"meta\":{\"title\":null,\"source\":null,\"description\":null,\"how\":null,\"using\":null,\"featured\":false,\"hidden\":true,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/other/\",\"rules\":{\"permissions\":[],\"conditions\":[],\"limitations\":[]},\"fields\":[],\"other\":true,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2023 interTwin Community\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2023 interTwin Community\"},{\"filename\":\"COPYRIGHT\",\"content\":\"This project is licensed under MIT.\\n\\nCopyrights in this project are retained by their contributors.\\nNo copyright assignment is required to contribute to this project.\\n\",\"content_hash\":\"fc7c92616e4353936eb44819f8733479636cdd22\",\"content_normalized\":\"this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.\",\"matcher\":null,\"matched_license\":\"NOASSERTION\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    },
                                    {
                                        "key": "other",
                                        "spdx_id": "NOASSERTION",
                                        "meta": {
                                            "title": null,
                                            "source": null,
                                            "description": null,
                                            "how": null,
                                            "using": null,
                                            "featured": false,
                                            "hidden": true,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/other/",
                                        "rules": {
                                            "permissions": [],
                                            "conditions": [],
                                            "limitations": []
                                        },
                                        "fields": [],
                                        "other": true,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2023 interTwin Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2023 interTwin Community"
                                    },
                                    {
                                        "filename": "COPYRIGHT",
                                        "content": "This project is licensed under MIT.\n\nCopyrights in this project are retained by their contributors.\nNo copyright assignment is required to contribute to this project.\n",
                                        "content_hash": "fc7c92616e4353936eb44819f8733479636cdd22",
                                        "content_normalized": "this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.",
                                        "matcher": null,
                                        "matched_license": "NOASSERTION",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02.1": {
                    "description": "Does the code use an Open Source Initiative's popular-recognized license?",
                    "requirement_level": "MAY",
                    "hint": "The Open Source Initiative (OSI) sets out the requirements for software to be legally declared as Open Source. OSI provides a list of popular licenses that shall match most of the demands. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI popular licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is listed under the Open Source Initiative popular category",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/interTwin-eu/itwinai licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false},{\"key\":\"other\",\"spdx_id\":\"NOASSERTION\",\"meta\":{\"title\":null,\"source\":null,\"description\":null,\"how\":null,\"using\":null,\"featured\":false,\"hidden\":true,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/other/\",\"rules\":{\"permissions\":[],\"conditions\":[],\"limitations\":[]},\"fields\":[],\"other\":true,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2023 interTwin Community\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2023 interTwin Community\"},{\"filename\":\"COPYRIGHT\",\"content\":\"This project is licensed under MIT.\\n\\nCopyrights in this project are retained by their contributors.\\nNo copyright assignment is required to contribute to this project.\\n\",\"content_hash\":\"fc7c92616e4353936eb44819f8733479636cdd22\",\"content_normalized\":\"this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.\",\"matcher\":null,\"matched_license\":\"NOASSERTION\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    },
                                    {
                                        "key": "other",
                                        "spdx_id": "NOASSERTION",
                                        "meta": {
                                            "title": null,
                                            "source": null,
                                            "description": null,
                                            "how": null,
                                            "using": null,
                                            "featured": false,
                                            "hidden": true,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/other/",
                                        "rules": {
                                            "permissions": [],
                                            "conditions": [],
                                            "limitations": []
                                        },
                                        "fields": [],
                                        "other": true,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2023 interTwin Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2023 interTwin Community"
                                    },
                                    {
                                        "filename": "COPYRIGHT",
                                        "content": "This project is licensed under MIT.\n\nCopyrights in this project are retained by their contributors.\nNo copyright assignment is required to contribute to this project.\n",
                                        "content_hash": "fc7c92616e4353936eb44819f8733479636cdd22",
                                        "content_normalized": "this project is licensed under mit. copyrights in this project are retained by their contributors. no copyright assignment is required to contribute to this project.",
                                        "matcher": null,
                                        "matched_license": "NOASSERTION",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 4,
                "success_subcriteria": 4
            }
        },
        "QC.Sec": {
            "valid": false,
            "subcriteria": {
                "QC.Sec02": {
                    "description": "Is the source code passing Static Analysis Security Testing (SAST)?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the SAST tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Found security weaknesses when performing SAST checks with bandit tool",
                            "plugin": {
                                "name": "report2sqaaas-plugin-bandit",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "bandit",
                                "lang": "Python",
                                "version": "1.7.4",
                                "docker": {
                                    "dockerfile": "QC.Sec/bandit/Dockerfile",
                                    "reviewed": "2022-03-04"
                                },
                                "ci": {
                                    "name": "QC.Sec github.com/interTwin-eu/itwinai bandit",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "bandit -f json --quiet  --confidence-level high --severity-level high --recursive ."
                                    ],
                                    "stdout_text": "{\n  \"errors\": [],\n  \"generated_at\": \"2024-03-22T11:15:18Z\",\n  \"metrics\": {\n    \"./experimental/cli/itwinaicli.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 23,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./experimental/cli/mycode.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 22,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./experimental/cli/parser-bk.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 39,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./experimental/cli/parser.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 22,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/cli.py\": {\n      \"CONFIDENCE.HIGH\": 6,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 1,\n      \"SEVERITY.LOW\": 5,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 88,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/cluster.py\": {\n      \"CONFIDENCE.HIGH\": 1,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 1,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 52,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/components.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 359,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/experimental/executors.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 91,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/loggers.py\": {\n      \"CONFIDENCE.HIGH\": 1,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 377,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/parser.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 212,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/pipeline.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 82,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/serialization.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 144,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/data/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/models/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/models/mnist.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 41,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 1,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 68,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tensorflow/utils.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 9,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tests/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 10,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/tests/dummy_components.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 69,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/cluster.py\": {\n      \"CONFIDENCE.HIGH\": 2,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 181,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/data/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/inference.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 157,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/mlflow.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 59,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/models/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/models/mnist.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 54,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 787,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/types.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 49,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/torch/utils.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 64,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/types.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 9,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./src/itwinai/utils.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 149,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/components/conftest.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 63,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/components/test_components.py\": {\n      \"CONFIDENCE.HIGH\": 26,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 26,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 127,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/components/test_pipe_parser.py\": {\n      \"CONFIDENCE.HIGH\": 20,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 20,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 178,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/components/test_pipeline.py\": {\n      \"CONFIDENCE.HIGH\": 14,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 14,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 69,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/test_cli.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 21,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/test_utils.py\": {\n      \"CONFIDENCE.HIGH\": 44,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 44,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 80,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/torch/distribtued_decorator.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 88,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/torch/test_distribtued_training.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 20,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/torch/torch_dist_trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 52,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/use-cases/conftest.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 31,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/use-cases/test_3dgan.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 51,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/use-cases/test_cyclones.py\": {\n      \"CONFIDENCE.HIGH\": 2,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 21,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/use-cases/test_mnist.py\": {\n      \"CONFIDENCE.HIGH\": 6,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 6,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 60,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tutorials/ml-workflows/basic_components.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 72,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tutorials/ml-workflows/tutorial_0_basic_workflow.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 53,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tutorials/ml-workflows/tutorial_1_intermediate_workflow.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 66,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tutorials/ml-workflows/tutorial_2_advanced_workflow.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 65,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/3dgan/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 154,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/3dgan/model.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 533,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/3dgan/saver.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 69,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/3dgan/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 31,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/3dgan/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 123,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/cyclones_vgg.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 572,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 195,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/callbacks.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 57,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/macros.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 54,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/scaling.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 238,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/strategy.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 10,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/tfrecords/dataset.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 252,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/tfrecords/functions.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 89,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/transform.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 40,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/lib/utils.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 60,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 85,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/cyclones/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 128,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/tensorflow/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 33,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/tensorflow/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 29,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/tensorflow/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 34,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch-lightning/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 79,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch-lightning/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 31,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch-lightning/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 33,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch-lightning/utils.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 84,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 98,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch/model.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 18,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch/saver.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 47,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/mnist/torch/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 31,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/zebra2horse/cyclegan.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 380,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/zebra2horse/dataloader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 60,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/zebra2horse/pix2pix.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 85,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/zebra2horse/train.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 16,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./use-cases/zebra2horse/trainer.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 37,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"_totals\": {\n      \"CONFIDENCE.HIGH\": 138,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 2,\n      \"SEVERITY.LOW\": 136,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 8119,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    }\n  },\n  \"results\": [\n    {\n      \"code\": \"105         f\\\"kill -9 $(lsof -t -i:{port})\\\",\\n106         shell=True,\\n107         check=True,\\n108         stderr=subprocess.DEVNULL\\n109     )\\n110 \\n111 \\n\",\n      \"col_offset\": 4,\n      \"filename\": \"./src/itwinai/cli.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 106,\n      \"line_range\": [\n        104,\n        105,\n        106,\n        107,\n        108\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.7.4/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"24 def handle_sigusr1(signum, frame):\\n25     os.system(f'scontrol requeue {os.getenv(\\\"SLURM_JOB_ID\\\")}')\\n26     exit()\\n\",\n      \"col_offset\": 4,\n      \"filename\": \"./src/itwinai/cluster.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"Starting a process with a shell, possible injection detected, security issue.\",\n      \"line_number\": 25,\n      \"line_range\": [\n        25\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.7.4/plugins/b605_start_process_with_a_shell.html\",\n      \"test_id\": \"B605\",\n      \"test_name\": \"start_process_with_a_shell\"\n    }\n  ]\n}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/79/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "errors": [],
                                "generated_at": "2024-03-22T11:15:18Z",
                                "metrics": {
                                    "./experimental/cli/itwinaicli.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 23,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./experimental/cli/mycode.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 22,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./experimental/cli/parser-bk.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 39,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./experimental/cli/parser.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 22,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/cli.py": {
                                        "CONFIDENCE.HIGH": 6,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 1,
                                        "SEVERITY.LOW": 5,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 88,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/cluster.py": {
                                        "CONFIDENCE.HIGH": 1,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 1,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 52,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/components.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 359,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/experimental/executors.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 91,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/loggers.py": {
                                        "CONFIDENCE.HIGH": 1,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 1,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 377,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/parser.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 212,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/pipeline.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 82,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/serialization.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 144,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/data/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/models/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/models/mnist.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 41,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/trainer.py": {
                                        "CONFIDENCE.HIGH": 1,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 1,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 68,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tensorflow/utils.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 9,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tests/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 10,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/tests/dummy_components.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 69,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/cluster.py": {
                                        "CONFIDENCE.HIGH": 2,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 181,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/data/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/inference.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 157,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/mlflow.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 59,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/models/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/models/mnist.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 54,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 787,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/types.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 49,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/torch/utils.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 64,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/types.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 9,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./src/itwinai/utils.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 149,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/components/conftest.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 63,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/components/test_components.py": {
                                        "CONFIDENCE.HIGH": 26,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 26,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 127,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/components/test_pipe_parser.py": {
                                        "CONFIDENCE.HIGH": 20,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 20,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 178,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/components/test_pipeline.py": {
                                        "CONFIDENCE.HIGH": 14,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 14,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 69,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/test_cli.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 21,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/test_utils.py": {
                                        "CONFIDENCE.HIGH": 44,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 44,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 80,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/torch/distribtued_decorator.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 88,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/torch/test_distribtued_training.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 20,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/torch/torch_dist_trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 52,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/use-cases/conftest.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 31,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/use-cases/test_3dgan.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 51,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/use-cases/test_cyclones.py": {
                                        "CONFIDENCE.HIGH": 2,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 21,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/use-cases/test_mnist.py": {
                                        "CONFIDENCE.HIGH": 6,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 6,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 60,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tutorials/ml-workflows/basic_components.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 72,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tutorials/ml-workflows/tutorial_0_basic_workflow.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 53,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tutorials/ml-workflows/tutorial_1_intermediate_workflow.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 66,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tutorials/ml-workflows/tutorial_2_advanced_workflow.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 65,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/3dgan/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 154,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/3dgan/model.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 533,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/3dgan/saver.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 69,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/3dgan/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 31,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/3dgan/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 123,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/cyclones_vgg.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 572,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 195,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/callbacks.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 57,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/macros.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 54,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/scaling.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 238,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/strategy.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 10,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/tfrecords/dataset.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 252,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/tfrecords/functions.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 89,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/transform.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 40,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/lib/utils.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 60,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 85,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/cyclones/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 128,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/tensorflow/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 33,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/tensorflow/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 29,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/tensorflow/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 34,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch-lightning/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 79,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch-lightning/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 31,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch-lightning/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 33,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch-lightning/utils.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 84,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 98,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch/model.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 18,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch/saver.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 47,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/mnist/torch/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 31,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/zebra2horse/cyclegan.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 380,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/zebra2horse/dataloader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 60,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/zebra2horse/pix2pix.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 85,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/zebra2horse/train.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 16,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./use-cases/zebra2horse/trainer.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 37,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "_totals": {
                                        "CONFIDENCE.HIGH": 138,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 2,
                                        "SEVERITY.LOW": 136,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 8119,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    }
                                },
                                "results": [
                                    {
                                        "code": "105         f\"kill -9 $(lsof -t -i:{port})\",\n106         shell=True,\n107         check=True,\n108         stderr=subprocess.DEVNULL\n109     )\n110 \n111 \n",
                                        "col_offset": 4,
                                        "filename": "./src/itwinai/cli.py",
                                        "issue_confidence": "HIGH",
                                        "issue_cwe": {
                                            "id": 78,
                                            "link": "https://cwe.mitre.org/data/definitions/78.html"
                                        },
                                        "issue_severity": "HIGH",
                                        "issue_text": "subprocess call with shell=True identified, security issue.",
                                        "line_number": 106,
                                        "line_range": [
                                            104,
                                            105,
                                            106,
                                            107,
                                            108
                                        ],
                                        "more_info": "https://bandit.readthedocs.io/en/1.7.4/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                                        "test_id": "B602",
                                        "test_name": "subprocess_popen_with_shell_equals_true"
                                    },
                                    {
                                        "code": "24 def handle_sigusr1(signum, frame):\n25     os.system(f'scontrol requeue {os.getenv(\"SLURM_JOB_ID\")}')\n26     exit()\n",
                                        "col_offset": 4,
                                        "filename": "./src/itwinai/cluster.py",
                                        "issue_confidence": "HIGH",
                                        "issue_cwe": {
                                            "id": 78,
                                            "link": "https://cwe.mitre.org/data/definitions/78.html"
                                        },
                                        "issue_severity": "HIGH",
                                        "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
                                        "line_number": 25,
                                        "line_range": [
                                            25
                                        ],
                                        "more_info": "https://bandit.readthedocs.io/en/1.7.4/plugins/b605_start_process_with_a_shell.html",
                                        "test_id": "B605",
                                        "test_name": "start_process_with_a_shell"
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Sty": {
            "valid": false,
            "subcriteria": {
                "QC.Sty01": {
                    "description": "Is the software product following a style standard for Python files?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the linter tool",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Python files are compliant with flake8 (pycodestyle, pyflakes, mccabe) standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-flake8",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "flake8",
                                "lang": "Python",
                                "version": "4.0.1 (mccabe: 0.6.1, pycodestyle: 2.8.0, pyflakes: 2.4.0)",
                                "docker": {
                                    "image": "pipelinecomponents/flake8:0.9.0",
                                    "reviewed": "2022-03-04"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/interTwin-eu/itwinai flake8",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "flake8 ."
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/88/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": ""
                        },
                        {
                            "valid": true,
                            "message": "Dockerfile files are compliant with hadolint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "hadolint",
                                "lang": "Dockerfile",
                                "version": "v2.8.0-0-g398770f-dirty",
                                "docker": {
                                    "image": "hadolint/hadolint:2.8.0-alpine",
                                    "reviewed": "2021-06-21"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/interTwin-eu/itwinai hadolint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "hadolint use-cases/mnist/torch/Dockerfile --failure-threshold error"
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/97/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": true,
                            "message": "JSON files are compliant with jsonlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "jsonlint",
                                "lang": "JSON",
                                "version": "1.6.3",
                                "docker": {
                                    "dockerfile": "QC.Sty/jsonlint/Dockerfile",
                                    "reviewed": "2021-11-23"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/interTwin-eu/itwinai jsonlint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "jsonlint-cli \"**/*.json\""
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": false,
                            "message": "Ruby files are not fully compliant with rubocop standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "rubocop",
                                "lang": "Ruby",
                                "version": "1.36.0",
                                "docker": {
                                    "dockerfile": "QC.Sty/rubocop/Dockerfile",
                                    "reviewed": "2022-10-07"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/interTwin-eu/itwinai rubocop",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "rubocop"
                                    ],
                                    "stdout_text": "Inspecting 1 file\nC\n\nOffenses:\n\ndocs/Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nsource 'https://rubygems.org'\n^\ndocs/Gemfile:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"jekyll\", \"~> 4.3\" # installed by `gem jekyll`\n    ^^^^^^^^\ndocs/Gemfile:3:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"jekyll\", \"~> 4.3\" # installed by `gem jekyll`\n              ^^^^^^^^\ndocs/Gemfile:6:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"just-the-docs\", \"0.5.0\" # pinned to the current release\n    ^^^^^^^^^^^^^^^\ndocs/Gemfile:6:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"just-the-docs\", \"0.5.0\" # pinned to the current release\n                     ^^^^^^^\n\n1 file inspected, 5 offenses detected, 5 offenses autocorrectable",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/115/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Uni": {
            "valid": false,
            "subcriteria": {
                "QC.Uni01": {
                    "description": "Are the tests passing through an automated means?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the failing test cases found by the {tool_name} tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Test cases are not passing using bash testing framework",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "commands",
                                "lang": "default",
                                "version": "not-provided",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-micromamba:1.5.3-1"
                                },
                                "ci": {
                                    "name": "QC.Uni github.com/interTwin-eu/itwinai commands",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "make torch-cpu",
                                        "make tf-2.13",
                                        "micromamba run -p ./.venv-pytorch pip install .[dev]",
                                        "micromamba run -p ./.venv-pytorch pytest -v ./tests/ -m \"not slurm and not memory_heavy\""
                                    ],
                                    "stdout_text": "micromamba env create -p ./.venv-pytorch --file env-files/torch/pytorch-env-cpu.yml -y\n\nTransaction\n\n  Prefix: /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch\n\n  Updating specs:\n\n   - python=3.9.12\n   - pytorch=1.13.1\n   - torchvision=0.14.1\n   - cpuonly\n   - lightning=2.0.0\n   - torchmetrics\n\n\n  Package                               Version  Build                  Channel          Size\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  Install:\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  + pytorch-mutex                           1.0  cpu                    pytorch           3kB\n  + cpuonly                                 2.0  0                      pytorch           2kB\n  + _libgcc_mutex                           0.1  conda_forge            conda-forge       3kB\n  + python_abi                              3.9  4_cp39                 conda-forge       6kB\n  + libstdcxx-ng                         13.2.0  h7e041cc_5             conda-forge       4MB\n  + ld_impl_linux-64                       2.40  h41732ed_0             conda-forge     705kB\n  + mkl-include                        2024.0.0  ha957f24_49657         conda-forge     768kB\n  + ca-certificates                    2024.2.2  hbcca054_0             conda-forge     155kB\n  + libgcc-ng                            13.2.0  h807b86a_5             conda-forge     771kB\n  + libzlib                              1.2.13  hd590300_5             conda-forge      62kB\n  + zstd                                  1.5.5  hfc55251_0             conda-forge     545kB\n  + llvm-openmp                          18.1.2  h4dfa4b3_0             conda-forge      60MB\n  + _openmp_mutex                           4.5  2_kmp_llvm             conda-forge       6kB\n  + xorg-libxdmcp                         1.1.3  h7f98852_0             conda-forge      19kB\n  + pthread-stubs                           0.4  h36c2ea0_1001          conda-forge       6kB\n  + libexpat                              2.6.2  h59595ed_0             conda-forge      74kB\n  + xorg-libxau                          1.0.11  hd590300_0             conda-forge      14kB\n  + icu                                    73.2  h59595ed_0             conda-forge      12MB\n  + libdeflate                             1.17  h0b41bf4_0             conda-forge      65kB\n  + lerc                                  4.0.0  h27087fc_0             conda-forge     282kB\n  + libwebp-base                          1.3.2  hd590300_0             conda-forge     402kB\n  + libiconv                               1.17  hd590300_2             conda-forge     706kB\n  + lame                                  3.100  h166bdaf_1003          conda-forge     508kB\n  + nettle                                  3.6  he412f7d_0             conda-forge       7MB\n  + gmp                                   6.3.0  h59595ed_1             conda-forge     570kB\n  + libgfortran5                         13.2.0  ha4646dd_5             conda-forge       1MB\n  + libpng                               1.6.43  h2797004_0             conda-forge     288kB\n  + jpeg                                     9e  h0b41bf4_3             conda-forge     240kB\n  + zlib                                 1.2.13  hd590300_5             conda-forge      93kB\n  + xz                                    5.2.6  h166bdaf_0             conda-forge     418kB\n  + tk                                   8.6.13  noxft_h4845f30_101     conda-forge       3MB\n  + libsqlite                            3.45.2  h2797004_0             conda-forge     857kB\n  + openssl                               3.2.1  hd590300_1             conda-forge       3MB\n  + ncurses                        6.4.20240210  h59595ed_0             conda-forge     896kB\n  + libuuid                              2.38.1  h0b41bf4_0             conda-forge      34kB\n  + libnsl                                2.0.1  hd590300_0             conda-forge      33kB\n  + libffi                                3.4.2  h7f98852_5             conda-forge      58kB\n  + bzip2                                 1.0.8  hd590300_5             conda-forge     254kB\n  + yaml                                  0.2.5  h7f98852_2             conda-forge      89kB\n  + expat                                 2.6.2  h59595ed_0             conda-forge     138kB\n  + libxcb                                 1.13  h7f98852_1004          conda-forge     400kB\n  + gnutls                               3.6.13  h85f3911_1             conda-forge       2MB\n  + libgfortran-ng                       13.2.0  h69a702a_5             conda-forge      24kB\n  + freetype                             2.12.1  h267a509_2             conda-forge     635kB\n  + openh264                              2.1.1  h780b84a_0             conda-forge       2MB\n  + libxml2                              2.12.6  h232c23b_0             conda-forge     704kB\n  + libtiff                               4.5.0  h6adf6a1_2             conda-forge     407kB\n  + readline                                8.2  h8228510_1             conda-forge     281kB\n  + pcre2                                 10.43  hcad00b1_0             conda-forge     951kB\n  + libhwloc                              2.9.3  default_h554bfaf_1009  conda-forge       3MB\n  + openjpeg                              2.5.0  hfec8fc6_2             conda-forge     352kB\n  + lcms2                                  2.15  hfd0df8a_0             conda-forge     241kB\n  + sqlite                               3.45.2  h2c6b66d_0             conda-forge     848kB\n  + libglib                              2.80.0  hf2295e7_1             conda-forge       3MB\n  + tbb                               2021.11.0  h00ab1b0_1             conda-forge     196kB\n  + dbus                                 1.13.6  h5008d03_3             conda-forge     619kB\n  + mkl                                2024.0.0  ha957f24_49657         conda-forge     126MB\n  + mkl-devel                          2024.0.0  ha770c72_49657         conda-forge      32kB\n  + libblas                               3.9.0  21_linux64_mkl         conda-forge      15kB\n  + libcblas                              3.9.0  21_linux64_mkl         conda-forge      15kB\n  + liblapack                             3.9.0  21_linux64_mkl         conda-forge      15kB\n  + liblapacke                            3.9.0  21_linux64_mkl         conda-forge      15kB\n  + blas-devel                            3.9.0  21_linux64_mkl         conda-forge      14kB\n  + blas                                  2.121  mkl                    conda-forge      15kB\n  + tzdata                                2024a  h0c530f3_0             conda-forge     120kB\n  + ffmpeg                                  4.3  hf484d3e_0             pytorch          10MB\n  + python                               3.9.12  h2660328_1_cpython     conda-forge      28MB\n  + wheel                                0.43.0  pyhd8ed1ab_0           conda-forge      58kB\n  + setuptools                           69.2.0  pyhd8ed1ab_0           conda-forge     471kB\n  + pip                                    24.0  pyhd8ed1ab_0           conda-forge       1MB\n  + pycparser                              2.21  pyhd8ed1ab_0           conda-forge     103kB\n  + more-itertools                       10.2.0  pyhd8ed1ab_0           conda-forge      54kB\n  + distlib                               0.3.8  pyhd8ed1ab_0           conda-forge     275kB\n  + jeepney                               0.8.0  pyhd8ed1ab_0           conda-forge      37kB\n  + exceptiongroup                        1.2.0  pyhd8ed1ab_2           conda-forge      21kB\n  + sniffio                               1.3.1  pyhd8ed1ab_0           conda-forge      15kB\n  + zipp                                 3.17.0  pyhd8ed1ab_0           conda-forge      19kB\n  + pyjwt                                 2.8.0  pyhd8ed1ab_1           conda-forge      25kB\n  + mdurl                                 0.1.2  pyhd8ed1ab_0           conda-forge      15kB\n  + ptyprocess                            0.7.0  pyhd3deb0d_0           conda-forge      17kB\n  + trove-classifiers                  2024.3.3  pyhd8ed1ab_0           conda-forge      18kB\n  + python-fastjsonschema                2.19.1  pyhd8ed1ab_0           conda-forge     225kB\n  + platformdirs                          4.2.0  pyhd8ed1ab_0           conda-forge      20kB\n  + pkginfo                              1.10.0  pyhd8ed1ab_0           conda-forge      28kB\n  + tomlkit                              0.12.4  pyha770c72_0           conda-forge      37kB\n  + shellingham                           1.5.4  pyhd8ed1ab_0           conda-forge      15kB\n  + charset-normalizer                    3.3.2  pyhd8ed1ab_0           conda-forge      47kB\n  + idna                                    3.6  pyhd8ed1ab_0           conda-forge      50kB\n  + certifi                            2024.2.2  pyhd8ed1ab_0           conda-forge     161kB\n  + pygments                             2.17.2  pyhd8ed1ab_0           conda-forge     860kB\n  + colorama                              0.4.6  pyhd8ed1ab_0           conda-forge      25kB\n  + pysocks                               1.7.1  pyha2e5f31_6           conda-forge      19kB\n  + wcwidth                              0.2.13  pyhd8ed1ab_0           conda-forge      33kB\n  + six                                  1.16.0  pyh6c4a22f_0           conda-forge      14kB\n  + pytz                                 2024.1  pyhd8ed1ab_0           conda-forge     189kB\n  + itsdangerous                          2.1.2  pyhd8ed1ab_0           conda-forge      16kB\n  + types-python-dateutil        2.9.0.20240316  pyhd8ed1ab_0           conda-forge      22kB\n  + soupsieve                               2.5  pyhd8ed1ab_1           conda-forge      37kB\n  + filelock                             3.13.1  pyhd8ed1ab_0           conda-forge      16kB\n  + readchar                              4.0.5  pyhd8ed1ab_0           conda-forge      14kB\n  + python-installer                      0.7.0  pyhd8ed1ab_0           conda-forge     233kB\n  + poetry-core                           1.9.0  pyhd8ed1ab_0           conda-forge     227kB\n  + tomli                                 2.0.1  pyhd8ed1ab_0           conda-forge      16kB\n  + crashtest                             0.4.1  pyhd8ed1ab_0           conda-forge      10kB\n  + traitlets                            5.14.2  pyhd8ed1ab_0           conda-forge     110kB\n  + python-multipart                      0.0.9  pyhd8ed1ab_0           conda-forge      26kB\n  + python-editor                         1.0.4  py_0                   conda-forge       9kB\n  + fsspec                            2023.12.2  pyhca7485f_0           conda-forge     127kB\n  + ordered-set                           4.1.0  pyhd8ed1ab_0           conda-forge      11kB\n  + websocket-client                      1.7.0  pyhd8ed1ab_0           conda-forge      47kB\n  + click                                 8.1.7  unix_pyh707e725_0      conda-forge      84kB\n  + typing_extensions                    4.10.0  pyha770c72_0           conda-forge      37kB\n  + packaging                              24.0  pyhd8ed1ab_0           conda-forge      50kB\n  + jaraco.classes                        3.3.1  pyhd8ed1ab_0           conda-forge      12kB\n  + importlib-metadata                    7.1.0  pyha770c72_0           conda-forge      27kB\n  + markdown-it-py                        3.0.0  pyhd8ed1ab_0           conda-forge      64kB\n  + pexpect                               4.9.0  pyhd8ed1ab_0           conda-forge      54kB\n  + tqdm                                 4.66.2  pyhd8ed1ab_0           conda-forge      90kB\n  + python-dateutil                       2.9.0  pyhd8ed1ab_0           conda-forge     223kB\n  + blessed                              1.19.1  pyhe4f9e05_2           conda-forge      52kB\n  + beautifulsoup4                       4.12.3  pyha770c72_0           conda-forge     118kB\n  + virtualenv                          20.25.1  pyhd8ed1ab_0           conda-forge       3MB\n  + poetry-plugin-export                  1.7.1  pyhd8ed1ab_0           conda-forge      16kB\n  + pyproject_hooks                       1.0.0  pyhd8ed1ab_0           conda-forge      14kB\n  + h11                                  0.14.0  pyhd8ed1ab_0           conda-forge      48kB\n  + anyio                                 4.3.0  pyhd8ed1ab_0           conda-forge     102kB\n  + typing-extensions                    4.10.0  hd8ed1ab_0             conda-forge      10kB\n  + lightning-utilities                  0.11.0  pyhd8ed1ab_0           conda-forge      27kB\n  + importlib_metadata                    7.1.0  hd8ed1ab_0             conda-forge       9kB\n  + rich                                 13.7.1  pyhd8ed1ab_0           conda-forge     184kB\n  + croniter                             1.3.15  pyhd8ed1ab_0           conda-forge      36kB\n  + arrow                                 1.3.0  pyhd8ed1ab_0           conda-forge     100kB\n  + dateutils                            0.6.12  py_0                   conda-forge       9kB\n  + python-build                          1.1.1  pyhd8ed1ab_0           conda-forge      23kB\n  + starlette                            0.22.0  pyhd8ed1ab_0           conda-forge      50kB\n  + starsessions                          1.3.0  pyhd8ed1ab_0           conda-forge      13kB\n  + brotli-python                         1.1.0  py39h3d6467e_1         conda-forge     350kB\n  + pillow                                9.4.0  py39h2320bf1_1         conda-forge      46MB\n  + msgpack-python                        1.0.7  py39h7633fee_0         conda-forge     197kB\n  + orjson                               3.9.15  py39h9fdd4d6_0         conda-forge     275kB\n  + markupsafe                            2.1.5  py39hd1e30aa_0         conda-forge      24kB\n  + websockets                           11.0.3  py39hd1e30aa_1         conda-forge     157kB\n  + pyyaml                                6.0.1  py39hd1e30aa_1         conda-forge     178kB\n  + psutil                                5.9.8  py39hd1e30aa_0         conda-forge     363kB\n  + numpy                                1.26.4  py39h474f0d3_0         conda-forge       7MB\n  + cffi                                 1.16.0  py39h7a31438_0         conda-forge     240kB\n  + uvicorn                              0.29.0  py39hf3d152e_0         conda-forge      97kB\n  + pydantic                            1.10.14  py39hd1e30aa_0         conda-forge       2MB\n  + rapidfuzz                             3.6.2  py39h3d6467e_0         conda-forge       2MB\n  + cryptography                         42.0.5  py39hd4f0224_0         conda-forge       2MB\n  + secretstorage                         3.3.3  py39hf3d152e_2         conda-forge      27kB\n  + keyring                              24.3.1  py39hf3d152e_0         conda-forge      63kB\n  + pytorch                              1.13.1  py3.9_cpu_0            pytorch          86MB\n  + urllib3                               2.2.1  pyhd8ed1ab_0           conda-forge      95kB\n  + deepdiff                              6.7.1  pyhd8ed1ab_0           conda-forge      68kB\n  + jinja2                                3.1.3  pyhd8ed1ab_0           conda-forge     112kB\n  + fastapi                              0.88.0  pyhd8ed1ab_0           conda-forge      47kB\n  + cleo                                  2.1.0  pyhd8ed1ab_0           conda-forge      61kB\n  + torchmetrics                          1.3.2  pyhd8ed1ab_0           conda-forge     342kB\n  + requests                             2.31.0  pyhd8ed1ab_0           conda-forge      57kB\n  + requests-toolbelt                     1.0.0  pyhd8ed1ab_0           conda-forge      44kB\n  + cachecontrol                         0.14.0  pyhd8ed1ab_0           conda-forge      24kB\n  + lightning-cloud                      0.5.39  pyhd8ed1ab_0           conda-forge     205kB\n  + pytorch-lightning                     2.2.1  pyhd8ed1ab_0           conda-forge     440kB\n  + cachecontrol-with-filecache          0.14.0  pyhd8ed1ab_0           conda-forge       7kB\n  + dulwich                              0.21.7  py39hd1e30aa_0         conda-forge     714kB\n  + torchvision                          0.14.1  py39_cpu               pytorch           7MB\n  + poetry                                1.8.2  linux_pyha804496_0     conda-forge     167kB\n  + inquirer                              3.1.4  pyhd8ed1ab_0           conda-forge      21kB\n  + lightning                             2.0.0  pyhd8ed1ab_0           conda-forge       1MB\n\n  Summary:\n\n  Install: 170 packages\n\n  Total download: 446MB\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\nTransaction starting\nLinking pytorch-mutex-1.0-cpu\nLinking cpuonly-2.0-0\nLinking _libgcc_mutex-0.1-conda_forge\nLinking python_abi-3.9-4_cp39\nLinking libstdcxx-ng-13.2.0-h7e041cc_5\nLinking ld_impl_linux-64-2.40-h41732ed_0\nLinking mkl-include-2024.0.0-ha957f24_49657\nLinking ca-certificates-2024.2.2-hbcca054_0\nLinking libgcc-ng-13.2.0-h807b86a_5\nLinking libzlib-1.2.13-hd590300_5\nLinking zstd-1.5.5-hfc55251_0\nLinking llvm-openmp-18.1.2-h4dfa4b3_0\nLinking _openmp_mutex-4.5-2_kmp_llvm\nLinking xorg-libxdmcp-1.1.3-h7f98852_0\nLinking pthread-stubs-0.4-h36c2ea0_1001\nLinking libexpat-2.6.2-h59595ed_0\nLinking xorg-libxau-1.0.11-hd590300_0\nLinking icu-73.2-h59595ed_0\nLinking libdeflate-1.17-h0b41bf4_0\nLinking lerc-4.0.0-h27087fc_0\nLinking libwebp-base-1.3.2-hd590300_0\nLinking libiconv-1.17-hd590300_2\nLinking lame-3.100-h166bdaf_1003\nLinking nettle-3.6-he412f7d_0\nLinking gmp-6.3.0-h59595ed_1\nLinking libgfortran5-13.2.0-ha4646dd_5\nLinking libpng-1.6.43-h2797004_0\nLinking jpeg-9e-h0b41bf4_3\nLinking zlib-1.2.13-hd590300_5\nLinking xz-5.2.6-h166bdaf_0\nLinking tk-8.6.13-noxft_h4845f30_101\nLinking libsqlite-3.45.2-h2797004_0\nLinking openssl-3.2.1-hd590300_1\nLinking ncurses-6.4.20240210-h59595ed_0\nLinking libuuid-2.38.1-h0b41bf4_0\nLinking libnsl-2.0.1-hd590300_0\nLinking libffi-3.4.2-h7f98852_5\nLinking bzip2-1.0.8-hd590300_5\nLinking yaml-0.2.5-h7f98852_2\nLinking expat-2.6.2-h59595ed_0\nLinking libxcb-1.13-h7f98852_1004\nLinking gnutls-3.6.13-h85f3911_1\nLinking libgfortran-ng-13.2.0-h69a702a_5\nLinking freetype-2.12.1-h267a509_2\nLinking openh264-2.1.1-h780b84a_0\nLinking libxml2-2.12.6-h232c23b_0\nLinking libtiff-4.5.0-h6adf6a1_2\nLinking readline-8.2-h8228510_1\nLinking pcre2-10.43-hcad00b1_0\nLinking libhwloc-2.9.3-default_h554bfaf_1009\nLinking openjpeg-2.5.0-hfec8fc6_2\nLinking lcms2-2.15-hfd0df8a_0\nLinking sqlite-3.45.2-h2c6b66d_0\nLinking libglib-2.80.0-hf2295e7_1\nLinking tbb-2021.11.0-h00ab1b0_1\nLinking dbus-1.13.6-h5008d03_3\nLinking mkl-2024.0.0-ha957f24_49657\nLinking mkl-devel-2024.0.0-ha770c72_49657\nLinking libblas-3.9.0-21_linux64_mkl\nLinking libcblas-3.9.0-21_linux64_mkl\nLinking liblapack-3.9.0-21_linux64_mkl\nLinking liblapacke-3.9.0-21_linux64_mkl\nLinking blas-devel-3.9.0-21_linux64_mkl\nLinking blas-2.121-mkl\nLinking tzdata-2024a-h0c530f3_0\nLinking ffmpeg-4.3-hf484d3e_0\nLinking python-3.9.12-h2660328_1_cpython\nLinking wheel-0.43.0-pyhd8ed1ab_0\nLinking setuptools-69.2.0-pyhd8ed1ab_0\nLinking pip-24.0-pyhd8ed1ab_0\nLinking pycparser-2.21-pyhd8ed1ab_0\nLinking more-itertools-10.2.0-pyhd8ed1ab_0\nLinking distlib-0.3.8-pyhd8ed1ab_0\nLinking jeepney-0.8.0-pyhd8ed1ab_0\nLinking exceptiongroup-1.2.0-pyhd8ed1ab_2\nLinking sniffio-1.3.1-pyhd8ed1ab_0\nLinking zipp-3.17.0-pyhd8ed1ab_0\nLinking pyjwt-2.8.0-pyhd8ed1ab_1\nLinking mdurl-0.1.2-pyhd8ed1ab_0\nLinking ptyprocess-0.7.0-pyhd3deb0d_0\nLinking trove-classifiers-2024.3.3-pyhd8ed1ab_0\nLinking python-fastjsonschema-2.19.1-pyhd8ed1ab_0\nLinking platformdirs-4.2.0-pyhd8ed1ab_0\nLinking pkginfo-1.10.0-pyhd8ed1ab_0\nLinking tomlkit-0.12.4-pyha770c72_0\nLinking shellingham-1.5.4-pyhd8ed1ab_0\nLinking charset-normalizer-3.3.2-pyhd8ed1ab_0\nLinking idna-3.6-pyhd8ed1ab_0\nLinking certifi-2024.2.2-pyhd8ed1ab_0\nLinking pygments-2.17.2-pyhd8ed1ab_0\nLinking colorama-0.4.6-pyhd8ed1ab_0\nLinking pysocks-1.7.1-pyha2e5f31_6\nLinking wcwidth-0.2.13-pyhd8ed1ab_0\nLinking six-1.16.0-pyh6c4a22f_0\nLinking pytz-2024.1-pyhd8ed1ab_0\nLinking itsdangerous-2.1.2-pyhd8ed1ab_0\nLinking types-python-dateutil-2.9.0.20240316-pyhd8ed1ab_0\nLinking soupsieve-2.5-pyhd8ed1ab_1\nLinking filelock-3.13.1-pyhd8ed1ab_0\nLinking readchar-4.0.5-pyhd8ed1ab_0\nLinking python-installer-0.7.0-pyhd8ed1ab_0\nLinking poetry-core-1.9.0-pyhd8ed1ab_0\nLinking tomli-2.0.1-pyhd8ed1ab_0\nLinking crashtest-0.4.1-pyhd8ed1ab_0\nLinking traitlets-5.14.2-pyhd8ed1ab_0\nLinking python-multipart-0.0.9-pyhd8ed1ab_0\nLinking python-editor-1.0.4-py_0\nLinking fsspec-2023.12.2-pyhca7485f_0\nLinking ordered-set-4.1.0-pyhd8ed1ab_0\nLinking websocket-client-1.7.0-pyhd8ed1ab_0\nLinking click-8.1.7-unix_pyh707e725_0\nLinking typing_extensions-4.10.0-pyha770c72_0\nLinking packaging-24.0-pyhd8ed1ab_0\nLinking jaraco.classes-3.3.1-pyhd8ed1ab_0\nLinking importlib-metadata-7.1.0-pyha770c72_0\nLinking markdown-it-py-3.0.0-pyhd8ed1ab_0\nLinking pexpect-4.9.0-pyhd8ed1ab_0\nLinking tqdm-4.66.2-pyhd8ed1ab_0\nLinking python-dateutil-2.9.0-pyhd8ed1ab_0\nLinking blessed-1.19.1-pyhe4f9e05_2\nLinking beautifulsoup4-4.12.3-pyha770c72_0\nLinking virtualenv-20.25.1-pyhd8ed1ab_0\nLinking poetry-plugin-export-1.7.1-pyhd8ed1ab_0\nLinking pyproject_hooks-1.0.0-pyhd8ed1ab_0\nLinking h11-0.14.0-pyhd8ed1ab_0\nLinking anyio-4.3.0-pyhd8ed1ab_0\nLinking typing-extensions-4.10.0-hd8ed1ab_0\nLinking lightning-utilities-0.11.0-pyhd8ed1ab_0\nLinking importlib_metadata-7.1.0-hd8ed1ab_0\nLinking rich-13.7.1-pyhd8ed1ab_0\nLinking croniter-1.3.15-pyhd8ed1ab_0\nLinking arrow-1.3.0-pyhd8ed1ab_0\nLinking dateutils-0.6.12-py_0\nLinking python-build-1.1.1-pyhd8ed1ab_0\nLinking starlette-0.22.0-pyhd8ed1ab_0\nLinking starsessions-1.3.0-pyhd8ed1ab_0\nLinking brotli-python-1.1.0-py39h3d6467e_1\nLinking pillow-9.4.0-py39h2320bf1_1\nLinking msgpack-python-1.0.7-py39h7633fee_0\nLinking orjson-3.9.15-py39h9fdd4d6_0\nLinking markupsafe-2.1.5-py39hd1e30aa_0\nLinking websockets-11.0.3-py39hd1e30aa_1\nLinking pyyaml-6.0.1-py39hd1e30aa_1\nLinking psutil-5.9.8-py39hd1e30aa_0\nLinking numpy-1.26.4-py39h474f0d3_0\nLinking cffi-1.16.0-py39h7a31438_0\nLinking uvicorn-0.29.0-py39hf3d152e_0\nLinking pydantic-1.10.14-py39hd1e30aa_0\nLinking rapidfuzz-3.6.2-py39h3d6467e_0\nLinking cryptography-42.0.5-py39hd4f0224_0\nLinking secretstorage-3.3.3-py39hf3d152e_2\nLinking keyring-24.3.1-py39hf3d152e_0\nLinking pytorch-1.13.1-py3.9_cpu_0\nLinking urllib3-2.2.1-pyhd8ed1ab_0\nLinking deepdiff-6.7.1-pyhd8ed1ab_0\nLinking jinja2-3.1.3-pyhd8ed1ab_0\nLinking fastapi-0.88.0-pyhd8ed1ab_0\nLinking cleo-2.1.0-pyhd8ed1ab_0\nLinking torchmetrics-1.3.2-pyhd8ed1ab_0\nLinking requests-2.31.0-pyhd8ed1ab_0\nLinking requests-toolbelt-1.0.0-pyhd8ed1ab_0\nLinking cachecontrol-0.14.0-pyhd8ed1ab_0\nLinking lightning-cloud-0.5.39-pyhd8ed1ab_0\nLinking pytorch-lightning-2.2.1-pyhd8ed1ab_0\nLinking cachecontrol-with-filecache-0.14.0-pyhd8ed1ab_0\nLinking dulwich-0.21.7-py39hd1e30aa_0\nLinking torchvision-0.14.1-py39_cpu\nLinking poetry-1.8.2-linux_pyha804496_0\nLinking inquirer-3.1.4-pyhd8ed1ab_0\nLinking lightning-2.0.0-pyhd8ed1ab_0\n\nTransaction finished\n\nTo activate this environment, use:\n\n    micromamba activate /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch\n\nOr to execute a single command in this environment, use:\n\n    micromamba run -p /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch mycommand\n\nmicromamba run -p ./.venv-pytorch python -m pip install -e .\nObtaining file:///sqaaas-build/github.com/interTwin-eu/itwinai\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nCollecting wandb>=0.15.11 (from itwinai==0.1)\n  Downloading wandb-0.16.4-py3-none-any.whl.metadata (10 kB)\nCollecting mlflow>=2.7 (from itwinai==0.1)\n  Downloading mlflow-2.11.3-py3-none-any.whl.metadata (15 kB)\nCollecting jsonargparse>=4.17.0 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Downloading jsonargparse-4.27.7-py3-none-any.whl.metadata (12 kB)\nRequirement already satisfied: pyyaml>=6.0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (6.0.1)\nCollecting omegaconf>=2.3.0 (from itwinai==0.1)\n  Downloading omegaconf-2.3.0-py3-none-any.whl.metadata (3.9 kB)\nCollecting submitit>=1.4.6 (from itwinai==0.1)\n  Downloading submitit-1.5.1-py3-none-any.whl.metadata (8.0 kB)\nCollecting typing-extensions==4.5.0 (from itwinai==0.1)\n  Downloading typing_extensions-4.5.0-py3-none-any.whl.metadata (8.5 kB)\nRequirement already satisfied: rich>=13.5.3 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (13.7.1)\nCollecting typer>=0.9.0 (from itwinai==0.1)\n  Downloading typer-0.9.0-py3-none-any.whl.metadata (14 kB)\nRequirement already satisfied: urllib3>=1.26.18 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.2.1)\nRequirement already satisfied: lightning>=2.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.0.0)\nRequirement already satisfied: torchmetrics>=1.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (1.3.2)\nCollecting docstring-parser>=0.15 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Downloading docstring_parser-0.16-py3-none-any.whl.metadata (3.0 kB)\nCollecting typeshed-client>=2.1.0 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Downloading typeshed_client-2.5.1-py3-none-any.whl.metadata (7.5 kB)\nRequirement already satisfied: Jinja2<5.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (3.1.3)\nRequirement already satisfied: arrow<3.0,>=1.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.0)\nRequirement already satisfied: beautifulsoup4<6.0,>=4.8.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (4.12.3)\nRequirement already satisfied: click<10.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (8.1.7)\nRequirement already satisfied: croniter<1.4.0,>=1.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.15)\nRequirement already satisfied: dateutils<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.6.12)\nRequirement already satisfied: deepdiff<8.0,>=5.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (6.7.1)\nRequirement already satisfied: fastapi<0.89.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.88.0)\nRequirement already satisfied: fsspec<2024.0,>=2022.5.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2023.12.2)\nRequirement already satisfied: inquirer<5.0,>=2.10.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (3.1.4)\nRequirement already satisfied: lightning-cloud>=0.5.31 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.5.39)\nRequirement already satisfied: lightning-utilities<2.0,>=0.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.11.0)\nRequirement already satisfied: numpy<3.0,>=1.17.2 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.26.4)\nRequirement already satisfied: packaging in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (24.0)\nRequirement already satisfied: psutil<7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (5.9.8)\nRequirement already satisfied: pydantic<3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.10.14)\nRequirement already satisfied: requests<4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2.31.0)\nRequirement already satisfied: starlette<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.22.0)\nRequirement already satisfied: starsessions<2.0,>=1.2.1 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.0)\nRequirement already satisfied: torch<4.0,>=1.11.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.13.1)\nRequirement already satisfied: tqdm<6.0,>=4.57.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (4.66.2)\nRequirement already satisfied: traitlets<7.0,>=5.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (5.14.2)\nRequirement already satisfied: uvicorn<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.29.0)\nRequirement already satisfied: websocket-client<3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.7.0)\nRequirement already satisfied: websockets<12.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (11.0.3)\nRequirement already satisfied: pytorch-lightning in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2.2.1)\nCollecting cloudpickle<4 (from mlflow>=2.7->itwinai==0.1)\n  Downloading cloudpickle-3.0.0-py3-none-any.whl.metadata (7.0 kB)\nCollecting entrypoints<1 (from mlflow>=2.7->itwinai==0.1)\n  Downloading entrypoints-0.4-py3-none-any.whl.metadata (2.6 kB)\nCollecting gitpython<4,>=3.1.9 (from mlflow>=2.7->itwinai==0.1)\n  Downloading GitPython-3.1.42-py3-none-any.whl.metadata (12 kB)\nCollecting protobuf<5,>=3.12.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading protobuf-4.25.3-cp37-abi3-manylinux2014_x86_64.whl.metadata (541 bytes)\nRequirement already satisfied: pytz<2025 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (2024.1)\nCollecting packaging (from lightning>=2.0.0->itwinai==0.1)\n  Downloading packaging-23.2-py3-none-any.whl.metadata (3.2 kB)\nRequirement already satisfied: importlib-metadata!=4.7.0,<8,>=3.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (7.1.0)\nCollecting sqlparse<1,>=0.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading sqlparse-0.4.4-py3-none-any.whl.metadata (4.0 kB)\nCollecting alembic!=1.10.0,<2 (from mlflow>=2.7->itwinai==0.1)\n  Downloading alembic-1.13.1-py3-none-any.whl.metadata (7.4 kB)\nCollecting docker<8,>=4.0.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading docker-7.0.0-py3-none-any.whl.metadata (3.5 kB)\nCollecting Flask<4 (from mlflow>=2.7->itwinai==0.1)\n  Downloading flask-3.0.2-py3-none-any.whl.metadata (3.6 kB)\nCollecting scipy<2 (from mlflow>=2.7->itwinai==0.1)\n  Downloading scipy-1.12.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.4/60.4 kB 611.2 kB/s eta 0:00:00\nCollecting pandas<3 (from mlflow>=2.7->itwinai==0.1)\n  Downloading pandas-2.2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (19 kB)\nCollecting querystring-parser<2 (from mlflow>=2.7->itwinai==0.1)\n  Downloading querystring_parser-1.2.4-py2.py3-none-any.whl.metadata (559 bytes)\nCollecting sqlalchemy<3,>=1.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading SQLAlchemy-2.0.28-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\nCollecting scikit-learn<2 (from mlflow>=2.7->itwinai==0.1)\n  Downloading scikit_learn-1.4.1.post1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nCollecting pyarrow<16,>=4.0.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading pyarrow-15.0.2-cp39-cp39-manylinux_2_28_x86_64.whl.metadata (3.0 kB)\nCollecting markdown<4,>=3.3 (from mlflow>=2.7->itwinai==0.1)\n  Downloading Markdown-3.6-py3-none-any.whl.metadata (7.0 kB)\nCollecting matplotlib<4 (from mlflow>=2.7->itwinai==0.1)\n  Downloading matplotlib-3.8.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.8 kB)\nCollecting graphene<4 (from mlflow>=2.7->itwinai==0.1)\n  Downloading graphene-3.3-py2.py3-none-any.whl.metadata (7.7 kB)\nCollecting gunicorn<22 (from mlflow>=2.7->itwinai==0.1)\n  Downloading gunicorn-21.2.0-py3-none-any.whl.metadata (4.1 kB)\nCollecting antlr4-python3-runtime==4.9.* (from omegaconf>=2.3.0->itwinai==0.1)\n  Downloading antlr4-python3-runtime-4.9.3.tar.gz (117 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.0/117.0 kB 1.1 MB/s eta 0:00:00\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: markdown-it-py>=2.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from rich>=13.5.3->itwinai==0.1) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in ./.venv-pytorch/lib/python3.9/site-packages (from rich>=13.5.3->itwinai==0.1) (2.17.2)\nCollecting sentry-sdk>=1.0.0 (from wandb>=0.15.11->itwinai==0.1)\n  Downloading sentry_sdk-1.43.0-py2.py3-none-any.whl.metadata (9.9 kB)\nCollecting docker-pycreds>=0.4.0 (from wandb>=0.15.11->itwinai==0.1)\n  Downloading docker_pycreds-0.4.0-py2.py3-none-any.whl.metadata (1.8 kB)\nCollecting setproctitle (from wandb>=0.15.11->itwinai==0.1)\n  Downloading setproctitle-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.9 kB)\nRequirement already satisfied: setuptools in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (69.2.0)\nCollecting appdirs>=1.4.3 (from wandb>=0.15.11->itwinai==0.1)\n  Downloading appdirs-1.4.4-py2.py3-none-any.whl.metadata (9.0 kB)\nCollecting Mako (from alembic!=1.10.0,<2->mlflow>=2.7->itwinai==0.1)\n  Downloading Mako-1.3.2-py3-none-any.whl.metadata (2.9 kB)\nRequirement already satisfied: python-dateutil>=2.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from arrow<3.0,>=1.2.0->lightning>=2.0.0->itwinai==0.1) (2.9.0)\nRequirement already satisfied: types-python-dateutil>=2.8.10 in ./.venv-pytorch/lib/python3.9/site-packages (from arrow<3.0,>=1.2.0->lightning>=2.0.0->itwinai==0.1) (2.9.0.20240316)\nRequirement already satisfied: soupsieve>1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from beautifulsoup4<6.0,>=4.8.0->lightning>=2.0.0->itwinai==0.1) (2.5)\nRequirement already satisfied: ordered-set<4.2.0,>=4.0.2 in ./.venv-pytorch/lib/python3.9/site-packages (from deepdiff<8.0,>=5.7.0->lightning>=2.0.0->itwinai==0.1) (4.1.0)\nRequirement already satisfied: six>=1.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from docker-pycreds>=0.4.0->wandb>=0.15.11->itwinai==0.1) (1.16.0)\nRequirement already satisfied: anyio<5,>=3.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from starlette<2.0->lightning>=2.0.0->itwinai==0.1) (4.3.0)\nCollecting Werkzeug>=3.0.0 (from Flask<4->mlflow>=2.7->itwinai==0.1)\n  Downloading werkzeug-3.0.1-py3-none-any.whl.metadata (4.1 kB)\nRequirement already satisfied: itsdangerous>=2.1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from Flask<4->mlflow>=2.7->itwinai==0.1) (2.1.2)\nCollecting blinker>=1.6.2 (from Flask<4->mlflow>=2.7->itwinai==0.1)\n  Downloading blinker-1.7.0-py3-none-any.whl.metadata (1.9 kB)\nCollecting aiohttp!=4.0.0a0,!=4.0.0a1 (from fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading aiohttp-3.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.4 kB)\nCollecting gitdb<5,>=4.0.1 (from gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1)\n  Downloading gitdb-4.0.11-py3-none-any.whl.metadata (1.2 kB)\nCollecting graphql-core<3.3,>=3.1 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Downloading graphql_core-3.2.3-py3-none-any.whl.metadata (10 kB)\nCollecting graphql-relay<3.3,>=3.1 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Downloading graphql_relay-3.2.0-py3-none-any.whl.metadata (12 kB)\nCollecting aniso8601<10,>=8 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Downloading aniso8601-9.0.1-py2.py3-none-any.whl.metadata (23 kB)\nRequirement already satisfied: zipp>=0.5 in ./.venv-pytorch/lib/python3.9/site-packages (from importlib-metadata!=4.7.0,<8,>=3.7.0->mlflow>=2.7->itwinai==0.1) (3.17.0)\nRequirement already satisfied: blessed>=1.19.0 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (1.19.1)\nRequirement already satisfied: python-editor>=1.0.4 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (1.0.4)\nRequirement already satisfied: readchar>=3.0.6 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (4.0.5.dev0)\nRequirement already satisfied: MarkupSafe>=2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from Jinja2<5.0->lightning>=2.0.0->itwinai==0.1) (2.1.5)\nRequirement already satisfied: pyjwt in ./.venv-pytorch/lib/python3.9/site-packages (from lightning-cloud>=0.5.31->lightning>=2.0.0->itwinai==0.1) (2.8.0)\nRequirement already satisfied: python-multipart in ./.venv-pytorch/lib/python3.9/site-packages (from lightning-cloud>=0.5.31->lightning>=2.0.0->itwinai==0.1) (0.0.9)\nRequirement already satisfied: mdurl~=0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from markdown-it-py>=2.2.0->rich>=13.5.3->itwinai==0.1) (0.1.2)\nCollecting contourpy>=1.0.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading contourpy-1.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.8 kB)\nCollecting cycler>=0.10 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)\nCollecting fonttools>=4.22.0 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (159 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 159.4/159.4 kB 616.2 kB/s eta 0:00:00\nCollecting kiwisolver>=1.3.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl.metadata (6.4 kB)\nRequirement already satisfied: pillow>=8 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (9.4.0)\nCollecting pyparsing>=2.3.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading pyparsing-3.1.2-py3-none-any.whl.metadata (5.1 kB)\nCollecting importlib-resources>=3.2.0 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading importlib_resources-6.4.0-py3-none-any.whl.metadata (3.9 kB)\nCollecting tzdata>=2022.7 (from pandas<3->mlflow>=2.7->itwinai==0.1)\n  Downloading tzdata-2024.1-py2.py3-none-any.whl.metadata (1.4 kB)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (3.6)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (2024.2.2)\nCollecting joblib>=1.2.0 (from scikit-learn<2->mlflow>=2.7->itwinai==0.1)\n  Downloading joblib-1.3.2-py3-none-any.whl.metadata (5.4 kB)\nCollecting threadpoolctl>=2.0.0 (from scikit-learn<2->mlflow>=2.7->itwinai==0.1)\n  Downloading threadpoolctl-3.4.0-py3-none-any.whl.metadata (13 kB)\nINFO: pip is looking at multiple versions of sqlalchemy to determine which version is compatible with other requirements. This could take a while.\nCollecting sqlalchemy<3,>=1.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Downloading SQLAlchemy-2.0.27-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Downloading SQLAlchemy-2.0.26-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Downloading SQLAlchemy-2.0.25-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Downloading SQLAlchemy-2.0.24-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\nCollecting greenlet!=0.4.17 (from sqlalchemy<3,>=1.4.0->mlflow>=2.7->itwinai==0.1)\n  Downloading greenlet-3.0.3-cp39-cp39-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl.metadata (3.8 kB)\nRequirement already satisfied: h11>=0.8 in ./.venv-pytorch/lib/python3.9/site-packages (from uvicorn<2.0->lightning>=2.0.0->itwinai==0.1) (0.14.0)\nCollecting aiosignal>=1.1.2 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading aiosignal-1.3.1-py3-none-any.whl.metadata (4.0 kB)\nCollecting attrs>=17.3.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading attrs-23.2.0-py3-none-any.whl.metadata (9.5 kB)\nCollecting frozenlist>=1.1.1 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading frozenlist-1.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\nCollecting multidict<7.0,>=4.5 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading multidict-6.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.2 kB)\nCollecting yarl<2.0,>=1.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading yarl-1.9.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (31 kB)\nCollecting async-timeout<5.0,>=4.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading async_timeout-4.0.3-py3-none-any.whl.metadata (4.2 kB)\nRequirement already satisfied: sniffio>=1.1 in ./.venv-pytorch/lib/python3.9/site-packages (from anyio<5,>=3.4.0->starlette<2.0->lightning>=2.0.0->itwinai==0.1) (1.3.1)\nRequirement already satisfied: exceptiongroup>=1.0.2 in ./.venv-pytorch/lib/python3.9/site-packages (from anyio<5,>=3.4.0->starlette<2.0->lightning>=2.0.0->itwinai==0.1) (1.2.0)\nRequirement already satisfied: wcwidth>=0.1.4 in ./.venv-pytorch/lib/python3.9/site-packages (from blessed>=1.19.0->inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (0.2.13)\nCollecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1)\n  Downloading smmap-5.0.1-py3-none-any.whl.metadata (4.3 kB)\nDownloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\nDownloading jsonargparse-4.27.7-py3-none-any.whl (192 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 192.2/192.2 kB 813.2 kB/s eta 0:00:00\nDownloading mlflow-2.11.3-py3-none-any.whl (19.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 19.7/19.7 MB 16.8 MB/s eta 0:00:00\nDownloading omegaconf-2.3.0-py3-none-any.whl (79 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.5/79.5 kB 753.1 kB/s eta 0:00:00\nDownloading submitit-1.5.1-py3-none-any.whl (74 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 74.7/74.7 kB 171.6 kB/s eta 0:00:00\nDownloading typer-0.9.0-py3-none-any.whl (45 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 45.9/45.9 kB 229.2 kB/s eta 0:00:00\nDownloading wandb-0.16.4-py3-none-any.whl (2.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.2/2.2 MB 14.4 MB/s eta 0:00:00\nDownloading alembic-1.13.1-py3-none-any.whl (233 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.4/233.4 kB 820.8 kB/s eta 0:00:00\nDownloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\nDownloading cloudpickle-3.0.0-py3-none-any.whl (20 kB)\nDownloading docker-7.0.0-py3-none-any.whl (147 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 147.6/147.6 kB 512.5 kB/s eta 0:00:00\nDownloading docker_pycreds-0.4.0-py2.py3-none-any.whl (9.0 kB)\nDownloading docstring_parser-0.16-py3-none-any.whl (36 kB)\nDownloading entrypoints-0.4-py3-none-any.whl (5.3 kB)\nDownloading flask-3.0.2-py3-none-any.whl (101 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 101.3/101.3 kB 841.7 kB/s eta 0:00:00\nDownloading GitPython-3.1.42-py3-none-any.whl (195 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.4/195.4 kB 584.3 kB/s eta 0:00:00\nDownloading graphene-3.3-py2.py3-none-any.whl (128 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 128.2/128.2 kB 1.9 MB/s eta 0:00:00\nDownloading gunicorn-21.2.0-py3-none-any.whl (80 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.2/80.2 kB 1.0 MB/s eta 0:00:00\nDownloading Markdown-3.6-py3-none-any.whl (105 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 105.4/105.4 kB 345.9 kB/s eta 0:00:00\nDownloading matplotlib-3.8.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 19.4 MB/s eta 0:00:00\nDownloading packaging-23.2-py3-none-any.whl (53 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.0/53.0 kB 681.0 kB/s eta 0:00:00\nDownloading pandas-2.2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 13.0/13.0 MB 31.4 MB/s eta 0:00:00\nDownloading protobuf-4.25.3-cp37-abi3-manylinux2014_x86_64.whl (294 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 294.6/294.6 kB 772.2 kB/s eta 0:00:00\nDownloading pyarrow-15.0.2-cp39-cp39-manylinux_2_28_x86_64.whl (38.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 38.3/38.3 MB 13.4 MB/s eta 0:00:00\nDownloading querystring_parser-1.2.4-py2.py3-none-any.whl (7.9 kB)\nDownloading scikit_learn-1.4.1.post1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.2/12.2 MB 22.5 MB/s eta 0:00:00\nDownloading scipy-1.12.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.5 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 38.5/38.5 MB 13.8 MB/s eta 0:00:00\nDownloading sentry_sdk-1.43.0-py2.py3-none-any.whl (264 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 264.6/264.6 kB 2.0 MB/s eta 0:00:00\nDownloading SQLAlchemy-2.0.24-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 5.7 MB/s eta 0:00:00\nDownloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.2/41.2 kB 224.9 kB/s eta 0:00:00\nDownloading typeshed_client-2.5.1-py3-none-any.whl (606 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 606.1/606.1 kB 5.0 MB/s eta 0:00:00\nDownloading setproctitle-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30 kB)\nDownloading aiohttp-3.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.2/1.2 MB 10.7 MB/s eta 0:00:00\nDownloading aniso8601-9.0.1-py2.py3-none-any.whl (52 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 52.8/52.8 kB 151.3 kB/s eta 0:00:00\nDownloading blinker-1.7.0-py3-none-any.whl (13 kB)\nDownloading contourpy-1.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (310 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 311.0/311.0 kB 2.7 MB/s eta 0:00:00\nDownloading cycler-0.12.1-py3-none-any.whl (8.3 kB)\nDownloading fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.6/4.6 MB 19.5 MB/s eta 0:00:00\nDownloading gitdb-4.0.11-py3-none-any.whl (62 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.7/62.7 kB 318.2 kB/s eta 0:00:00\nDownloading graphql_core-3.2.3-py3-none-any.whl (202 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 202.9/202.9 kB 1.4 MB/s eta 0:00:00\nDownloading graphql_relay-3.2.0-py3-none-any.whl (16 kB)\nDownloading greenlet-3.0.3-cp39-cp39-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl (614 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 614.3/614.3 kB 2.7 MB/s eta 0:00:00\nDownloading importlib_resources-6.4.0-py3-none-any.whl (38 kB)\nDownloading joblib-1.3.2-py3-none-any.whl (302 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 302.2/302.2 kB 2.7 MB/s eta 0:00:00\nDownloading kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 5.7 MB/s eta 0:00:00\nDownloading pyparsing-3.1.2-py3-none-any.whl (103 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 103.2/103.2 kB 921.7 kB/s eta 0:00:00\nDownloading threadpoolctl-3.4.0-py3-none-any.whl (17 kB)\nDownloading tzdata-2024.1-py2.py3-none-any.whl (345 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 345.4/345.4 kB 1.2 MB/s eta 0:00:00\nDownloading werkzeug-3.0.1-py3-none-any.whl (226 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 226.7/226.7 kB 1.8 MB/s eta 0:00:00\nDownloading Mako-1.3.2-py3-none-any.whl (78 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.7/78.7 kB 253.5 kB/s eta 0:00:00\nDownloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\nDownloading async_timeout-4.0.3-py3-none-any.whl (5.7 kB)\nDownloading attrs-23.2.0-py3-none-any.whl (60 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.8/60.8 kB 219.9 kB/s eta 0:00:00\nDownloading frozenlist-1.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (240 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 240.7/240.7 kB 1.6 MB/s eta 0:00:00\nDownloading multidict-6.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (123 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.8/123.8 kB 926.6 kB/s eta 0:00:00\nDownloading smmap-5.0.1-py3-none-any.whl (24 kB)\nDownloading yarl-1.9.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (304 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 304.3/304.3 kB 944.6 kB/s eta 0:00:00\nBuilding wheels for collected packages: itwinai, antlr4-python3-runtime\n  Building editable for itwinai (pyproject.toml): started\n  Building editable for itwinai (pyproject.toml): finished with status 'done'\n  Created wheel for itwinai: filename=itwinai-0.1-0.editable-py3-none-any.whl size=5541 sha256=855237451e298030b8fe81cae29a9e3baa0f05e498ea1adfd5f5c740a379d30d\n  Stored in directory: /tmp/pip-ephem-wheel-cache-hnzfw1nt/wheels/1e/c1/bd/3c6ac8da1906f8e34a8792504e5fcc8552c7f560fb134d95ae\n  Building wheel for antlr4-python3-runtime (setup.py): started\n  Building wheel for antlr4-python3-runtime (setup.py): finished with status 'done'\n  Created wheel for antlr4-python3-runtime: filename=antlr4_python3_runtime-4.9.3-py3-none-any.whl size=144554 sha256=f7aca6849f79d632529aa28a1ab53fa53171149b7c04ae0583714ee151168b0e\n  Stored in directory: /root/.cache/pip/wheels/23/cf/80/f3efa822e6ab23277902ee9165fe772eeb1dfb8014f359020a\nSuccessfully built itwinai antlr4-python3-runtime\nInstalling collected packages: appdirs, antlr4-python3-runtime, aniso8601, Werkzeug, tzdata, typing-extensions, threadpoolctl, sqlparse, smmap, setproctitle, sentry-sdk, scipy, querystring-parser, pyparsing, pyarrow, protobuf, packaging, omegaconf, multidict, Mako, kiwisolver, jsonargparse, joblib, importlib-resources, greenlet, graphql-core, frozenlist, fonttools, entrypoints, docstring-parser, docker-pycreds, cycler, contourpy, cloudpickle, blinker, attrs, async-timeout, yarl, typeshed-client, typer, submitit, sqlalchemy, scikit-learn, pandas, matplotlib, markdown, gunicorn, graphql-relay, gitdb, Flask, docker, aiosignal, graphene, gitpython, alembic, aiohttp, wandb, mlflow, itwinai\n  Attempting uninstall: typing-extensions\n    Found existing installation: typing_extensions 4.10.0\n    Uninstalling typing_extensions-4.10.0:\n      Successfully uninstalled typing_extensions-4.10.0\n  Attempting uninstall: packaging\n    Found existing installation: packaging 24.0\n    Uninstalling packaging-24.0:\n      Successfully uninstalled packaging-24.0\nSuccessfully installed Flask-3.0.2 Mako-1.3.2 Werkzeug-3.0.1 aiohttp-3.9.3 aiosignal-1.3.1 alembic-1.13.1 aniso8601-9.0.1 antlr4-python3-runtime-4.9.3 appdirs-1.4.4 async-timeout-4.0.3 attrs-23.2.0 blinker-1.7.0 cloudpickle-3.0.0 contourpy-1.2.0 cycler-0.12.1 docker-7.0.0 docker-pycreds-0.4.0 docstring-parser-0.16 entrypoints-0.4 fonttools-4.50.0 frozenlist-1.4.1 gitdb-4.0.11 gitpython-3.1.42 graphene-3.3 graphql-core-3.2.3 graphql-relay-3.2.0 greenlet-3.0.3 gunicorn-21.2.0 importlib-resources-6.4.0 itwinai-0.1 joblib-1.3.2 jsonargparse-4.27.7 kiwisolver-1.4.5 markdown-3.6 matplotlib-3.8.3 mlflow-2.11.3 multidict-6.0.5 omegaconf-2.3.0 packaging-23.2 pandas-2.2.1 protobuf-4.25.3 pyarrow-15.0.2 pyparsing-3.1.2 querystring-parser-1.2.4 scikit-learn-1.4.1.post1 scipy-1.12.0 sentry-sdk-1.43.0 setproctitle-1.3.3 smmap-5.0.1 sqlalchemy-2.0.24 sqlparse-0.4.4 submitit-1.5.1 threadpoolctl-3.4.0 typer-0.9.0 typeshed-client-2.5.1 typing-extensions-4.5.0 tzdata-2024.1 wandb-0.16.4 yarl-1.9.4\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\necho \"Installing TensorFlow 2.13 env\"\nInstalling TensorFlow 2.13 env\nmicromamba env create -p ./.venv-tf --file env-files/tensorflow/tensorflow-2.13.yml -y\nconda-forge/linux-64                                        Using cache\nconda-forge/noarch                                          Using cache\n\nTransaction\n\n  Prefix: /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-tf\n\n  Updating specs:\n\n   - python=3.9.12\n   - cudatoolkit=11.8.0\n   - cuda-nvcc=11.3.58\n   - pip\n\n\n  Package                  Version  Build               Channel           Size\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  Install:\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  + cuda-nvcc              11.3.58  h2467b9f_0          nvidia            57MB\n  + _libgcc_mutex              0.1  conda_forge         conda-forge     Cached\n  + libstdcxx-ng            13.2.0  h7e041cc_5          conda-forge     Cached\n  + ld_impl_linux-64          2.40  h41732ed_0          conda-forge     Cached\n  + ca-certificates       2024.2.2  hbcca054_0          conda-forge     Cached\n  + libgomp                 13.2.0  h807b86a_5          conda-forge      420kB\n  + _openmp_mutex              4.5  2_gnu               conda-forge       24kB\n  + libgcc-ng               13.2.0  h807b86a_5          conda-forge     Cached\n  + xz                       5.2.6  h166bdaf_0          conda-forge     Cached\n  + openssl                  3.2.1  hd590300_1          conda-forge     Cached\n  + ncurses           6.4.20240210  h59595ed_0          conda-forge     Cached\n  + libzlib                 1.2.13  hd590300_5          conda-forge     Cached\n  + libuuid                 2.38.1  h0b41bf4_0          conda-forge     Cached\n  + libnsl                   2.0.1  hd590300_0          conda-forge     Cached\n  + libffi                   3.4.2  h7f98852_5          conda-forge     Cached\n  + bzip2                    1.0.8  hd590300_5          conda-forge     Cached\n  + cudatoolkit             11.8.0  h4ba93d1_13         conda-forge      716MB\n  + readline                   8.2  h8228510_1          conda-forge     Cached\n  + tk                      8.6.13  noxft_h4845f30_101  conda-forge     Cached\n  + libsqlite               3.45.2  h2797004_0          conda-forge     Cached\n  + sqlite                  3.45.2  h2c6b66d_0          conda-forge     Cached\n  + tzdata                   2024a  h0c530f3_0          conda-forge     Cached\n  + python                  3.9.12  h2660328_1_cpython  conda-forge     Cached\n  + wheel                   0.43.0  pyhd8ed1ab_0        conda-forge     Cached\n  + setuptools              69.2.0  pyhd8ed1ab_0        conda-forge     Cached\n  + pip                       24.0  pyhd8ed1ab_0        conda-forge     Cached\n\n  Summary:\n\n  Install: 26 packages\n\n  Total download: 773MB\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\nTransaction starting\nLinking cuda-nvcc-11.3.58-h2467b9f_0\nLinking _libgcc_mutex-0.1-conda_forge\nLinking libstdcxx-ng-13.2.0-h7e041cc_5\nLinking ld_impl_linux-64-2.40-h41732ed_0\nLinking ca-certificates-2024.2.2-hbcca054_0\nLinking libgomp-13.2.0-h807b86a_5\nLinking _openmp_mutex-4.5-2_gnu\nLinking libgcc-ng-13.2.0-h807b86a_5\nLinking xz-5.2.6-h166bdaf_0\nLinking openssl-3.2.1-hd590300_1\nLinking ncurses-6.4.20240210-h59595ed_0\nLinking libzlib-1.2.13-hd590300_5\nLinking libuuid-2.38.1-h0b41bf4_0\nLinking libnsl-2.0.1-hd590300_0\nLinking libffi-3.4.2-h7f98852_5\nLinking bzip2-1.0.8-hd590300_5\nLinking cudatoolkit-11.8.0-h4ba93d1_13\nBy downloading and using the CUDA Toolkit conda packages, you accept the terms and conditions of the CUDA End User License Agreement (EULA): https://docs.nvidia.com/cuda/eula/index.html\n\nLinking readline-8.2-h8228510_1\nLinking tk-8.6.13-noxft_h4845f30_101\nLinking libsqlite-3.45.2-h2797004_0\nLinking sqlite-3.45.2-h2c6b66d_0\nLinking tzdata-2024a-h0c530f3_0\nLinking python-3.9.12-h2660328_1_cpython\nLinking wheel-0.43.0-pyhd8ed1ab_0\nLinking setuptools-69.2.0-pyhd8ed1ab_0\nLinking pip-24.0-pyhd8ed1ab_0\n\nTransaction finished\n\nTo activate this environment, use:\n\n    micromamba activate /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-tf\n\nOr to execute a single command in this environment, use:\n\n    micromamba run -p /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-tf mycommand\n\n\nInstalling pip packages: tensorflow-addons, tensorflow-datasets\nCollecting tensorflow-addons (from -r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 1))\n  Downloading tensorflow_addons-0.23.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.8 kB)\nCollecting tensorflow-datasets (from -r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading tensorflow_datasets-4.9.3-py3-none-any.whl.metadata (9.3 kB)\nCollecting packaging (from tensorflow-addons->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 1))\n  Downloading packaging-24.0-py3-none-any.whl.metadata (3.2 kB)\nCollecting typeguard<3.0.0,>=2.7 (from tensorflow-addons->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 1))\n  Downloading typeguard-2.13.3-py3-none-any.whl.metadata (3.6 kB)\nCollecting absl-py (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading absl_py-2.1.0-py3-none-any.whl.metadata (2.3 kB)\nCollecting array-record (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading array_record-0.5.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (503 bytes)\nCollecting click (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)\nCollecting dm-tree (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading dm_tree-0.1.8-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.9 kB)\nCollecting etils>=0.9.0 (from etils[enp,epath,etree]>=0.9.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading etils-1.5.2-py3-none-any.whl.metadata (6.3 kB)\nCollecting numpy (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (61 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.0/61.0 kB 120.0 kB/s eta 0:00:00\nCollecting promise (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading promise-2.3.tar.gz (19 kB)\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nCollecting protobuf>=3.20 (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading protobuf-5.26.0-cp37-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)\nCollecting psutil (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading psutil-5.9.8-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (21 kB)\nCollecting requests>=2.19.0 (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading requests-2.31.0-py3-none-any.whl.metadata (4.6 kB)\nCollecting tensorflow-metadata (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading tensorflow_metadata-1.14.0-py3-none-any.whl.metadata (2.1 kB)\nCollecting termcolor (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading termcolor-2.4.0-py3-none-any.whl.metadata (6.1 kB)\nCollecting toml (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading toml-0.10.2-py2.py3-none-any.whl.metadata (7.1 kB)\nCollecting tqdm (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading tqdm-4.66.2-py3-none-any.whl.metadata (57 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.6/57.6 kB 162.9 kB/s eta 0:00:00\nCollecting wrapt (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading wrapt-1.16.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.6 kB)\nCollecting fsspec (from etils[enp,epath,etree]>=0.9.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading fsspec-2024.3.1-py3-none-any.whl.metadata (6.8 kB)\nCollecting importlib_resources (from etils[enp,epath,etree]>=0.9.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Using cached importlib_resources-6.4.0-py3-none-any.whl.metadata (3.9 kB)\nCollecting typing_extensions (from etils[enp,epath,etree]>=0.9.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading typing_extensions-4.10.0-py3-none-any.whl.metadata (3.0 kB)\nCollecting zipp (from etils[enp,epath,etree]>=0.9.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading zipp-3.18.1-py3-none-any.whl.metadata (3.5 kB)\nCollecting charset-normalizer<4,>=2 (from requests>=2.19.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading charset_normalizer-3.3.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (33 kB)\nCollecting idna<4,>=2.5 (from requests>=2.19.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading idna-3.6-py3-none-any.whl.metadata (9.9 kB)\nCollecting urllib3<3,>=1.21.1 (from requests>=2.19.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading urllib3-2.2.1-py3-none-any.whl.metadata (6.4 kB)\nCollecting certifi>=2017.4.17 (from requests>=2.19.0->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading certifi-2024.2.2-py3-none-any.whl.metadata (2.2 kB)\nCollecting six (from promise->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading six-1.16.0-py2.py3-none-any.whl.metadata (1.8 kB)\nCollecting absl-py (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading absl_py-1.4.0-py3-none-any.whl.metadata (2.3 kB)\nCollecting googleapis-common-protos<2,>=1.52.0 (from tensorflow-metadata->tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading googleapis_common_protos-1.63.0-py2.py3-none-any.whl.metadata (1.5 kB)\nCollecting protobuf>=3.20 (from tensorflow-datasets->-r /sqaaas-build/github.com/interTwin-eu/itwinai/env-files/tensorflow/mambafLHhGzncDJJ (line 2))\n  Downloading protobuf-3.20.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl.metadata (679 bytes)\nDownloading tensorflow_addons-0.23.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (611 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 611.8/611.8 kB 1.6 MB/s eta 0:00:00\nDownloading tensorflow_datasets-4.9.3-py3-none-any.whl (5.0 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.0/5.0 MB 27.1 MB/s eta 0:00:00\nDownloading etils-1.5.2-py3-none-any.whl (140 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 140.6/140.6 kB 323.2 kB/s eta 0:00:00\nDownloading requests-2.31.0-py3-none-any.whl (62 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 463.8 kB/s eta 0:00:00\nDownloading typeguard-2.13.3-py3-none-any.whl (17 kB)\nDownloading array_record-0.5.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 18.0 MB/s eta 0:00:00\nDownloading click-8.1.7-py3-none-any.whl (97 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 97.9/97.9 kB 237.8 kB/s eta 0:00:00\nDownloading dm_tree-0.1.8-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (153 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 153.0/153.0 kB 1.5 MB/s eta 0:00:00\nDownloading numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 18.2/18.2 MB 20.3 MB/s eta 0:00:00\nDownloading packaging-24.0-py3-none-any.whl (53 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.5/53.5 kB 904.1 kB/s eta 0:00:00\nDownloading psutil-5.9.8-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (288 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 288.2/288.2 kB 3.5 MB/s eta 0:00:00\nDownloading tensorflow_metadata-1.14.0-py3-none-any.whl (28 kB)\nDownloading absl_py-1.4.0-py3-none-any.whl (126 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 126.5/126.5 kB 445.3 kB/s eta 0:00:00\nDownloading protobuf-3.20.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.0 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 3.6 MB/s eta 0:00:00\nDownloading termcolor-2.4.0-py3-none-any.whl (7.7 kB)\nDownloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\nDownloading tqdm-4.66.2-py3-none-any.whl (78 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.3/78.3 kB 641.5 kB/s eta 0:00:00\nDownloading wrapt-1.16.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (80 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.1/80.1 kB 409.2 kB/s eta 0:00:00\nDownloading certifi-2024.2.2-py3-none-any.whl (163 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 163.8/163.8 kB 272.6 kB/s eta 0:00:00\nDownloading charset_normalizer-3.3.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (142 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 142.3/142.3 kB 542.6 kB/s eta 0:00:00\nDownloading googleapis_common_protos-1.63.0-py2.py3-none-any.whl (229 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.1/229.1 kB 1.3 MB/s eta 0:00:00\nDownloading idna-3.6-py3-none-any.whl (61 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.6/61.6 kB 677.4 kB/s eta 0:00:00\nDownloading urllib3-2.2.1-py3-none-any.whl (121 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.1/121.1 kB 523.3 kB/s eta 0:00:00\nDownloading fsspec-2024.3.1-py3-none-any.whl (171 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 172.0/172.0 kB 398.1 kB/s eta 0:00:00\nUsing cached importlib_resources-6.4.0-py3-none-any.whl (38 kB)\nDownloading zipp-3.18.1-py3-none-any.whl (8.2 kB)\nDownloading six-1.16.0-py2.py3-none-any.whl (11 kB)\nDownloading typing_extensions-4.10.0-py3-none-any.whl (33 kB)\nBuilding wheels for collected packages: promise\n  Building wheel for promise (setup.py): started\n  Building wheel for promise (setup.py): finished with status 'done'\n  Created wheel for promise: filename=promise-2.3-py3-none-any.whl size=21483 sha256=f9ab3b32175a217839702375fd9ba352102f476171a83680fbe5d003560e75fd\n  Stored in directory: /root/.cache/pip/wheels/e1/e8/83/ddea66100678d139b14bc87692ece57c6a2a937956d2532608\nSuccessfully built promise\nInstalling collected packages: dm-tree, zipp, wrapt, urllib3, typing_extensions, typeguard, tqdm, toml, termcolor, six, psutil, protobuf, packaging, numpy, idna, fsspec, etils, click, charset-normalizer, certifi, absl-py, tensorflow-addons, requests, promise, importlib_resources, googleapis-common-protos, tensorflow-metadata, array-record, tensorflow-datasets\nSuccessfully installed absl-py-1.4.0 array-record-0.5.0 certifi-2024.2.2 charset-normalizer-3.3.2 click-8.1.7 dm-tree-0.1.8 etils-1.5.2 fsspec-2024.3.1 googleapis-common-protos-1.63.0 idna-3.6 importlib_resources-6.4.0 numpy-1.26.4 packaging-24.0 promise-2.3 protobuf-3.20.3 psutil-5.9.8 requests-2.31.0 six-1.16.0 tensorflow-addons-0.23.0 tensorflow-datasets-4.9.3 tensorflow-metadata-1.14.0 termcolor-2.4.0 toml-0.10.2 tqdm-4.66.2 typeguard-2.13.3 typing_extensions-4.10.0 urllib3-2.2.1 wrapt-1.16.0 zipp-3.18.1\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nmicromamba run -p ./.venv-tf pip install nvidia-cudnn-cu11==8.6.0.163\nCollecting nvidia-cudnn-cu11==8.6.0.163\n  Downloading nvidia_cudnn_cu11-8.6.0.163-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cublas-cu11 (from nvidia-cudnn-cu11==8.6.0.163)\n  Downloading nvidia_cublas_cu11-11.11.3.6-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nDownloading nvidia_cudnn_cu11-8.6.0.163-py3-none-manylinux1_x86_64.whl (715.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 715.7/715.7 MB 1.6 MB/s eta 0:00:00\nDownloading nvidia_cublas_cu11-11.11.3.6-py3-none-manylinux1_x86_64.whl (417.9 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 417.9/417.9 MB 2.2 MB/s eta 0:00:00\nInstalling collected packages: nvidia-cublas-cu11, nvidia-cudnn-cu11\nSuccessfully installed nvidia-cublas-cu11-11.11.3.6 nvidia-cudnn-cu11-8.6.0.163\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nmkdir -p ./.venv-tf/etc/conda/activate.d\necho 'CUDNN_PATH=$(dirname $(python -c \"import nvidia.cudnn;print(nvidia.cudnn.__file__)\"))' >> ./.venv-tf/etc/conda/activate.d/env_vars.sh\necho 'export LD_LIBRARY_PATH=$CUDNN_PATH/lib:$CONDA_PREFIX/lib/:$LD_LIBRARY_PATH' >> ./.venv-tf/etc/conda/activate.d/env_vars.sh\nprintf 'export XLA_FLAGS=--xla_gpu_cuda_data_dir=$CONDA_PREFIX/lib/\\n' >> ./.venv-tf/etc/conda/activate.d/env_vars.sh\nmicromamba run -p ./.venv-tf pip install --upgrade pip\nRequirement already satisfied: pip in ./.venv-tf/lib/python3.9/site-packages (24.0)\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nmicromamba run -p ./.venv-tf pip install tensorflow==2.13.*\nCollecting tensorflow==2.13.*\n  Downloading tensorflow-2.13.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)\nRequirement already satisfied: absl-py>=1.0.0 in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (1.4.0)\nCollecting astunparse>=1.6.0 (from tensorflow==2.13.*)\n  Downloading astunparse-1.6.3-py2.py3-none-any.whl.metadata (4.4 kB)\nCollecting flatbuffers>=23.1.21 (from tensorflow==2.13.*)\n  Downloading flatbuffers-24.3.7-py2.py3-none-any.whl.metadata (849 bytes)\nCollecting gast<=0.4.0,>=0.2.1 (from tensorflow==2.13.*)\n  Downloading gast-0.4.0-py3-none-any.whl.metadata (1.1 kB)\nCollecting google-pasta>=0.1.1 (from tensorflow==2.13.*)\n  Downloading google_pasta-0.2.0-py3-none-any.whl.metadata (814 bytes)\nCollecting grpcio<2.0,>=1.24.3 (from tensorflow==2.13.*)\n  Downloading grpcio-1.62.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)\nCollecting h5py>=2.9.0 (from tensorflow==2.13.*)\n  Downloading h5py-3.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.5 kB)\nCollecting keras<2.14,>=2.13.1 (from tensorflow==2.13.*)\n  Downloading keras-2.13.1-py3-none-any.whl.metadata (2.4 kB)\nCollecting libclang>=13.0.0 (from tensorflow==2.13.*)\n  Downloading libclang-18.1.1-py2.py3-none-manylinux2010_x86_64.whl.metadata (5.2 kB)\nCollecting numpy<=1.24.3,>=1.22 (from tensorflow==2.13.*)\n  Downloading numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.6 kB)\nCollecting opt-einsum>=2.3.2 (from tensorflow==2.13.*)\n  Downloading opt_einsum-3.3.0-py3-none-any.whl.metadata (6.5 kB)\nRequirement already satisfied: packaging in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (24.0)\nRequirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (3.20.3)\nRequirement already satisfied: setuptools in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (69.2.0)\nRequirement already satisfied: six>=1.12.0 in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (1.16.0)\nCollecting tensorboard<2.14,>=2.13 (from tensorflow==2.13.*)\n  Downloading tensorboard-2.13.0-py3-none-any.whl.metadata (1.8 kB)\nCollecting tensorflow-estimator<2.14,>=2.13.0 (from tensorflow==2.13.*)\n  Downloading tensorflow_estimator-2.13.0-py2.py3-none-any.whl.metadata (1.3 kB)\nRequirement already satisfied: termcolor>=1.1.0 in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (2.4.0)\nCollecting typing-extensions<4.6.0,>=3.6.6 (from tensorflow==2.13.*)\n  Using cached typing_extensions-4.5.0-py3-none-any.whl.metadata (8.5 kB)\nRequirement already satisfied: wrapt>=1.11.0 in ./.venv-tf/lib/python3.9/site-packages (from tensorflow==2.13.*) (1.16.0)\nCollecting tensorflow-io-gcs-filesystem>=0.23.1 (from tensorflow==2.13.*)\n  Downloading tensorflow_io_gcs_filesystem-0.36.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (14 kB)\nRequirement already satisfied: wheel<1.0,>=0.23.0 in ./.venv-tf/lib/python3.9/site-packages (from astunparse>=1.6.0->tensorflow==2.13.*) (0.43.0)\nCollecting google-auth<3,>=1.6.3 (from tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading google_auth-2.29.0-py2.py3-none-any.whl.metadata (4.7 kB)\nCollecting google-auth-oauthlib<1.1,>=0.5 (from tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading google_auth_oauthlib-1.0.0-py2.py3-none-any.whl.metadata (2.7 kB)\nCollecting markdown>=2.6.8 (from tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Using cached Markdown-3.6-py3-none-any.whl.metadata (7.0 kB)\nRequirement already satisfied: requests<3,>=2.21.0 in ./.venv-tf/lib/python3.9/site-packages (from tensorboard<2.14,>=2.13->tensorflow==2.13.*) (2.31.0)\nCollecting tensorboard-data-server<0.8.0,>=0.7.0 (from tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading tensorboard_data_server-0.7.2-py3-none-manylinux_2_31_x86_64.whl.metadata (1.1 kB)\nCollecting werkzeug>=1.0.1 (from tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Using cached werkzeug-3.0.1-py3-none-any.whl.metadata (4.1 kB)\nCollecting cachetools<6.0,>=2.0.0 (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading cachetools-5.3.3-py3-none-any.whl.metadata (5.3 kB)\nCollecting pyasn1-modules>=0.2.1 (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl.metadata (3.6 kB)\nCollecting rsa<5,>=3.1.4 (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading rsa-4.9-py3-none-any.whl.metadata (4.2 kB)\nCollecting requests-oauthlib>=0.7.0 (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading requests_oauthlib-1.4.0-py2.py3-none-any.whl.metadata (11 kB)\nCollecting importlib-metadata>=4.4 (from markdown>=2.6.8->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading importlib_metadata-7.1.0-py3-none-any.whl.metadata (4.7 kB)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow==2.13.*) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow==2.13.*) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow==2.13.*) (2.2.1)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow==2.13.*) (2024.2.2)\nCollecting MarkupSafe>=2.1.1 (from werkzeug>=1.0.1->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)\nRequirement already satisfied: zipp>=0.5 in ./.venv-tf/lib/python3.9/site-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.14,>=2.13->tensorflow==2.13.*) (3.18.1)\nCollecting pyasn1<0.6.0,>=0.4.6 (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading pyasn1-0.5.1-py2.py3-none-any.whl.metadata (8.6 kB)\nCollecting oauthlib>=3.0.0 (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow==2.13.*)\n  Downloading oauthlib-3.2.2-py3-none-any.whl.metadata (7.5 kB)\nDownloading tensorflow-2.13.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (479.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 479.7/479.7 MB 2.4 MB/s eta 0:00:00\nDownloading astunparse-1.6.3-py2.py3-none-any.whl (12 kB)\nDownloading flatbuffers-24.3.7-py2.py3-none-any.whl (26 kB)\nDownloading gast-0.4.0-py3-none-any.whl (9.8 kB)\nDownloading google_pasta-0.2.0-py3-none-any.whl (57 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.5/57.5 kB 141.4 kB/s eta 0:00:00\nDownloading grpcio-1.62.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.6/5.6 MB 9.2 MB/s eta 0:00:00\nDownloading h5py-3.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.8/4.8 MB 9.4 MB/s eta 0:00:00\nDownloading keras-2.13.1-py3-none-any.whl (1.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 4.6 MB/s eta 0:00:00\nDownloading libclang-18.1.1-py2.py3-none-manylinux2010_x86_64.whl (24.5 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 24.5/24.5 MB 16.6 MB/s eta 0:00:00\nDownloading numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 23.5 MB/s eta 0:00:00\nDownloading opt_einsum-3.3.0-py3-none-any.whl (65 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 65.5/65.5 kB 132.8 kB/s eta 0:00:00\nDownloading tensorboard-2.13.0-py3-none-any.whl (5.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.6/5.6 MB 21.7 MB/s eta 0:00:00\nDownloading tensorflow_estimator-2.13.0-py2.py3-none-any.whl (440 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 440.8/440.8 kB 2.2 MB/s eta 0:00:00\nDownloading tensorflow_io_gcs_filesystem-0.36.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.1/5.1 MB 20.5 MB/s eta 0:00:00\nUsing cached typing_extensions-4.5.0-py3-none-any.whl (27 kB)\nDownloading google_auth-2.29.0-py2.py3-none-any.whl (189 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 189.2/189.2 kB 602.1 kB/s eta 0:00:00\nDownloading google_auth_oauthlib-1.0.0-py2.py3-none-any.whl (18 kB)\nUsing cached Markdown-3.6-py3-none-any.whl (105 kB)\nDownloading tensorboard_data_server-0.7.2-py3-none-manylinux_2_31_x86_64.whl (6.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.6/6.6 MB 19.4 MB/s eta 0:00:00\nUsing cached werkzeug-3.0.1-py3-none-any.whl (226 kB)\nDownloading cachetools-5.3.3-py3-none-any.whl (9.3 kB)\nDownloading importlib_metadata-7.1.0-py3-none-any.whl (24 kB)\nDownloading MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\nDownloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 181.3/181.3 kB 503.4 kB/s eta 0:00:00\nDownloading requests_oauthlib-1.4.0-py2.py3-none-any.whl (24 kB)\nDownloading rsa-4.9-py3-none-any.whl (34 kB)\nDownloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 151.7/151.7 kB 499.3 kB/s eta 0:00:00\nDownloading pyasn1-0.5.1-py2.py3-none-any.whl (84 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.9/84.9 kB 520.2 kB/s eta 0:00:00\nInstalling collected packages: libclang, flatbuffers, typing-extensions, tensorflow-io-gcs-filesystem, tensorflow-estimator, tensorboard-data-server, pyasn1, oauthlib, numpy, MarkupSafe, keras, importlib-metadata, grpcio, google-pasta, gast, cachetools, astunparse, werkzeug, rsa, requests-oauthlib, pyasn1-modules, opt-einsum, markdown, h5py, google-auth, google-auth-oauthlib, tensorboard, tensorflow\n  Attempting uninstall: typing-extensions\n    Found existing installation: typing_extensions 4.10.0\n    Uninstalling typing_extensions-4.10.0:\n      Successfully uninstalled typing_extensions-4.10.0\n  Attempting uninstall: numpy\n    Found existing installation: numpy 1.26.4\n    Uninstalling numpy-1.26.4:\n      Successfully uninstalled numpy-1.26.4\nSuccessfully installed MarkupSafe-2.1.5 astunparse-1.6.3 cachetools-5.3.3 flatbuffers-24.3.7 gast-0.4.0 google-auth-2.29.0 google-auth-oauthlib-1.0.0 google-pasta-0.2.0 grpcio-1.62.1 h5py-3.10.0 importlib-metadata-7.1.0 keras-2.13.1 libclang-18.1.1 markdown-3.6 numpy-1.24.3 oauthlib-3.2.2 opt-einsum-3.3.0 pyasn1-0.5.1 pyasn1-modules-0.3.0 requests-oauthlib-1.4.0 rsa-4.9 tensorboard-2.13.0 tensorboard-data-server-0.7.2 tensorflow-2.13.1 tensorflow-estimator-2.13.0 tensorflow-io-gcs-filesystem-0.36.0 typing-extensions-4.5.0 werkzeug-3.0.1\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nmicromamba run -p ./.venv-tf pip install -e .\nObtaining file:///sqaaas-build/github.com/interTwin-eu/itwinai\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nCollecting wandb>=0.15.11 (from itwinai==0.1)\n  Using cached wandb-0.16.4-py3-none-any.whl.metadata (10 kB)\nCollecting mlflow>=2.7 (from itwinai==0.1)\n  Using cached mlflow-2.11.3-py3-none-any.whl.metadata (15 kB)\nCollecting jsonargparse>=4.17.0 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Using cached jsonargparse-4.27.7-py3-none-any.whl.metadata (12 kB)\nCollecting pyyaml>=6.0.1 (from itwinai==0.1)\n  Downloading PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)\nCollecting omegaconf>=2.3.0 (from itwinai==0.1)\n  Using cached omegaconf-2.3.0-py3-none-any.whl.metadata (3.9 kB)\nCollecting submitit>=1.4.6 (from itwinai==0.1)\n  Using cached submitit-1.5.1-py3-none-any.whl.metadata (8.0 kB)\nRequirement already satisfied: typing-extensions==4.5.0 in ./.venv-tf/lib/python3.9/site-packages (from itwinai==0.1) (4.5.0)\nCollecting rich>=13.5.3 (from itwinai==0.1)\n  Downloading rich-13.7.1-py3-none-any.whl.metadata (18 kB)\nCollecting typer>=0.9.0 (from itwinai==0.1)\n  Using cached typer-0.9.0-py3-none-any.whl.metadata (14 kB)\nRequirement already satisfied: urllib3>=1.26.18 in ./.venv-tf/lib/python3.9/site-packages (from itwinai==0.1) (2.2.1)\nCollecting lightning>=2.0.0 (from itwinai==0.1)\n  Downloading lightning-2.2.1-py3-none-any.whl.metadata (56 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.8/56.8 kB 567.7 kB/s eta 0:00:00\nCollecting torchmetrics>=1.2.0 (from itwinai==0.1)\n  Downloading torchmetrics-1.3.2-py3-none-any.whl.metadata (19 kB)\nCollecting docstring-parser>=0.15 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Using cached docstring_parser-0.16-py3-none-any.whl.metadata (3.0 kB)\nCollecting typeshed-client>=2.1.0 (from jsonargparse[signatures]>=4.17.0->itwinai==0.1)\n  Using cached typeshed_client-2.5.1-py3-none-any.whl.metadata (7.5 kB)\nRequirement already satisfied: fsspec<2025.0,>=2022.5.0 in ./.venv-tf/lib/python3.9/site-packages (from fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1) (2024.3.1)\nCollecting lightning-utilities<2.0,>=0.8.0 (from lightning>=2.0.0->itwinai==0.1)\n  Downloading lightning_utilities-0.11.0-py3-none-any.whl.metadata (4.7 kB)\nRequirement already satisfied: numpy<3.0,>=1.17.2 in ./.venv-tf/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.24.3)\nRequirement already satisfied: packaging<25.0,>=20.0 in ./.venv-tf/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (24.0)\nCollecting torch<4.0,>=1.13.0 (from lightning>=2.0.0->itwinai==0.1)\n  Downloading torch-2.2.1-cp39-cp39-manylinux1_x86_64.whl.metadata (25 kB)\nRequirement already satisfied: tqdm<6.0,>=4.57.0 in ./.venv-tf/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (4.66.2)\nCollecting pytorch-lightning (from lightning>=2.0.0->itwinai==0.1)\n  Downloading pytorch_lightning-2.2.1-py3-none-any.whl.metadata (21 kB)\nRequirement already satisfied: click<9,>=7.0 in ./.venv-tf/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (8.1.7)\nCollecting cloudpickle<4 (from mlflow>=2.7->itwinai==0.1)\n  Using cached cloudpickle-3.0.0-py3-none-any.whl.metadata (7.0 kB)\nCollecting entrypoints<1 (from mlflow>=2.7->itwinai==0.1)\n  Using cached entrypoints-0.4-py3-none-any.whl.metadata (2.6 kB)\nCollecting gitpython<4,>=3.1.9 (from mlflow>=2.7->itwinai==0.1)\n  Using cached GitPython-3.1.42-py3-none-any.whl.metadata (12 kB)\nRequirement already satisfied: protobuf<5,>=3.12.0 in ./.venv-tf/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.20.3)\nCollecting pytz<2025 (from mlflow>=2.7->itwinai==0.1)\n  Downloading pytz-2024.1-py2.py3-none-any.whl.metadata (22 kB)\nRequirement already satisfied: requests<3,>=2.17.3 in ./.venv-tf/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (2.31.0)\nCollecting packaging<25.0,>=20.0 (from lightning>=2.0.0->itwinai==0.1)\n  Using cached packaging-23.2-py3-none-any.whl.metadata (3.2 kB)\nRequirement already satisfied: importlib-metadata!=4.7.0,<8,>=3.7.0 in ./.venv-tf/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (7.1.0)\nCollecting sqlparse<1,>=0.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Using cached sqlparse-0.4.4-py3-none-any.whl.metadata (4.0 kB)\nCollecting alembic!=1.10.0,<2 (from mlflow>=2.7->itwinai==0.1)\n  Using cached alembic-1.13.1-py3-none-any.whl.metadata (7.4 kB)\nCollecting docker<8,>=4.0.0 (from mlflow>=2.7->itwinai==0.1)\n  Using cached docker-7.0.0-py3-none-any.whl.metadata (3.5 kB)\nCollecting Flask<4 (from mlflow>=2.7->itwinai==0.1)\n  Using cached flask-3.0.2-py3-none-any.whl.metadata (3.6 kB)\nCollecting scipy<2 (from mlflow>=2.7->itwinai==0.1)\n  Using cached scipy-1.12.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\nCollecting pandas<3 (from mlflow>=2.7->itwinai==0.1)\n  Using cached pandas-2.2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (19 kB)\nCollecting querystring-parser<2 (from mlflow>=2.7->itwinai==0.1)\n  Using cached querystring_parser-1.2.4-py2.py3-none-any.whl.metadata (559 bytes)\nCollecting sqlalchemy<3,>=1.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Using cached SQLAlchemy-2.0.28-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\nCollecting scikit-learn<2 (from mlflow>=2.7->itwinai==0.1)\n  Using cached scikit_learn-1.4.1.post1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nCollecting pyarrow<16,>=4.0.0 (from mlflow>=2.7->itwinai==0.1)\n  Using cached pyarrow-15.0.2-cp39-cp39-manylinux_2_28_x86_64.whl.metadata (3.0 kB)\nRequirement already satisfied: markdown<4,>=3.3 in ./.venv-tf/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.6)\nCollecting matplotlib<4 (from mlflow>=2.7->itwinai==0.1)\n  Using cached matplotlib-3.8.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.8 kB)\nCollecting graphene<4 (from mlflow>=2.7->itwinai==0.1)\n  Using cached graphene-3.3-py2.py3-none-any.whl.metadata (7.7 kB)\nCollecting gunicorn<22 (from mlflow>=2.7->itwinai==0.1)\n  Using cached gunicorn-21.2.0-py3-none-any.whl.metadata (4.1 kB)\nCollecting Jinja2<4,>=2.11 (from mlflow>=2.7->itwinai==0.1)\n  Downloading Jinja2-3.1.3-py3-none-any.whl.metadata (3.3 kB)\nCollecting antlr4-python3-runtime==4.9.* (from omegaconf>=2.3.0->itwinai==0.1)\n  Using cached antlr4_python3_runtime-4.9.3-py3-none-any.whl\nCollecting markdown-it-py>=2.2.0 (from rich>=13.5.3->itwinai==0.1)\n  Downloading markdown_it_py-3.0.0-py3-none-any.whl.metadata (6.9 kB)\nCollecting pygments<3.0.0,>=2.13.0 (from rich>=13.5.3->itwinai==0.1)\n  Downloading pygments-2.17.2-py3-none-any.whl.metadata (2.6 kB)\nRequirement already satisfied: psutil>=5.0.0 in ./.venv-tf/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (5.9.8)\nCollecting sentry-sdk>=1.0.0 (from wandb>=0.15.11->itwinai==0.1)\n  Using cached sentry_sdk-1.43.0-py2.py3-none-any.whl.metadata (9.9 kB)\nCollecting docker-pycreds>=0.4.0 (from wandb>=0.15.11->itwinai==0.1)\n  Using cached docker_pycreds-0.4.0-py2.py3-none-any.whl.metadata (1.8 kB)\nCollecting setproctitle (from wandb>=0.15.11->itwinai==0.1)\n  Using cached setproctitle-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.9 kB)\nRequirement already satisfied: setuptools in ./.venv-tf/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (69.2.0)\nCollecting appdirs>=1.4.3 (from wandb>=0.15.11->itwinai==0.1)\n  Using cached appdirs-1.4.4-py2.py3-none-any.whl.metadata (9.0 kB)\nCollecting Mako (from alembic!=1.10.0,<2->mlflow>=2.7->itwinai==0.1)\n  Using cached Mako-1.3.2-py3-none-any.whl.metadata (2.9 kB)\nRequirement already satisfied: six>=1.4.0 in ./.venv-tf/lib/python3.9/site-packages (from docker-pycreds>=0.4.0->wandb>=0.15.11->itwinai==0.1) (1.16.0)\nRequirement already satisfied: Werkzeug>=3.0.0 in ./.venv-tf/lib/python3.9/site-packages (from Flask<4->mlflow>=2.7->itwinai==0.1) (3.0.1)\nCollecting itsdangerous>=2.1.2 (from Flask<4->mlflow>=2.7->itwinai==0.1)\n  Downloading itsdangerous-2.1.2-py3-none-any.whl.metadata (2.9 kB)\nCollecting blinker>=1.6.2 (from Flask<4->mlflow>=2.7->itwinai==0.1)\n  Using cached blinker-1.7.0-py3-none-any.whl.metadata (1.9 kB)\nCollecting aiohttp!=4.0.0a0,!=4.0.0a1 (from fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached aiohttp-3.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.4 kB)\nCollecting gitdb<5,>=4.0.1 (from gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1)\n  Using cached gitdb-4.0.11-py3-none-any.whl.metadata (1.2 kB)\nCollecting graphql-core<3.3,>=3.1 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Using cached graphql_core-3.2.3-py3-none-any.whl.metadata (10 kB)\nCollecting graphql-relay<3.3,>=3.1 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Using cached graphql_relay-3.2.0-py3-none-any.whl.metadata (12 kB)\nCollecting aniso8601<10,>=8 (from graphene<4->mlflow>=2.7->itwinai==0.1)\n  Using cached aniso8601-9.0.1-py2.py3-none-any.whl.metadata (23 kB)\nRequirement already satisfied: zipp>=0.5 in ./.venv-tf/lib/python3.9/site-packages (from importlib-metadata!=4.7.0,<8,>=3.7.0->mlflow>=2.7->itwinai==0.1) (3.18.1)\nRequirement already satisfied: MarkupSafe>=2.0 in ./.venv-tf/lib/python3.9/site-packages (from Jinja2<4,>=2.11->mlflow>=2.7->itwinai==0.1) (2.1.5)\nCollecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=13.5.3->itwinai==0.1)\n  Downloading mdurl-0.1.2-py3-none-any.whl.metadata (1.6 kB)\nCollecting contourpy>=1.0.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Using cached contourpy-1.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.8 kB)\nCollecting cycler>=0.10 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Using cached cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)\nCollecting fonttools>=4.22.0 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Using cached fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (159 kB)\nCollecting kiwisolver>=1.3.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Using cached kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl.metadata (6.4 kB)\nCollecting pillow>=8 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading pillow-10.2.0-cp39-cp39-manylinux_2_28_x86_64.whl.metadata (9.7 kB)\nCollecting pyparsing>=2.3.1 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Using cached pyparsing-3.1.2-py3-none-any.whl.metadata (5.1 kB)\nCollecting python-dateutil>=2.7 (from matplotlib<4->mlflow>=2.7->itwinai==0.1)\n  Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)\nRequirement already satisfied: importlib-resources>=3.2.0 in ./.venv-tf/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (6.4.0)\nCollecting tzdata>=2022.7 (from pandas<3->mlflow>=2.7->itwinai==0.1)\n  Using cached tzdata-2024.1-py2.py3-none-any.whl.metadata (1.4 kB)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.17.3->mlflow>=2.7->itwinai==0.1) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.17.3->mlflow>=2.7->itwinai==0.1) (3.6)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-tf/lib/python3.9/site-packages (from requests<3,>=2.17.3->mlflow>=2.7->itwinai==0.1) (2024.2.2)\nCollecting joblib>=1.2.0 (from scikit-learn<2->mlflow>=2.7->itwinai==0.1)\n  Using cached joblib-1.3.2-py3-none-any.whl.metadata (5.4 kB)\nCollecting threadpoolctl>=2.0.0 (from scikit-learn<2->mlflow>=2.7->itwinai==0.1)\n  Using cached threadpoolctl-3.4.0-py3-none-any.whl.metadata (13 kB)\nINFO: pip is looking at multiple versions of sqlalchemy to determine which version is compatible with other requirements. This could take a while.\nCollecting sqlalchemy<3,>=1.4.0 (from mlflow>=2.7->itwinai==0.1)\n  Using cached SQLAlchemy-2.0.27-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Using cached SQLAlchemy-2.0.26-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Using cached SQLAlchemy-2.0.25-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\n  Using cached SQLAlchemy-2.0.24-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\nCollecting greenlet!=0.4.17 (from sqlalchemy<3,>=1.4.0->mlflow>=2.7->itwinai==0.1)\n  Using cached greenlet-3.0.3-cp39-cp39-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl.metadata (3.8 kB)\nCollecting filelock (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading filelock-3.13.1-py3-none-any.whl.metadata (2.8 kB)\nINFO: pip is looking at multiple versions of torch to determine which version is compatible with other requirements. This could take a while.\nCollecting torch<4.0,>=1.13.0 (from lightning>=2.0.0->itwinai==0.1)\n  Downloading torch-2.2.0-cp39-cp39-manylinux1_x86_64.whl.metadata (25 kB)\n  Downloading torch-2.1.2-cp39-cp39-manylinux1_x86_64.whl.metadata (25 kB)\nCollecting sympy (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading sympy-1.12-py3-none-any.whl.metadata (12 kB)\nCollecting networkx (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading networkx-3.2.1-py3-none-any.whl.metadata (5.2 kB)\nCollecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-runtime-cu12==12.1.105 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-cupti-cu12==12.1.105 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cudnn-cu12==8.9.2.26 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cublas-cu12==12.1.3.1 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cufft-cu12==11.0.2.54 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-curand-cu12==10.3.2.106 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cusolver-cu12==11.4.5.107 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cusparse-cu12==12.1.0.106 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-nccl-cu12==2.18.1 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_nccl_cu12-2.18.1-py3-none-manylinux1_x86_64.whl.metadata (1.8 kB)\nCollecting nvidia-nvtx-cu12==12.1.105 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.7 kB)\nCollecting triton==2.1.0 (from torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading triton-2.1.0-0-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.3 kB)\nCollecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading nvidia_nvjitlink_cu12-12.4.99-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting aiosignal>=1.1.2 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached aiosignal-1.3.1-py3-none-any.whl.metadata (4.0 kB)\nCollecting attrs>=17.3.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached attrs-23.2.0-py3-none-any.whl.metadata (9.5 kB)\nCollecting frozenlist>=1.1.1 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached frozenlist-1.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\nCollecting multidict<7.0,>=4.5 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached multidict-6.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.2 kB)\nCollecting yarl<2.0,>=1.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached yarl-1.9.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (31 kB)\nCollecting async-timeout<5.0,>=4.0 (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>=2022.5.0->lightning>=2.0.0->itwinai==0.1)\n  Using cached async_timeout-4.0.3-py3-none-any.whl.metadata (4.2 kB)\nCollecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1)\n  Using cached smmap-5.0.1-py3-none-any.whl.metadata (4.3 kB)\nCollecting mpmath>=0.19 (from sympy->torch<4.0,>=1.13.0->lightning>=2.0.0->itwinai==0.1)\n  Downloading mpmath-1.3.0-py3-none-any.whl.metadata (8.6 kB)\nUsing cached jsonargparse-4.27.7-py3-none-any.whl (192 kB)\nDownloading lightning-2.2.1-py3-none-any.whl (2.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 4.7 MB/s eta 0:00:00\nUsing cached mlflow-2.11.3-py3-none-any.whl (19.7 MB)\nUsing cached omegaconf-2.3.0-py3-none-any.whl (79 kB)\nDownloading PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (738 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 738.9/738.9 kB 2.4 MB/s eta 0:00:00\nDownloading rich-13.7.1-py3-none-any.whl (240 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 240.7/240.7 kB 786.1 kB/s eta 0:00:00\nUsing cached submitit-1.5.1-py3-none-any.whl (74 kB)\nDownloading torchmetrics-1.3.2-py3-none-any.whl (841 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 841.5/841.5 kB 1.5 MB/s eta 0:00:00\nUsing cached typer-0.9.0-py3-none-any.whl (45 kB)\nUsing cached wandb-0.16.4-py3-none-any.whl (2.2 MB)\nUsing cached alembic-1.13.1-py3-none-any.whl (233 kB)\nUsing cached appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\nUsing cached cloudpickle-3.0.0-py3-none-any.whl (20 kB)\nUsing cached docker-7.0.0-py3-none-any.whl (147 kB)\nUsing cached docker_pycreds-0.4.0-py2.py3-none-any.whl (9.0 kB)\nUsing cached docstring_parser-0.16-py3-none-any.whl (36 kB)\nUsing cached entrypoints-0.4-py3-none-any.whl (5.3 kB)\nUsing cached flask-3.0.2-py3-none-any.whl (101 kB)\nUsing cached GitPython-3.1.42-py3-none-any.whl (195 kB)\nUsing cached graphene-3.3-py2.py3-none-any.whl (128 kB)\nUsing cached gunicorn-21.2.0-py3-none-any.whl (80 kB)\nDownloading Jinja2-3.1.3-py3-none-any.whl (133 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.2/133.2 kB 347.9 kB/s eta 0:00:00\nDownloading lightning_utilities-0.11.0-py3-none-any.whl (25 kB)\nDownloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 436.5 kB/s eta 0:00:00\nUsing cached matplotlib-3.8.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\nUsing cached packaging-23.2-py3-none-any.whl (53 kB)\nUsing cached pandas-2.2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)\nUsing cached pyarrow-15.0.2-cp39-cp39-manylinux_2_28_x86_64.whl (38.3 MB)\nDownloading pygments-2.17.2-py3-none-any.whl (1.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.2/1.2 MB 6.5 MB/s eta 0:00:00\nDownloading pytz-2024.1-py2.py3-none-any.whl (505 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 505.5/505.5 kB 3.2 MB/s eta 0:00:00\nUsing cached querystring_parser-1.2.4-py2.py3-none-any.whl (7.9 kB)\nUsing cached scikit_learn-1.4.1.post1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\nUsing cached scipy-1.12.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.5 MB)\nUsing cached sentry_sdk-1.43.0-py2.py3-none-any.whl (264 kB)\nUsing cached SQLAlchemy-2.0.24-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\nUsing cached sqlparse-0.4.4-py3-none-any.whl (41 kB)\nDownloading torch-2.1.2-cp39-cp39-manylinux1_x86_64.whl (670.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 670.2/670.2 MB 2.1 MB/s eta 0:00:00\nDownloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 410.6/410.6 MB 1.4 MB/s eta 0:00:00\nDownloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 14.1/14.1 MB 23.1 MB/s eta 0:00:00\nDownloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 23.7/23.7 MB 17.7 MB/s eta 0:00:00\nDownloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 823.6/823.6 kB 5.6 MB/s eta 0:00:00\nDownloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 731.7/731.7 MB 1.2 MB/s eta 0:00:00\nDownloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.6/121.6 MB 3.0 MB/s eta 0:00:00\nDownloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.5/56.5 MB 9.2 MB/s eta 0:00:00\nDownloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 124.2/124.2 MB 3.1 MB/s eta 0:00:00\nDownloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 196.0/196.0 MB 2.4 MB/s eta 0:00:00\nDownloading nvidia_nccl_cu12-2.18.1-py3-none-manylinux1_x86_64.whl (209.8 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 209.8/209.8 MB 2.3 MB/s eta 0:00:00\nDownloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.1/99.1 kB 801.4 kB/s eta 0:00:00\nDownloading triton-2.1.0-0-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (89.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 89.3/89.3 MB 4.0 MB/s eta 0:00:00\nUsing cached typeshed_client-2.5.1-py3-none-any.whl (606 kB)\nDownloading pytorch_lightning-2.2.1-py3-none-any.whl (801 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 801.6/801.6 kB 2.1 MB/s eta 0:00:00\nUsing cached setproctitle-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30 kB)\nUsing cached aiohttp-3.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\nUsing cached aniso8601-9.0.1-py2.py3-none-any.whl (52 kB)\nUsing cached blinker-1.7.0-py3-none-any.whl (13 kB)\nUsing cached contourpy-1.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (310 kB)\nUsing cached cycler-0.12.1-py3-none-any.whl (8.3 kB)\nUsing cached fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.6 MB)\nUsing cached gitdb-4.0.11-py3-none-any.whl (62 kB)\nUsing cached graphql_core-3.2.3-py3-none-any.whl (202 kB)\nUsing cached graphql_relay-3.2.0-py3-none-any.whl (16 kB)\nUsing cached greenlet-3.0.3-cp39-cp39-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl (614 kB)\nDownloading itsdangerous-2.1.2-py3-none-any.whl (15 kB)\nUsing cached joblib-1.3.2-py3-none-any.whl (302 kB)\nUsing cached kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\nDownloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\nDownloading pillow-10.2.0-cp39-cp39-manylinux_2_28_x86_64.whl (4.5 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.5/4.5 MB 13.8 MB/s eta 0:00:00\nUsing cached pyparsing-3.1.2-py3-none-any.whl (103 kB)\nDownloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 508.2 kB/s eta 0:00:00\nUsing cached threadpoolctl-3.4.0-py3-none-any.whl (17 kB)\nUsing cached tzdata-2024.1-py2.py3-none-any.whl (345 kB)\nDownloading filelock-3.13.1-py3-none-any.whl (11 kB)\nUsing cached Mako-1.3.2-py3-none-any.whl (78 kB)\nDownloading networkx-3.2.1-py3-none-any.whl (1.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 3.5 MB/s eta 0:00:00\nDownloading sympy-1.12-py3-none-any.whl (5.7 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.7/5.7 MB 8.4 MB/s eta 0:00:00\nUsing cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\nUsing cached async_timeout-4.0.3-py3-none-any.whl (5.7 kB)\nUsing cached attrs-23.2.0-py3-none-any.whl (60 kB)\nUsing cached frozenlist-1.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (240 kB)\nDownloading mpmath-1.3.0-py3-none-any.whl (536 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 536.2/536.2 kB 429.8 kB/s eta 0:00:00\nUsing cached multidict-6.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (123 kB)\nUsing cached smmap-5.0.1-py3-none-any.whl (24 kB)\nUsing cached yarl-1.9.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (304 kB)\nDownloading nvidia_nvjitlink_cu12-12.4.99-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 21.1/21.1 MB 10.8 MB/s eta 0:00:00\nBuilding wheels for collected packages: itwinai\n  Building editable for itwinai (pyproject.toml): started\n  Building editable for itwinai (pyproject.toml): finished with status 'done'\n  Created wheel for itwinai: filename=itwinai-0.1-0.editable-py3-none-any.whl size=5541 sha256=078ca7cc74a8179c250d69f15778f2bf1fcc2056ff8b24e5589bf5123f35ca9c\n  Stored in directory: /tmp/pip-ephem-wheel-cache-1luvckpe/wheels/1e/c1/bd/3c6ac8da1906f8e34a8792504e5fcc8552c7f560fb134d95ae\nSuccessfully built itwinai\nInstalling collected packages: pytz, mpmath, appdirs, antlr4-python3-runtime, aniso8601, tzdata, typer, threadpoolctl, sympy, sqlparse, smmap, setproctitle, sentry-sdk, scipy, querystring-parser, pyyaml, python-dateutil, pyparsing, pygments, pyarrow, pillow, packaging, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, networkx, multidict, mdurl, Mako, kiwisolver, joblib, Jinja2, itsdangerous, greenlet, graphql-core, frozenlist, fonttools, filelock, entrypoints, docstring-parser, docker-pycreds, cycler, contourpy, cloudpickle, blinker, attrs, async-timeout, yarl, typeshed-client, triton, submitit, sqlalchemy, scikit-learn, pandas, omegaconf, nvidia-cusparse-cu12, nvidia-cudnn-cu12, matplotlib, markdown-it-py, lightning-utilities, jsonargparse, gunicorn, graphql-relay, gitdb, Flask, docker, aiosignal, rich, nvidia-cusolver-cu12, graphene, gitpython, alembic, aiohttp, wandb, torch, mlflow, torchmetrics, pytorch-lightning, lightning, itwinai\n  Attempting uninstall: packaging\n    Found existing installation: packaging 24.0\n    Uninstalling packaging-24.0:\n      Successfully uninstalled packaging-24.0\nSuccessfully installed Flask-3.0.2 Jinja2-3.1.3 Mako-1.3.2 aiohttp-3.9.3 aiosignal-1.3.1 alembic-1.13.1 aniso8601-9.0.1 antlr4-python3-runtime-4.9.3 appdirs-1.4.4 async-timeout-4.0.3 attrs-23.2.0 blinker-1.7.0 cloudpickle-3.0.0 contourpy-1.2.0 cycler-0.12.1 docker-7.0.0 docker-pycreds-0.4.0 docstring-parser-0.16 entrypoints-0.4 filelock-3.13.1 fonttools-4.50.0 frozenlist-1.4.1 gitdb-4.0.11 gitpython-3.1.42 graphene-3.3 graphql-core-3.2.3 graphql-relay-3.2.0 greenlet-3.0.3 gunicorn-21.2.0 itsdangerous-2.1.2 itwinai-0.1 joblib-1.3.2 jsonargparse-4.27.7 kiwisolver-1.4.5 lightning-2.2.1 lightning-utilities-0.11.0 markdown-it-py-3.0.0 matplotlib-3.8.3 mdurl-0.1.2 mlflow-2.11.3 mpmath-1.3.0 multidict-6.0.5 networkx-3.2.1 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.18.1 nvidia-nvjitlink-cu12-12.4.99 nvidia-nvtx-cu12-12.1.105 omegaconf-2.3.0 packaging-23.2 pandas-2.2.1 pillow-10.2.0 pyarrow-15.0.2 pygments-2.17.2 pyparsing-3.1.2 python-dateutil-2.9.0.post0 pytorch-lightning-2.2.1 pytz-2024.1 pyyaml-6.0.1 querystring-parser-1.2.4 rich-13.7.1 scikit-learn-1.4.1.post1 scipy-1.12.0 sentry-sdk-1.43.0 setproctitle-1.3.3 smmap-5.0.1 sqlalchemy-2.0.24 sqlparse-0.4.4 submitit-1.5.1 sympy-1.12 threadpoolctl-3.4.0 torch-2.1.2 torchmetrics-1.3.2 triton-2.1.0 typer-0.9.0 typeshed-client-2.5.1 tzdata-2024.1 wandb-0.16.4 yarl-1.9.4\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nmkdir -p ./.venv-tf/lib/nvvm/libdevice\ncp ./.venv-tf/lib/libdevice.10.bc ./.venv-tf/lib/nvvm/libdevice/\nProcessing /sqaaas-build/github.com/interTwin-eu/itwinai\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: wandb>=0.15.11 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (0.16.4)\nRequirement already satisfied: mlflow>=2.7 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.11.3)\nRequirement already satisfied: jsonargparse>=4.17.0 in ./.venv-pytorch/lib/python3.9/site-packages (from jsonargparse[signatures]>=4.17.0->itwinai==0.1) (4.27.7)\nRequirement already satisfied: pyyaml>=6.0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (6.0.1)\nRequirement already satisfied: omegaconf>=2.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.3.0)\nRequirement already satisfied: submitit>=1.4.6 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (1.5.1)\nRequirement already satisfied: typing-extensions==4.5.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (4.5.0)\nRequirement already satisfied: rich>=13.5.3 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (13.7.1)\nRequirement already satisfied: typer>=0.9.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (0.9.0)\nRequirement already satisfied: urllib3>=1.26.18 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.2.1)\nRequirement already satisfied: lightning>=2.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (2.0.0)\nRequirement already satisfied: torchmetrics>=1.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from itwinai==0.1) (1.3.2)\nCollecting pytest>=7.4.2 (from itwinai==0.1)\n  Downloading pytest-8.1.1-py3-none-any.whl.metadata (7.6 kB)\nCollecting pytest-mock>=3.11.1 (from itwinai==0.1)\n  Downloading pytest_mock-3.14.0-py3-none-any.whl.metadata (3.8 kB)\nCollecting pytest-cov>=4.1.0 (from itwinai==0.1)\n  Downloading pytest_cov-4.1.0-py3-none-any.whl.metadata (26 kB)\nCollecting ipykernel (from itwinai==0.1)\n  Downloading ipykernel-6.29.3-py3-none-any.whl.metadata (6.3 kB)\nCollecting ipython (from itwinai==0.1)\n  Downloading ipython-8.18.1-py3-none-any.whl.metadata (6.0 kB)\nRequirement already satisfied: docstring-parser>=0.15 in ./.venv-pytorch/lib/python3.9/site-packages (from jsonargparse[signatures]>=4.17.0->itwinai==0.1) (0.16)\nRequirement already satisfied: typeshed-client>=2.1.0 in ./.venv-pytorch/lib/python3.9/site-packages (from jsonargparse[signatures]>=4.17.0->itwinai==0.1) (2.5.1)\nRequirement already satisfied: Jinja2<5.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (3.1.3)\nRequirement already satisfied: arrow<3.0,>=1.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.0)\nRequirement already satisfied: beautifulsoup4<6.0,>=4.8.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (4.12.3)\nRequirement already satisfied: click<10.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (8.1.7)\nRequirement already satisfied: croniter<1.4.0,>=1.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.15)\nRequirement already satisfied: dateutils<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.6.12)\nRequirement already satisfied: deepdiff<8.0,>=5.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (6.7.1)\nRequirement already satisfied: fastapi<0.89.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.88.0)\nRequirement already satisfied: fsspec<2024.0,>=2022.5.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2023.12.2)\nRequirement already satisfied: inquirer<5.0,>=2.10.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (3.1.4)\nRequirement already satisfied: lightning-cloud>=0.5.31 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.5.39)\nRequirement already satisfied: lightning-utilities<2.0,>=0.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.11.0)\nRequirement already satisfied: numpy<3.0,>=1.17.2 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.26.4)\nRequirement already satisfied: packaging in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (23.2)\nRequirement already satisfied: psutil<7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (5.9.8)\nRequirement already satisfied: pydantic<3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.10.14)\nRequirement already satisfied: requests<4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2.31.0)\nRequirement already satisfied: starlette<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.22.0)\nRequirement already satisfied: starsessions<2.0,>=1.2.1 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.3.0)\nRequirement already satisfied: torch<4.0,>=1.11.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.13.1)\nRequirement already satisfied: tqdm<6.0,>=4.57.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (4.66.2)\nRequirement already satisfied: traitlets<7.0,>=5.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (5.14.2)\nRequirement already satisfied: uvicorn<2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (0.29.0)\nRequirement already satisfied: websocket-client<3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (1.7.0)\nRequirement already satisfied: websockets<12.0 in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (11.0.3)\nRequirement already satisfied: pytorch-lightning in ./.venv-pytorch/lib/python3.9/site-packages (from lightning>=2.0.0->itwinai==0.1) (2.2.1)\nRequirement already satisfied: cloudpickle<4 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.0.0)\nRequirement already satisfied: entrypoints<1 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (0.4)\nRequirement already satisfied: gitpython<4,>=3.1.9 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.1.42)\nRequirement already satisfied: protobuf<5,>=3.12.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (4.25.3)\nRequirement already satisfied: pytz<2025 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (2024.1)\nRequirement already satisfied: importlib-metadata!=4.7.0,<8,>=3.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (7.1.0)\nRequirement already satisfied: sqlparse<1,>=0.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (0.4.4)\nRequirement already satisfied: alembic!=1.10.0,<2 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (1.13.1)\nRequirement already satisfied: docker<8,>=4.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (7.0.0)\nRequirement already satisfied: Flask<4 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.0.2)\nRequirement already satisfied: scipy<2 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (1.12.0)\nRequirement already satisfied: pandas<3 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (2.2.1)\nRequirement already satisfied: querystring-parser<2 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (1.2.4)\nRequirement already satisfied: sqlalchemy<3,>=1.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (2.0.24)\nRequirement already satisfied: scikit-learn<2 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (1.4.1.post1)\nRequirement already satisfied: pyarrow<16,>=4.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (15.0.2)\nRequirement already satisfied: markdown<4,>=3.3 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.6)\nRequirement already satisfied: matplotlib<4 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.8.3)\nRequirement already satisfied: graphene<4 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (3.3)\nRequirement already satisfied: gunicorn<22 in ./.venv-pytorch/lib/python3.9/site-packages (from mlflow>=2.7->itwinai==0.1) (21.2.0)\nRequirement already satisfied: antlr4-python3-runtime==4.9.* in ./.venv-pytorch/lib/python3.9/site-packages (from omegaconf>=2.3.0->itwinai==0.1) (4.9.3)\nCollecting iniconfig (from pytest>=7.4.2->itwinai==0.1)\n  Downloading iniconfig-2.0.0-py3-none-any.whl.metadata (2.6 kB)\nCollecting pluggy<2.0,>=1.4 (from pytest>=7.4.2->itwinai==0.1)\n  Downloading pluggy-1.4.0-py3-none-any.whl.metadata (4.3 kB)\nRequirement already satisfied: exceptiongroup>=1.0.0rc8 in ./.venv-pytorch/lib/python3.9/site-packages (from pytest>=7.4.2->itwinai==0.1) (1.2.0)\nRequirement already satisfied: tomli>=1 in ./.venv-pytorch/lib/python3.9/site-packages (from pytest>=7.4.2->itwinai==0.1) (2.0.1)\nCollecting coverage>=5.2.1 (from coverage[toml]>=5.2.1->pytest-cov>=4.1.0->itwinai==0.1)\n  Downloading coverage-7.4.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.2 kB)\nRequirement already satisfied: markdown-it-py>=2.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from rich>=13.5.3->itwinai==0.1) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in ./.venv-pytorch/lib/python3.9/site-packages (from rich>=13.5.3->itwinai==0.1) (2.17.2)\nRequirement already satisfied: sentry-sdk>=1.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (1.43.0)\nRequirement already satisfied: docker-pycreds>=0.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (0.4.0)\nRequirement already satisfied: setproctitle in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (1.3.3)\nRequirement already satisfied: setuptools in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (69.2.0)\nRequirement already satisfied: appdirs>=1.4.3 in ./.venv-pytorch/lib/python3.9/site-packages (from wandb>=0.15.11->itwinai==0.1) (1.4.4)\nCollecting comm>=0.1.1 (from ipykernel->itwinai==0.1)\n  Downloading comm-0.2.2-py3-none-any.whl.metadata (3.7 kB)\nCollecting debugpy>=1.6.5 (from ipykernel->itwinai==0.1)\n  Downloading debugpy-1.8.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.1 kB)\nCollecting jupyter-client>=6.1.12 (from ipykernel->itwinai==0.1)\n  Downloading jupyter_client-8.6.1-py3-none-any.whl.metadata (8.3 kB)\nCollecting jupyter-core!=5.0.*,>=4.12 (from ipykernel->itwinai==0.1)\n  Downloading jupyter_core-5.7.2-py3-none-any.whl.metadata (3.4 kB)\nCollecting matplotlib-inline>=0.1 (from ipykernel->itwinai==0.1)\n  Downloading matplotlib_inline-0.1.6-py3-none-any.whl.metadata (2.8 kB)\nCollecting nest-asyncio (from ipykernel->itwinai==0.1)\n  Downloading nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)\nCollecting pyzmq>=24 (from ipykernel->itwinai==0.1)\n  Downloading pyzmq-25.1.2-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl.metadata (4.9 kB)\nCollecting tornado>=6.1 (from ipykernel->itwinai==0.1)\n  Downloading tornado-6.4-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.5 kB)\nCollecting decorator (from ipython->itwinai==0.1)\n  Downloading decorator-5.1.1-py3-none-any.whl.metadata (4.0 kB)\nCollecting jedi>=0.16 (from ipython->itwinai==0.1)\n  Downloading jedi-0.19.1-py2.py3-none-any.whl.metadata (22 kB)\nCollecting prompt-toolkit<3.1.0,>=3.0.41 (from ipython->itwinai==0.1)\n  Downloading prompt_toolkit-3.0.43-py3-none-any.whl.metadata (6.5 kB)\nCollecting stack-data (from ipython->itwinai==0.1)\n  Downloading stack_data-0.6.3-py3-none-any.whl.metadata (18 kB)\nRequirement already satisfied: pexpect>4.3 in ./.venv-pytorch/lib/python3.9/site-packages (from ipython->itwinai==0.1) (4.9.0)\nRequirement already satisfied: Mako in ./.venv-pytorch/lib/python3.9/site-packages (from alembic!=1.10.0,<2->mlflow>=2.7->itwinai==0.1) (1.3.2)\nRequirement already satisfied: python-dateutil>=2.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from arrow<3.0,>=1.2.0->lightning>=2.0.0->itwinai==0.1) (2.9.0)\nRequirement already satisfied: types-python-dateutil>=2.8.10 in ./.venv-pytorch/lib/python3.9/site-packages (from arrow<3.0,>=1.2.0->lightning>=2.0.0->itwinai==0.1) (2.9.0.20240316)\nRequirement already satisfied: soupsieve>1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from beautifulsoup4<6.0,>=4.8.0->lightning>=2.0.0->itwinai==0.1) (2.5)\nRequirement already satisfied: ordered-set<4.2.0,>=4.0.2 in ./.venv-pytorch/lib/python3.9/site-packages (from deepdiff<8.0,>=5.7.0->lightning>=2.0.0->itwinai==0.1) (4.1.0)\nRequirement already satisfied: six>=1.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from docker-pycreds>=0.4.0->wandb>=0.15.11->itwinai==0.1) (1.16.0)\nRequirement already satisfied: anyio<5,>=3.4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from starlette<2.0->lightning>=2.0.0->itwinai==0.1) (4.3.0)\nRequirement already satisfied: Werkzeug>=3.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from Flask<4->mlflow>=2.7->itwinai==0.1) (3.0.1)\nRequirement already satisfied: itsdangerous>=2.1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from Flask<4->mlflow>=2.7->itwinai==0.1) (2.1.2)\nRequirement already satisfied: blinker>=1.6.2 in ./.venv-pytorch/lib/python3.9/site-packages (from Flask<4->mlflow>=2.7->itwinai==0.1) (1.7.0)\nRequirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in ./.venv-pytorch/lib/python3.9/site-packages (from fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (3.9.3)\nRequirement already satisfied: gitdb<5,>=4.0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1) (4.0.11)\nRequirement already satisfied: graphql-core<3.3,>=3.1 in ./.venv-pytorch/lib/python3.9/site-packages (from graphene<4->mlflow>=2.7->itwinai==0.1) (3.2.3)\nRequirement already satisfied: graphql-relay<3.3,>=3.1 in ./.venv-pytorch/lib/python3.9/site-packages (from graphene<4->mlflow>=2.7->itwinai==0.1) (3.2.0)\nRequirement already satisfied: aniso8601<10,>=8 in ./.venv-pytorch/lib/python3.9/site-packages (from graphene<4->mlflow>=2.7->itwinai==0.1) (9.0.1)\nRequirement already satisfied: zipp>=0.5 in ./.venv-pytorch/lib/python3.9/site-packages (from importlib-metadata!=4.7.0,<8,>=3.7.0->mlflow>=2.7->itwinai==0.1) (3.17.0)\nRequirement already satisfied: blessed>=1.19.0 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (1.19.1)\nRequirement already satisfied: python-editor>=1.0.4 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (1.0.4)\nRequirement already satisfied: readchar>=3.0.6 in ./.venv-pytorch/lib/python3.9/site-packages (from inquirer<5.0,>=2.10.0->lightning>=2.0.0->itwinai==0.1) (4.0.5.dev0)\nCollecting parso<0.9.0,>=0.8.3 (from jedi>=0.16->ipython->itwinai==0.1)\n  Downloading parso-0.8.3-py2.py3-none-any.whl.metadata (7.5 kB)\nRequirement already satisfied: MarkupSafe>=2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from Jinja2<5.0->lightning>=2.0.0->itwinai==0.1) (2.1.5)\nRequirement already satisfied: platformdirs>=2.5 in ./.venv-pytorch/lib/python3.9/site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->itwinai==0.1) (4.2.0)\nRequirement already satisfied: pyjwt in ./.venv-pytorch/lib/python3.9/site-packages (from lightning-cloud>=0.5.31->lightning>=2.0.0->itwinai==0.1) (2.8.0)\nRequirement already satisfied: python-multipart in ./.venv-pytorch/lib/python3.9/site-packages (from lightning-cloud>=0.5.31->lightning>=2.0.0->itwinai==0.1) (0.0.9)\nRequirement already satisfied: mdurl~=0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from markdown-it-py>=2.2.0->rich>=13.5.3->itwinai==0.1) (0.1.2)\nRequirement already satisfied: contourpy>=1.0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (1.2.0)\nRequirement already satisfied: cycler>=0.10 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (4.50.0)\nRequirement already satisfied: kiwisolver>=1.3.1 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (1.4.5)\nRequirement already satisfied: pillow>=8 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (9.4.0)\nRequirement already satisfied: pyparsing>=2.3.1 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (3.1.2)\nRequirement already satisfied: importlib-resources>=3.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from matplotlib<4->mlflow>=2.7->itwinai==0.1) (6.4.0)\nRequirement already satisfied: tzdata>=2022.7 in ./.venv-pytorch/lib/python3.9/site-packages (from pandas<3->mlflow>=2.7->itwinai==0.1) (2024.1)\nRequirement already satisfied: ptyprocess>=0.5 in ./.venv-pytorch/lib/python3.9/site-packages (from pexpect>4.3->ipython->itwinai==0.1) (0.7.0)\nRequirement already satisfied: wcwidth in ./.venv-pytorch/lib/python3.9/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython->itwinai==0.1) (0.2.13)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (3.6)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-pytorch/lib/python3.9/site-packages (from requests<4.0->lightning>=2.0.0->itwinai==0.1) (2024.2.2)\nRequirement already satisfied: joblib>=1.2.0 in ./.venv-pytorch/lib/python3.9/site-packages (from scikit-learn<2->mlflow>=2.7->itwinai==0.1) (1.3.2)\nRequirement already satisfied: threadpoolctl>=2.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from scikit-learn<2->mlflow>=2.7->itwinai==0.1) (3.4.0)\nRequirement already satisfied: greenlet!=0.4.17 in ./.venv-pytorch/lib/python3.9/site-packages (from sqlalchemy<3,>=1.4.0->mlflow>=2.7->itwinai==0.1) (3.0.3)\nRequirement already satisfied: h11>=0.8 in ./.venv-pytorch/lib/python3.9/site-packages (from uvicorn<2.0->lightning>=2.0.0->itwinai==0.1) (0.14.0)\nCollecting executing>=1.2.0 (from stack-data->ipython->itwinai==0.1)\n  Downloading executing-2.0.1-py2.py3-none-any.whl.metadata (9.0 kB)\nCollecting asttokens>=2.1.0 (from stack-data->ipython->itwinai==0.1)\n  Downloading asttokens-2.4.1-py2.py3-none-any.whl.metadata (5.2 kB)\nCollecting pure-eval (from stack-data->ipython->itwinai==0.1)\n  Downloading pure_eval-0.2.2-py3-none-any.whl.metadata (6.2 kB)\nRequirement already satisfied: aiosignal>=1.1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (1.3.1)\nRequirement already satisfied: attrs>=17.3.0 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (23.2.0)\nRequirement already satisfied: frozenlist>=1.1.1 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (1.4.1)\nRequirement already satisfied: multidict<7.0,>=4.5 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (6.0.5)\nRequirement already satisfied: yarl<2.0,>=1.0 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (1.9.4)\nRequirement already satisfied: async-timeout<5.0,>=4.0 in ./.venv-pytorch/lib/python3.9/site-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]<2025.0,>2021.06.0->lightning>=2.0.0->itwinai==0.1) (4.0.3)\nRequirement already satisfied: sniffio>=1.1 in ./.venv-pytorch/lib/python3.9/site-packages (from anyio<5,>=3.4.0->starlette<2.0->lightning>=2.0.0->itwinai==0.1) (1.3.1)\nRequirement already satisfied: smmap<6,>=3.0.1 in ./.venv-pytorch/lib/python3.9/site-packages (from gitdb<5,>=4.0.1->gitpython<4,>=3.1.9->mlflow>=2.7->itwinai==0.1) (5.0.1)\nDownloading pytest-8.1.1-py3-none-any.whl (337 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 337.4/337.4 kB 1.1 MB/s eta 0:00:00\nDownloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\nDownloading pytest_mock-3.14.0-py3-none-any.whl (9.9 kB)\nDownloading ipykernel-6.29.3-py3-none-any.whl (117 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.1/117.1 kB 556.3 kB/s eta 0:00:00\nDownloading ipython-8.18.1-py3-none-any.whl (808 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 808.2/808.2 kB 3.7 MB/s eta 0:00:00\nDownloading comm-0.2.2-py3-none-any.whl (7.2 kB)\nDownloading coverage-7.4.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (233 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.1/233.1 kB 1.9 MB/s eta 0:00:00\nDownloading debugpy-1.8.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 5.5 MB/s eta 0:00:00\nDownloading jedi-0.19.1-py2.py3-none-any.whl (1.6 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 6.0 MB/s eta 0:00:00\nDownloading jupyter_client-8.6.1-py3-none-any.whl (105 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 105.9/105.9 kB 470.0 kB/s eta 0:00:00\nDownloading jupyter_core-5.7.2-py3-none-any.whl (28 kB)\nDownloading matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)\nDownloading pluggy-1.4.0-py3-none-any.whl (20 kB)\nDownloading prompt_toolkit-3.0.43-py3-none-any.whl (386 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 386.1/386.1 kB 1.3 MB/s eta 0:00:00\nDownloading pyzmq-25.1.2-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 4.8 MB/s eta 0:00:00\nDownloading tornado-6.4-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (435 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 435.4/435.4 kB 2.6 MB/s eta 0:00:00\nDownloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\nDownloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\nDownloading nest_asyncio-1.6.0-py3-none-any.whl (5.2 kB)\nDownloading stack_data-0.6.3-py3-none-any.whl (24 kB)\nDownloading asttokens-2.4.1-py2.py3-none-any.whl (27 kB)\nDownloading executing-2.0.1-py2.py3-none-any.whl (24 kB)\nDownloading parso-0.8.3-py2.py3-none-any.whl (100 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.8/100.8 kB 292.3 kB/s eta 0:00:00\nDownloading pure_eval-0.2.2-py3-none-any.whl (11 kB)\nBuilding wheels for collected packages: itwinai\n  Building wheel for itwinai (pyproject.toml): started\n  Building wheel for itwinai (pyproject.toml): finished with status 'done'\n  Created wheel for itwinai: filename=itwinai-0.1-py3-none-any.whl size=47622 sha256=2ecc9aee0bd27fc78e80b621303115735951409382a9847b56e93b9d92deea19\n  Stored in directory: /tmp/pip-ephem-wheel-cache-uonodgt2/wheels/1e/c1/bd/3c6ac8da1906f8e34a8792504e5fcc8552c7f560fb134d95ae\nSuccessfully built itwinai\nInstalling collected packages: pure-eval, tornado, pyzmq, prompt-toolkit, pluggy, parso, nest-asyncio, matplotlib-inline, jupyter-core, iniconfig, executing, decorator, debugpy, coverage, comm, asttokens, stack-data, pytest, jupyter-client, jedi, pytest-mock, pytest-cov, ipython, ipykernel, itwinai\n  Attempting uninstall: itwinai\n    Found existing installation: itwinai 0.1\n    Uninstalling itwinai-0.1:\n      Successfully uninstalled itwinai-0.1\nSuccessfully installed asttokens-2.4.1 comm-0.2.2 coverage-7.4.4 debugpy-1.8.1 decorator-5.1.1 executing-2.0.1 iniconfig-2.0.0 ipykernel-6.29.3 ipython-8.18.1 itwinai-0.1 jedi-0.19.1 jupyter-client-8.6.1 jupyter-core-5.7.2 matplotlib-inline-0.1.6 nest-asyncio-1.6.0 parso-0.8.3 pluggy-1.4.0 prompt-toolkit-3.0.43 pure-eval-0.2.2 pytest-8.1.1 pytest-cov-4.1.0 pytest-mock-3.14.0 pyzmq-25.1.2 stack-data-0.6.3 tornado-6.4\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n============================= test session starts ==============================\nplatform linux -- Python 3.9.12, pytest-8.1.1, pluggy-1.4.0 -- /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/bin/python3.9\ncachedir: .pytest_cache\nrootdir: /sqaaas-build/github.com/interTwin-eu/itwinai\nconfigfile: pyproject.toml\nplugins: anyio-4.3.0, mock-3.14.0, cov-4.1.0\ncollecting ... collected 35 items / 3 deselected / 32 selected\n\ntests/components/test_components.py::test_serializable PASSED            [  3%]\ntests/components/test_components.py::test_adapter PASSED                 [  6%]\ntests/components/test_components.py::test_adapter_integration_pipeline PASSED [  9%]\ntests/components/test_pipe_parser.py::test_add_replace_field PASSED      [ 12%]\ntests/components/test_pipe_parser.py::test_parse_list_pipeline PASSED    [ 15%]\ntests/components/test_pipe_parser.py::test_parse_dict_pipeline PASSED    [ 18%]\ntests/components/test_pipe_parser.py::test_parse_non_existing_pipeline PASSED [ 21%]\ntests/components/test_pipe_parser.py::test_parse_nested_pipeline PASSED  [ 25%]\ntests/components/test_pipe_parser.py::test_dynamic_override_parser_pipeline_dict PASSED [ 28%]\ntests/components/test_pipe_parser.py::test_dynamic_override_parser_pipeline_list PASSED [ 31%]\ntests/components/test_pipe_parser.py::test_parse_step_list_pipeline PASSED [ 34%]\ntests/components/test_pipe_parser.py::test_parse_step_dict_pipeline PASSED [ 37%]\ntests/components/test_pipe_parser.py::test_parse_step_nested_pipeline PASSED [ 40%]\ntests/components/test_pipeline.py::test_slice_into_sub_pipelines PASSED  [ 43%]\ntests/components/test_pipeline.py::test_serialization_pipe_list PASSED   [ 46%]\ntests/components/test_pipeline.py::test_serialization_pipe_dict PASSED   [ 50%]\ntests/components/test_pipeline.py::test_arguments_mismatch PASSED        [ 53%]\ntests/test_cli.py::test_datasets_viz SKIPPED (cli deprecated)            [ 56%]\ntests/test_cli.py::test_workflows_viz SKIPPED (cli deprecated)           [ 59%]\ntests/test_utils.py::test_flatten_dict PASSED                            [ 62%]\ntests/test_utils.py::test_signature_inspector PASSED                     [ 65%]\ntests/use-cases/test_3dgan.py::test_structure_3dgan PASSED               [ 68%]\ntests/use-cases/test_3dgan.py::test_3dgan_train FAILED                   [ 71%]\ntests/use-cases/test_3dgan.py::test_3dgan_inference FAILED               [ 75%]\ntests/use-cases/test_cyclones.py::test_structure_cyclones PASSED         [ 78%]\ntests/use-cases/test_mnist.py::test_structure_mnist_torch PASSED         [ 81%]\ntests/use-cases/test_mnist.py::test_structure_mnist_lightning PASSED     [ 84%]\ntests/use-cases/test_mnist.py::test_structure_mnist_tf PASSED            [ 87%]\ntests/use-cases/test_mnist.py::test_mnist_train_torch PASSED             [ 90%]\ntests/use-cases/test_mnist.py::test_mnist_train_lightning PASSED         [ 93%]\ntests/use-cases/test_mnist.py::test_mnist_train_tf PASSED                [ 96%]\ntests/use-cases/test_mnist.py::test_mnist_train_legacy SKIPPED (work...) [100%]\n\n=================================== FAILURES ===================================\n_______________________________ test_3dgan_train _______________________________\n\ninstall_requirements = <function install_requirements.<locals>._install_reqs at 0x7f513cc3f5e0>\n\n    @pytest.mark.functional\n    def test_3dgan_train(install_requirements):\n        \"\"\"\n        Test 3DGAN torch lightning trainer by running it end-to-end.\n        \"\"\"\n        install_requirements(CERN_PATH, pytest.TORCH_PREFIX)\n        # cmd = (f\"micromamba run -p {pytest.TORCH_PREFIX} python \"\n        #        f\"{CERN_PATH}/train.py -p {CERN_PATH}/pipeline.yaml\")\n        cmd = (f\"micromamba run -p {pytest.TORCH_PREFIX} itwinai exec-pipeline \"\n               f\"--config {CERN_PATH}/pipeline.yaml\")\n>       subprocess.run(cmd.split(), check=True)\n\ntests/use-cases/test_3dgan.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninput = None, capture_output = False, timeout = None, check = True\npopenargs = (['micromamba', 'run', '-p', './.venv-pytorch', 'itwinai', 'exec-pipeline', ...],)\nkwargs = {}\nprocess = <Popen: returncode: 1 args: ['micromamba', 'run', '-p', './.venv-pytorch', '...>\nstdout = None, stderr = None, retcode = 1\n\n    def run(*popenargs,\n            input=None, capture_output=False, timeout=None, check=False, **kwargs):\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\n    \n        The returned instance will have attributes args, returncode, stdout and\n        stderr. By default, stdout and stderr are not captured, and those attributes\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\n    \n        If check is True and the exit code was non-zero, it raises a\n        CalledProcessError. The CalledProcessError object will have the return code\n        in the returncode attribute, and output & stderr attributes if those streams\n        were captured.\n    \n        If timeout is given, and the process takes too long, a TimeoutExpired\n        exception will be raised.\n    \n        There is an optional argument \"input\", allowing you to\n        pass bytes or a string to the subprocess's stdin.  If you use this argument\n        you may not also use the Popen constructor's \"stdin\" argument, as\n        it will be used internally.\n    \n        By default, all communication is in bytes, and therefore any \"input\" should\n        be bytes, and the stdout and stderr will be bytes. If in text mode, any\n        \"input\" should be a string, and stdout and stderr will be strings decoded\n        according to locale encoding, or by \"encoding\" if set. Text mode is\n        triggered by setting any of text, encoding, errors or universal_newlines.\n    \n        The other arguments are the same as for the Popen constructor.\n        \"\"\"\n        if input is not None:\n            if kwargs.get('stdin') is not None:\n                raise ValueError('stdin and input arguments may not both be used.')\n            kwargs['stdin'] = PIPE\n    \n        if capture_output:\n            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:\n                raise ValueError('stdout and stderr arguments may not be used '\n                                 'with capture_output.')\n            kwargs['stdout'] = PIPE\n            kwargs['stderr'] = PIPE\n    \n        with Popen(*popenargs, **kwargs) as process:\n            try:\n                stdout, stderr = process.communicate(input, timeout=timeout)\n            except TimeoutExpired as exc:\n                process.kill()\n                if _mswindows:\n                    # Windows accumulates the output in a single blocking\n                    # read() call run on child threads, with the timeout\n                    # being done in a join() on those threads.  communicate()\n                    # _after_ kill() is required to collect that and add it\n                    # to the exception.\n                    exc.stdout, exc.stderr = process.communicate()\n                else:\n                    # POSIX _communicate already populated the output so\n                    # far into the TimeoutExpired exception.\n                    process.wait()\n                raise\n            except:  # Including KeyboardInterrupt, communicate handled that.\n                process.kill()\n                # We don't call process.wait() as .__exit__ does that for us.\n                raise\n            retcode = process.poll()\n            if check and retcode:\n>               raise CalledProcessError(retcode, process.args,\n                                         output=stdout, stderr=stderr)\nE               subprocess.CalledProcessError: Command '['micromamba', 'run', '-p', './.venv-pytorch', 'itwinai', 'exec-pipeline', '--config', 'use-cases/3dgan/pipeline.yaml']' returned non-zero exit status 1.\n\n.venv-pytorch/lib/python3.9/subprocess.py:528: CalledProcessError\n----------------------------- Captured stdout call -----------------------------\nCollecting h5py>=3.7.0 (from -r use-cases/3dgan/requirements.txt (line 1))\n  Using cached h5py-3.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.5 kB)\nCollecting google>=3.0.0 (from -r use-cases/3dgan/requirements.txt (line 2))\n  Downloading google-3.0.0-py2.py3-none-any.whl.metadata (627 bytes)\nRequirement already satisfied: protobuf>=4.24.3 in ./.venv-pytorch/lib/python3.9/site-packages (from -r use-cases/3dgan/requirements.txt (line 3)) (4.25.3)\nCollecting gdown>=4.7.1 (from -r use-cases/3dgan/requirements.txt (line 4))\n  Downloading gdown-5.1.0-py3-none-any.whl.metadata (5.7 kB)\nRequirement already satisfied: numpy>=1.17.3 in ./.venv-pytorch/lib/python3.9/site-packages (from h5py>=3.7.0->-r use-cases/3dgan/requirements.txt (line 1)) (1.26.4)\nRequirement already satisfied: beautifulsoup4 in ./.venv-pytorch/lib/python3.9/site-packages (from google>=3.0.0->-r use-cases/3dgan/requirements.txt (line 2)) (4.12.3)\nRequirement already satisfied: filelock in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.13.1)\nRequirement already satisfied: requests[socks] in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2.31.0)\nRequirement already satisfied: tqdm in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (4.66.2)\nRequirement already satisfied: soupsieve>1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from beautifulsoup4->google>=3.0.0->-r use-cases/3dgan/requirements.txt (line 2)) (2.5)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2.2.1)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2024.2.2)\nRequirement already satisfied: PySocks!=1.5.7,>=1.5.6 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (1.7.1)\nUsing cached h5py-3.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\nDownloading google-3.0.0-py2.py3-none-any.whl (45 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 45.3/45.3 kB 221.1 kB/s eta 0:00:00\nDownloading gdown-5.1.0-py3-none-any.whl (17 kB)\nInstalling collected packages: h5py, google, gdown\nSuccessfully installed gdown-5.1.0 google-3.0.0 h5py-3.10.0\n#######################################\n# Starting execution of 'Pipeline'... #\n#######################################\n#######################################################\n# Starting execution of 'Lightning3DGANDownloader'... #\n#######################################################\nProcessing file 1nCO0Pj6Xn_4tt5dwU_Ivo5xbNMEUGgti Ele_VarAngleMeas_100_200_000.h5\n##################################################\n# 'Lightning3DGANDownloader' executed in 13.477s #\n##################################################\n####################################################\n# Starting execution of 'Lightning3DGANTrainer'... #\n####################################################\nSearching in : exp_data/*/*.h5\nFound 1 files. \n----------------------------- Captured stderr call -----------------------------\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nRetrieving folder contents\nRetrieving folder contents completed\nBuilding directory structure\nBuilding directory structure completed\nDownloading...\nFrom (original): https://drive.google.com/uc?id=1nCO0Pj6Xn_4tt5dwU_Ivo5xbNMEUGgti\nFrom (redirected): https://drive.google.com/uc?id=1nCO0Pj6Xn_4tt5dwU_Ivo5xbNMEUGgti&confirm=t&uuid=f4980e2f-4362-4a76-ad42-a57fe33bc42c\nTo: /sqaaas-build/github.com/interTwin-eu/itwinai/exp_data/3dgan_data/Ele_VarAngleMeas_100_200_000.h5\n\r  0%|          | 0.00/1.30G [00:00<?, ?B/s]\r  0%|          | 6.29M/1.30G [00:00<00:21, 61.6MB/s]\r  1%|\u258f         | 16.8M/1.30G [00:00<00:15, 81.2MB/s]\r  2%|\u258f         | 27.3M/1.30G [00:00<00:13, 91.2MB/s]\r  3%|\u258e         | 41.9M/1.30G [00:00<00:11, 112MB/s] \r  4%|\u258d         | 53.5M/1.30G [00:00<00:12, 104MB/s]\r  5%|\u258c         | 69.7M/1.30G [00:00<00:10, 122MB/s]\r  6%|\u258b         | 83.9M/1.30G [00:00<00:09, 128MB/s]\r  8%|\u258a         | 98.6M/1.30G [00:00<00:09, 133MB/s]\r  9%|\u258a         | 112M/1.30G [00:00<00:08, 132MB/s] \r 10%|\u2589         | 126M/1.30G [00:01<00:10, 109MB/s]\r 11%|\u2588         | 141M/1.30G [00:01<00:09, 119MB/s]\r 12%|\u2588\u258f        | 154M/1.30G [00:01<00:09, 116MB/s]\r 13%|\u2588\u258e        | 167M/1.30G [00:01<00:09, 118MB/s]\r 14%|\u2588\u258d        | 180M/1.30G [00:01<00:09, 120MB/s]\r 15%|\u2588\u258c        | 196M/1.30G [00:01<00:08, 132MB/s]\r 16%|\u2588\u258c        | 210M/1.30G [00:01<00:08, 128MB/s]\r 17%|\u2588\u258b        | 223M/1.30G [00:01<00:08, 130MB/s]\r 18%|\u2588\u258a        | 237M/1.30G [00:01<00:08, 128MB/s]\r 19%|\u2588\u2589        | 250M/1.30G [00:02<00:09, 107MB/s]\r 20%|\u2588\u2588        | 263M/1.30G [00:02<00:09, 112MB/s]\r 21%|\u2588\u2588        | 276M/1.30G [00:02<00:08, 116MB/s]\r 22%|\u2588\u2588\u258f       | 289M/1.30G [00:02<00:08, 116MB/s]\r 23%|\u2588\u2588\u258e       | 301M/1.30G [00:02<00:12, 78.7MB/s]\r 24%|\u2588\u2588\u258d       | 311M/1.30G [00:02<00:12, 76.4MB/s]\r 25%|\u2588\u2588\u258d       | 322M/1.30G [00:02<00:11, 82.4MB/s]\r 26%|\u2588\u2588\u258c       | 336M/1.30G [00:03<00:10, 93.8MB/s]\r 27%|\u2588\u2588\u258b       | 348M/1.30G [00:03<00:09, 99.7MB/s]\r 28%|\u2588\u2588\u258a       | 359M/1.30G [00:03<00:09, 102MB/s] \r 28%|\u2588\u2588\u258a       | 370M/1.30G [00:03<00:11, 78.3MB/s]\r 29%|\u2588\u2588\u2589       | 382M/1.30G [00:03<00:10, 88.7MB/s]\r 30%|\u2588\u2588\u2588       | 395M/1.30G [00:03<00:09, 98.6MB/s]\r 31%|\u2588\u2588\u2588       | 406M/1.30G [00:03<00:08, 99.4MB/s]\r 32%|\u2588\u2588\u2588\u258f      | 420M/1.30G [00:03<00:07, 110MB/s] \r 33%|\u2588\u2588\u2588\u258e      | 433M/1.30G [00:04<00:08, 107MB/s]\r 34%|\u2588\u2588\u2588\u258d      | 444M/1.30G [00:04<00:08, 97.6MB/s]\r 35%|\u2588\u2588\u2588\u258d      | 455M/1.30G [00:04<00:08, 99.7MB/s]\r 36%|\u2588\u2588\u2588\u258c      | 466M/1.30G [00:04<00:08, 102MB/s] \r 37%|\u2588\u2588\u2588\u258b      | 480M/1.30G [00:04<00:07, 113MB/s]\r 38%|\u2588\u2588\u2588\u258a      | 495M/1.30G [00:04<00:06, 122MB/s]\r 39%|\u2588\u2588\u2588\u2589      | 508M/1.30G [00:04<00:06, 123MB/s]\r 40%|\u2588\u2588\u2588\u2588      | 521M/1.30G [00:04<00:06, 124MB/s]\r 41%|\u2588\u2588\u2588\u2588      | 534M/1.30G [00:04<00:06, 123MB/s]\r 42%|\u2588\u2588\u2588\u2588\u258f     | 546M/1.30G [00:05<00:07, 94.7MB/s]\r 43%|\u2588\u2588\u2588\u2588\u258e     | 557M/1.30G [00:05<00:07, 96.9MB/s]\r 44%|\u2588\u2588\u2588\u2588\u258e     | 567M/1.30G [00:05<00:07, 91.9MB/s]\r 44%|\u2588\u2588\u2588\u2588\u258d     | 577M/1.30G [00:05<00:08, 87.5MB/s]\r 45%|\u2588\u2588\u2588\u2588\u258c     | 587M/1.30G [00:05<00:09, 74.3MB/s]\r 46%|\u2588\u2588\u2588\u2588\u258c     | 595M/1.30G [00:05<00:09, 76.1MB/s]\r 46%|\u2588\u2588\u2588\u2588\u258b     | 605M/1.30G [00:05<00:08, 80.5MB/s]\r 47%|\u2588\u2588\u2588\u2588\u258b     | 615M/1.30G [00:05<00:08, 85.6MB/s]\r 48%|\u2588\u2588\u2588\u2588\u258a     | 627M/1.30G [00:06<00:07, 94.7MB/s]\r 49%|\u2588\u2588\u2588\u2588\u2589     | 641M/1.30G [00:06<00:06, 106MB/s] \r 50%|\u2588\u2588\u2588\u2588\u2588     | 654M/1.30G [00:06<00:05, 112MB/s]\r 51%|\u2588\u2588\u2588\u2588\u2588\u258f    | 668M/1.30G [00:06<00:05, 118MB/s]\r 52%|\u2588\u2588\u2588\u2588\u2588\u258f    | 681M/1.30G [00:06<00:05, 116MB/s]\r 53%|\u2588\u2588\u2588\u2588\u2588\u258e    | 693M/1.30G [00:06<00:06, 91.4MB/s]\r 54%|\u2588\u2588\u2588\u2588\u2588\u258d    | 703M/1.30G [00:06<00:06, 91.0MB/s]\r 55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 715M/1.30G [00:06<00:06, 96.0MB/s]\r 56%|\u2588\u2588\u2588\u2588\u2588\u258c    | 726M/1.30G [00:07<00:05, 97.2MB/s]\r 57%|\u2588\u2588\u2588\u2588\u2588\u258b    | 741M/1.30G [00:07<00:05, 111MB/s] \r 58%|\u2588\u2588\u2588\u2588\u2588\u258a    | 755M/1.30G [00:07<00:04, 119MB/s]\r 59%|\u2588\u2588\u2588\u2588\u2588\u2589    | 768M/1.30G [00:07<00:04, 110MB/s]\r 60%|\u2588\u2588\u2588\u2588\u2588\u2588    | 781M/1.30G [00:07<00:04, 112MB/s]\r 61%|\u2588\u2588\u2588\u2588\u2588\u2588    | 795M/1.30G [00:07<00:04, 120MB/s]\r 62%|\u2588\u2588\u2588\u2588\u2588\u2588\u258f   | 810M/1.30G [00:07<00:03, 126MB/s]\r 63%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 825M/1.30G [00:07<00:03, 133MB/s]\r 65%|\u2588\u2588\u2588\u2588\u2588\u2588\u258d   | 841M/1.30G [00:07<00:03, 140MB/s]\r 66%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c   | 856M/1.30G [00:07<00:03, 143MB/s]\r 67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 871M/1.30G [00:08<00:03, 143MB/s]\r 68%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a   | 886M/1.30G [00:08<00:03, 136MB/s]\r 69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2589   | 900M/1.30G [00:08<00:03, 133MB/s]\r 70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 913M/1.30G [00:08<00:02, 133MB/s]\r 71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  | 927M/1.30G [00:08<00:03, 115MB/s]\r 72%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  | 939M/1.30G [00:08<00:03, 113MB/s]\r 73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e  | 951M/1.30G [00:08<00:03, 102MB/s]\r 74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  | 962M/1.30G [00:08<00:03, 102MB/s]\r 75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  | 973M/1.30G [00:09<00:03, 100MB/s]\r 76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  | 984M/1.30G [00:09<00:03, 101MB/s]\r 77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b  | 995M/1.30G [00:09<00:02, 105MB/s]\r 77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b  | 1.01G/1.30G [00:09<00:02, 105MB/s]\r 78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 1.02G/1.30G [00:09<00:02, 112MB/s]\r 79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 1.03G/1.30G [00:09<00:02, 120MB/s]\r 80%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  | 1.05G/1.30G [00:09<00:02, 117MB/s]\r 81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 1.06G/1.30G [00:09<00:02, 111MB/s]\r 82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 1.07G/1.30G [00:09<00:01, 119MB/s]\r 83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e | 1.08G/1.30G [00:10<00:01, 117MB/s]\r 84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 1.10G/1.30G [00:10<00:02, 81.6MB/s]\r 85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 1.11G/1.30G [00:10<00:02, 93.2MB/s]\r 86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b | 1.12G/1.30G [00:10<00:01, 106MB/s] \r 87%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b | 1.14G/1.30G [00:10<00:01, 111MB/s]\r 89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 1.15G/1.30G [00:10<00:01, 119MB/s]\r 90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 1.16G/1.30G [00:10<00:01, 114MB/s]\r 91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1.18G/1.30G [00:10<00:01, 119MB/s]\r 92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f| 1.19G/1.30G [00:11<00:00, 128MB/s]\r 93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 1.21G/1.30G [00:11<00:00, 122MB/s]\r 94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d| 1.22G/1.30G [00:11<00:00, 118MB/s]\r 95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d| 1.23G/1.30G [00:11<00:00, 120MB/s]\r 96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c| 1.25G/1.30G [00:11<00:00, 124MB/s]\r 97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b| 1.26G/1.30G [00:11<00:00, 122MB/s]\r 98%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a| 1.27G/1.30G [00:11<00:00, 116MB/s]\r 99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 1.29G/1.30G [00:11<00:00, 119MB/s]\r100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 1.30G/1.30G [00:11<00:00, 121MB/s]\r100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.30G/1.30G [00:11<00:00, 109MB/s]\nDownload completed\n2024/03/22 11:33:46 INFO mlflow.tracking.fluent: Experiment with name '3DGAN' does not exist. Creating a new experiment.\n2024/03/22 11:33:46 WARNING mlflow.utils.git_utils: Failed to import Git (the Git executable is probably not on your PATH), so Git SHA is not available. Error: Failed to initialize: Bad git executable.\nThe git executable must be specified in one of the following ways:\n    - be included in your $PATH\n    - be set via $GIT_PYTHON_GIT_EXECUTABLE\n    - explicitly set via git.refresh()\n\nAll git commands will error until this is rectified.\n\nThis initial message can be silenced or aggravated in the future by setting the\n$GIT_PYTHON_REFRESH environment variable. Use one of the following values:\n    - quiet|q|silence|s|silent|none|n|0: for no message or exception\n    - warn|w|warning|log|l|1: for a warning message (logged at level CRITICAL, displayed by default)\n    - error|e|exception|raise|r|2: for a raised exception\n\nExample:\n    export GIT_PYTHON_REFRESH=quiet\n\nGlobal seed set to 4231162351\nINFO:pytorch_lightning.utilities.rank_zero:GPU available: False, used: False\nINFO:pytorch_lightning.utilities.rank_zero:TPU available: False, using: 0 TPU cores\nINFO:pytorch_lightning.utilities.rank_zero:IPU available: False, using: 0 IPUs\nINFO:pytorch_lightning.utilities.rank_zero:HPU available: False, using: 0 HPUs\n2024/03/22 11:33:51 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: \"/sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/mlflow/pytorch/_lightning_autolog.py:463: UserWarning: Autologging is known to be compatible with pytorch-lightning versions between 1.4.9 and 2.2.0.post0 and may not succeed with packages outside this range.\"\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/cli.py:64 in exec_pipeline                               \u2502\n\u2502                                                                              \u2502\n\u2502    61 \u2502   }                                                                  \u2502\n\u2502    62 \u2502   parser = ConfigParser(config=config, override_keys=overrides)      \u2502\n\u2502    63 \u2502   pipeline = parser.parse_pipeline(pipeline_nested_key=pipe_key)     \u2502\n\u2502 \u2771  64 \u2502   pipeline.execute()                                                 \u2502\n\u2502    65                                                                        \u2502\n\u2502    66                                                                        \u2502\n\u2502    67 @app.command()                                                         \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502         config = PosixPath('use-cases/3dgan/pipeline.yaml')              \u2502 \u2502\n\u2502 \u2502   ConfigParser = <class 'itwinai.parser.ConfigParser'>                   \u2502 \u2502\n\u2502 \u2502             os = <module 'os' from                                       \u2502 \u2502\n\u2502 \u2502                  '/sqaaas-build/github.com/interTwin-eu/itwinai/.venv-p\u2026 \u2502 \u2502\n\u2502 \u2502      overrides = {}                                                      \u2502 \u2502\n\u2502 \u2502 overrides_list = []                                                      \u2502 \u2502\n\u2502 \u2502         parser = <itwinai.parser.ConfigParser object at 0x7f9397709c40>  \u2502 \u2502\n\u2502 \u2502       pipe_key = 'pipeline'                                              \u2502 \u2502\n\u2502 \u2502       pipeline = <itwinai.pipeline.Pipeline object at 0x7f9360669f70>    \u2502 \u2502\n\u2502 \u2502            sys = <module 'sys' (built-in)>                               \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/components.py:114 in monitored_method                    \u2502\n\u2502                                                                              \u2502\n\u2502   111 \u2502   \u2502   try:                                                           \u2502\n\u2502   112 \u2502   \u2502   \u2502   # print(f'ARGS: {args}')                                   \u2502\n\u2502   113 \u2502   \u2502   \u2502   # print(f'KWARGS: {kwargs}')                               \u2502\n\u2502 \u2771 114 \u2502   \u2502   \u2502   result = method(self, *args, **kwargs)                     \u2502\n\u2502   115 \u2502   \u2502   finally:                                                       \u2502\n\u2502   116 \u2502   \u2502   \u2502   self.cleanup()                                             \u2502\n\u2502   117 \u2502   \u2502   self.exec_t = time.time() - start_t                            \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\n\u2502 \u2502    args = ()                                                   \u2502           \u2502\n\u2502 \u2502  kwargs = {}                                                   \u2502           \u2502\n\u2502 \u2502  method = <function Pipeline.execute at 0x7f9397059d30>        \u2502           \u2502\n\u2502 \u2502     msg = \"Starting execution of 'Pipeline'...\"                \u2502           \u2502\n\u2502 \u2502    self = <itwinai.pipeline.Pipeline object at 0x7f9360669f70> \u2502           \u2502\n\u2502 \u2502 start_t = 1711107212.5226617                                   \u2502           \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/pipeline.py:63 in execute                                \u2502\n\u2502                                                                              \u2502\n\u2502    60 \u2502   \u2502   \u2502   step: BaseComponent                                        \u2502\n\u2502    61 \u2502   \u2502   \u2502   args = self._pack_args(args)                               \u2502\n\u2502    62 \u2502   \u2502   \u2502   self.validate_args(args, step)                             \u2502\n\u2502 \u2771  63 \u2502   \u2502   \u2502   args = step.execute(*args)                                 \u2502\n\u2502    64 \u2502   \u2502                                                                  \u2502\n\u2502    65 \u2502   \u2502   return args                                                    \u2502\n\u2502    66                                                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502  args = ()                                                               \u2502 \u2502\n\u2502 \u2502  self = <itwinai.pipeline.Pipeline object at 0x7f9360669f70>             \u2502 \u2502\n\u2502 \u2502  step = <trainer.Lightning3DGANTrainer object at 0x7f93606a20d0>         \u2502 \u2502\n\u2502 \u2502 steps = [                                                                \u2502 \u2502\n\u2502 \u2502         \u2502   <dataloader.Lightning3DGANDownloader object at               \u2502 \u2502\n\u2502 \u2502         0x7f93606a22e0>,                                                 \u2502 \u2502\n\u2502 \u2502         \u2502   <trainer.Lightning3DGANTrainer object at 0x7f93606a20d0>     \u2502 \u2502\n\u2502 \u2502         ]                                                                \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/components.py:114 in monitored_method                    \u2502\n\u2502                                                                              \u2502\n\u2502   111 \u2502   \u2502   try:                                                           \u2502\n\u2502   112 \u2502   \u2502   \u2502   # print(f'ARGS: {args}')                                   \u2502\n\u2502   113 \u2502   \u2502   \u2502   # print(f'KWARGS: {kwargs}')                               \u2502\n\u2502 \u2771 114 \u2502   \u2502   \u2502   result = method(self, *args, **kwargs)                     \u2502\n\u2502   115 \u2502   \u2502   finally:                                                       \u2502\n\u2502   116 \u2502   \u2502   \u2502   self.cleanup()                                             \u2502\n\u2502   117 \u2502   \u2502   self.exec_t = time.time() - start_t                            \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e     \u2502\n\u2502 \u2502    args = ()                                                         \u2502     \u2502\n\u2502 \u2502  kwargs = {}                                                         \u2502     \u2502\n\u2502 \u2502  method = <function Lightning3DGANTrainer.execute at 0x7f936068a4c0> \u2502     \u2502\n\u2502 \u2502     msg = \"Starting execution of 'Lightning3DGANTrainer'...\"         \u2502     \u2502\n\u2502 \u2502    self = <trainer.Lightning3DGANTrainer object at 0x7f93606a20d0>   \u2502     \u2502\n\u2502 \u2502 start_t = 1711107226.0005817                                         \u2502     \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f     \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/trainer.py:52  \u2502\n\u2502 in execute                                                                   \u2502\n\u2502                                                                              \u2502\n\u2502    49 \u2502   \u2502   \u2502   subclass_mode_data=True,                                   \u2502\n\u2502    50 \u2502   \u2502   )                                                              \u2502\n\u2502    51 \u2502   \u2502   sys.argv = old_argv                                            \u2502\n\u2502 \u2771  52 \u2502   \u2502   cli.trainer.fit(cli.model, datamodule=cli.datamodule)          \u2502\n\u2502    53 \u2502   \u2502   teardown_lightning_mlflow()                                    \u2502\n\u2502    54 \u2502                                                                      \u2502\n\u2502    55 \u2502   def save_state(self):                                              \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502      cli = <lightning.pytorch.cli.LightningCLI object at 0x7f9396f81100> \u2502 \u2502\n\u2502 \u2502 old_argv = [                                                             \u2502 \u2502\n\u2502 \u2502            \u2502                                                             \u2502 \u2502\n\u2502 \u2502            '/sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch\u2026 \u2502 \u2502\n\u2502 \u2502            \u2502   'exec-pipeline',                                          \u2502 \u2502\n\u2502 \u2502            \u2502   '--config',                                               \u2502 \u2502\n\u2502 \u2502            \u2502   'use-cases/3dgan/pipeline.yaml'                           \u2502 \u2502\n\u2502 \u2502            ]                                                             \u2502 \u2502\n\u2502 \u2502     self = <trainer.Lightning3DGANTrainer object at 0x7f93606a20d0>      \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/utils/autologging_utils/safety.py:578 in                  \u2502\n\u2502 safe_patch_function                                                          \u2502\n\u2502                                                                              \u2502\n\u2502    575 \u2502   \u2502   \u2502   \u2502   \u2502   if patch_is_class:                                \u2502\n\u2502    576 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   patch_function.call(call_original, *args, **k \u2502\n\u2502    577 \u2502   \u2502   \u2502   \u2502   \u2502   else:                                             \u2502\n\u2502 \u2771  578 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   patch_function(call_original, *args, **kwargs \u2502\n\u2502    579 \u2502   \u2502   \u2502   \u2502   \u2502                                                     \u2502\n\u2502    580 \u2502   \u2502   \u2502   \u2502   \u2502   session.state = \"succeeded\"                       \u2502\n\u2502    581                                                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502             active_session_failed = False                                \u2502 \u2502\n\u2502 \u2502                              args = (                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502                                    \u2502 \u2502\n\u2502 \u2502                                     <lightning.pytorch.trainer.trainer.\u2026 \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62f160>,           \u2502 \u2502\n\u2502 \u2502                                     \u2502   ThreeDGAN(                       \u2502 \u2502\n\u2502 \u2502                                       (generator): Generator(            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (l1): Linear(in_features=256,    \u2502 \u2502\n\u2502 \u2502                                     out_features=5184, bias=True)        \u2502 \u2502\n\u2502 \u2502                                     \u2502   (up1):                           \u2502 \u2502\n\u2502 \u2502                                     Upsample(scale_factor=(6.0, 6.0,     \u2502 \u2502\n\u2502 \u2502                                     6.0), mode=trilinear)                \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(6, 6, 8), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(8, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad3):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn4): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad4):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv5): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 5), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn5): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad5):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv6): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 3), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv7): Conv3d(6, 1,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(2, 2, 2), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                       (discriminator): Discriminator(    \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(1, 16,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1), padding=(2, 3, 3))               \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop1): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(16, 8,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop2): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop3): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop4): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (avgpool):                       \u2502 \u2502\n\u2502 \u2502                                     AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                                     stride=(2, 2, 2), padding=0)         \u2502 \u2502\n\u2502 \u2502                                     \u2502   (flatten): Flatten(start_dim=1,  \u2502 \u2502\n\u2502 \u2502                                     end_dim=-1)                          \u2502 \u2502\n\u2502 \u2502                                     \u2502   (fakeout):                       \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                     \u2502   (auxout):                        \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502           autologging_integration = 'pytorch'                            \u2502 \u2502\n\u2502 \u2502           autologging_is_disabled = <function autologging_is_disabled at \u2502 \u2502\n\u2502 \u2502                                     0x7f93680da790>                      \u2502 \u2502\n\u2502 \u2502                     call_original = <function Trainer.fit at             \u2502 \u2502\n\u2502 \u2502                                     0x7f935afb7040>                      \u2502 \u2502\n\u2502 \u2502 call_original_fn_with_event_logging <function                            \u2502 \u2502\n\u2502 \u2502                                   = safe_patch.<locals>.safe_patch_func\u2026 \u2502 \u2502\n\u2502 \u2502                                     at 0x7f935b546ca0>                   \u2502 \u2502\n\u2502 \u2502                       destination = <class                               \u2502 \u2502\n\u2502 \u2502                                     'lightning.pytorch.trainer.trainer.\u2026 \u2502 \u2502\n\u2502 \u2502                         exclusive = False                                \u2502 \u2502\n\u2502 \u2502            failed_during_original = True                                 \u2502 \u2502\n\u2502 \u2502                     function_name = 'fit'                                \u2502 \u2502\n\u2502 \u2502            get_autologging_config = <function get_autologging_config at  \u2502 \u2502\n\u2502 \u2502                                     0x7f93680da700>                      \u2502 \u2502\n\u2502 \u2502                    is_silent_mode = False                                \u2502 \u2502\n\u2502 \u2502                            kwargs = {                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502   'datamodule':                    \u2502 \u2502\n\u2502 \u2502                                     <dataloader.ParticlesDataModule      \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62ff10>            \u2502 \u2502\n\u2502 \u2502                                     }                                    \u2502 \u2502\n\u2502 \u2502                          original = <function Trainer.fit at             \u2502 \u2502\n\u2502 \u2502                                     0x7f93610aedc0>                      \u2502 \u2502\n\u2502 \u2502          original_has_been_called = True                                 \u2502 \u2502\n\u2502 \u2502                   original_result = None                                 \u2502 \u2502\n\u2502 \u2502                    patch_function = <function                            \u2502 \u2502\n\u2502 \u2502                                     with_managed_run.<locals>.patch_wit\u2026 \u2502 \u2502\n\u2502 \u2502                                     at 0x7f936010b5e0>                   \u2502 \u2502\n\u2502 \u2502          patch_function_exception = MemoryError((5000, 51, 51, 25),      \u2502 \u2502\n\u2502 \u2502                                     dtype('<f4'))                        \u2502 \u2502\n\u2502 \u2502    patch_function_run_for_testing = None                                 \u2502 \u2502\n\u2502 \u2502                    patch_is_class = False                                \u2502 \u2502\n\u2502 \u2502                           session = <mlflow.utils.autologging_utils.saf\u2026 \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b00c220>            \u2502 \u2502\n\u2502 \u2502         try_log_autologging_event = <function                            \u2502 \u2502\n\u2502 \u2502                                     safe_patch.<locals>.safe_patch_func\u2026 \u2502 \u2502\n\u2502 \u2502                                     at 0x7f935b546dc0>                   \u2502 \u2502\n\u2502 \u2502 user_created_fluent_run_is_active = True                                 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/utils/autologging_utils/safety.py:251 in                  \u2502\n\u2502 patch_with_managed_run                                                       \u2502\n\u2502                                                                              \u2502\n\u2502    248 \u2502   \u2502   \u2502   \u2502   managed_run = create_managed_run()                    \u2502\n\u2502    249 \u2502   \u2502   \u2502                                                             \u2502\n\u2502    250 \u2502   \u2502   \u2502   try:                                                      \u2502\n\u2502 \u2771  251 \u2502   \u2502   \u2502   \u2502   result = patch_function(original, *args, **kwargs)    \u2502\n\u2502    252 \u2502   \u2502   \u2502   except (Exception, KeyboardInterrupt):                    \u2502\n\u2502    253 \u2502   \u2502   \u2502   \u2502   # In addition to standard Python exceptions, handle k \u2502\n\u2502    254 \u2502   \u2502   \u2502   \u2502   # that runs are terminated if a user prematurely inte \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502               args = (                                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   <lightning.pytorch.trainer.trainer.Trainer      \u2502 \u2502\n\u2502 \u2502                      object at 0x7f935b62f160>,                          \u2502 \u2502\n\u2502 \u2502                      \u2502   ThreeDGAN(                                      \u2502 \u2502\n\u2502 \u2502                        (generator): Generator(                           \u2502 \u2502\n\u2502 \u2502                      \u2502   (l1): Linear(in_features=256,                   \u2502 \u2502\n\u2502 \u2502                      out_features=5184, bias=True)                       \u2502 \u2502\n\u2502 \u2502                      \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),   \u2502 \u2502\n\u2502 \u2502                      mode=trilinear)                                     \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                        (discriminator): Discriminator(                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1), padding=(2, 3, 3))                \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop1): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop2): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop3): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop4): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                      stride=(2, 2, 2), padding=0)                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)     \u2502 \u2502\n\u2502 \u2502                      \u2502   (fakeout): Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                      \u2502   (auxout): Linear(in_features=19152,             \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                      )                                                   \u2502 \u2502\n\u2502 \u2502                      )                                                   \u2502 \u2502\n\u2502 \u2502 create_managed_run = <function                                           \u2502 \u2502\n\u2502 \u2502                      with_managed_run.<locals>.create_managed_run at     \u2502 \u2502\n\u2502 \u2502                      0x7f936010b550>                                     \u2502 \u2502\n\u2502 \u2502             kwargs = {                                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   'datamodule': <dataloader.ParticlesDataModule   \u2502 \u2502\n\u2502 \u2502                      object at 0x7f935b62ff10>                           \u2502 \u2502\n\u2502 \u2502                      }                                                   \u2502 \u2502\n\u2502 \u2502        managed_run = None                                                \u2502 \u2502\n\u2502 \u2502           original = <function Trainer.fit at 0x7f935afb7040>            \u2502 \u2502\n\u2502 \u2502     patch_function = <function patched_fit at 0x7f936010b430>            \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/pytorch/_lightning_autolog.py:537 in patched_fit          \u2502\n\u2502                                                                              \u2502\n\u2502   534 \u2502   \u2502                                                                  \u2502\n\u2502   535 \u2502   \u2502   client.flush(synchronous=False)                                \u2502\n\u2502   536 \u2502   \u2502                                                                  \u2502\n\u2502 \u2771 537 \u2502   \u2502   result = original(self, *args, **kwargs)                       \u2502\n\u2502   538 \u2502   \u2502                                                                  \u2502\n\u2502   539 \u2502   \u2502   if early_stop_callback is not None:                            \u2502\n\u2502   540 \u2502   \u2502   \u2502   _log_early_stop_metrics(early_stop_callback, client, run_i \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502                         args = (                                         \u2502 \u2502\n\u2502 \u2502                                \u2502   ThreeDGAN(                            \u2502 \u2502\n\u2502 \u2502                                  (generator): Generator(                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (l1): Linear(in_features=256,         \u2502 \u2502\n\u2502 \u2502                                out_features=5184, bias=True)             \u2502 \u2502\n\u2502 \u2502                                \u2502   (up1): Upsample(scale_factor=(6.0,    \u2502 \u2502\n\u2502 \u2502                                6.0, 6.0), mode=trilinear)                \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, \u2502 \u2502\n\u2502 \u2502                                6, 8), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn1): BatchNorm3d(8, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad1): ConstantPad3d(padding=(1, 1,  \u2502 \u2502\n\u2502 \u2502                                2, 2, 2, 2), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, \u2502 \u2502\n\u2502 \u2502                                4, 6), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn2): BatchNorm3d(6, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad2): ConstantPad3d(padding=(1, 1,  \u2502 \u2502\n\u2502 \u2502                                2, 2, 2, 2), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, \u2502 \u2502\n\u2502 \u2502                                4, 6), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn3): BatchNorm3d(6, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad3): ConstantPad3d(padding=(1, 1,  \u2502 \u2502\n\u2502 \u2502                                2, 2, 2, 2), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, \u2502 \u2502\n\u2502 \u2502                                4, 6), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn4): BatchNorm3d(6, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad4): ConstantPad3d(padding=(0, 0,  \u2502 \u2502\n\u2502 \u2502                                1, 1, 1, 1), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, \u2502 \u2502\n\u2502 \u2502                                3, 5), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn5): BatchNorm3d(6, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad5): ConstantPad3d(padding=(0, 0,  \u2502 \u2502\n\u2502 \u2502                                1, 1, 1, 1), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, \u2502 \u2502\n\u2502 \u2502                                3, 3), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, \u2502 \u2502\n\u2502 \u2502                                2, 2), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                                  (discriminator): Discriminator(         \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv1): Conv3d(1, 16,                \u2502 \u2502\n\u2502 \u2502                                kernel_size=(5, 6, 6), stride=(1, 1, 1),  \u2502 \u2502\n\u2502 \u2502                                padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502                                \u2502   (drop1): Dropout(p=0.2,               \u2502 \u2502\n\u2502 \u2502                                inplace=False)                            \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad1): ConstantPad3d(padding=(1, 1,  \u2502 \u2502\n\u2502 \u2502                                0, 0, 0, 0), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv2): Conv3d(16, 8,                \u2502 \u2502\n\u2502 \u2502                                kernel_size=(5, 6, 6), stride=(1, 1, 1))  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn1): BatchNorm3d(8, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (drop2): Dropout(p=0.2,               \u2502 \u2502\n\u2502 \u2502                                inplace=False)                            \u2502 \u2502\n\u2502 \u2502                                \u2502   (pad2): ConstantPad3d(padding=(1, 1,  \u2502 \u2502\n\u2502 \u2502                                0, 0, 0, 0), value=0)                     \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, \u2502 \u2502\n\u2502 \u2502                                6, 6), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn2): BatchNorm3d(8, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (drop3): Dropout(p=0.2,               \u2502 \u2502\n\u2502 \u2502                                inplace=False)                            \u2502 \u2502\n\u2502 \u2502                                \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, \u2502 \u2502\n\u2502 \u2502                                6, 6), stride=(1, 1, 1))                  \u2502 \u2502\n\u2502 \u2502                                \u2502   (bn3): BatchNorm3d(8, eps=1e-06,      \u2502 \u2502\n\u2502 \u2502                                momentum=0.1, affine=True,                \u2502 \u2502\n\u2502 \u2502                                track_running_stats=True)                 \u2502 \u2502\n\u2502 \u2502                                \u2502   (drop4): Dropout(p=0.2,               \u2502 \u2502\n\u2502 \u2502                                inplace=False)                            \u2502 \u2502\n\u2502 \u2502                                \u2502   (avgpool): AvgPool3d(kernel_size=(2,  \u2502 \u2502\n\u2502 \u2502                                2, 2), stride=(2, 2, 2), padding=0)       \u2502 \u2502\n\u2502 \u2502                                \u2502   (flatten): Flatten(start_dim=1,       \u2502 \u2502\n\u2502 \u2502                                end_dim=-1)                               \u2502 \u2502\n\u2502 \u2502                                \u2502   (fakeout): Linear(in_features=19152,  \u2502 \u2502\n\u2502 \u2502                                out_features=1, bias=True)                \u2502 \u2502\n\u2502 \u2502                                \u2502   (auxout): Linear(in_features=19152,   \u2502 \u2502\n\u2502 \u2502                                out_features=1, bias=True)                \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                                ),                                        \u2502 \u2502\n\u2502 \u2502                                )                                         \u2502 \u2502\n\u2502 \u2502                     callback = <lightning.pytorch.callbacks.model_check\u2026 \u2502 \u2502\n\u2502 \u2502                                object at 0x7f935b62f070>                 \u2502 \u2502\n\u2502 \u2502              checkpoint_mode = 'min'                                     \u2502 \u2502\n\u2502 \u2502           checkpoint_monitor = 'val_loss'                                \u2502 \u2502\n\u2502 \u2502    checkpoint_save_best_only = True                                      \u2502 \u2502\n\u2502 \u2502         checkpoint_save_freq = 'epoch'                                   \u2502 \u2502\n\u2502 \u2502 checkpoint_save_weights_only = False                                     \u2502 \u2502\n\u2502 \u2502                       client = <mlflow.utils.autologging_utils.client.M\u2026 \u2502 \u2502\n\u2502 \u2502                                object at 0x7f935b00c5e0>                 \u2502 \u2502\n\u2502 \u2502          early_stop_callback = None                                      \u2502 \u2502\n\u2502 \u2502                       kwargs = {                                         \u2502 \u2502\n\u2502 \u2502                                \u2502   'datamodule':                         \u2502 \u2502\n\u2502 \u2502                                <dataloader.ParticlesDataModule object at \u2502 \u2502\n\u2502 \u2502                                0x7f935b62ff10>                           \u2502 \u2502\n\u2502 \u2502                                }                                         \u2502 \u2502\n\u2502 \u2502            log_every_n_epoch = 1                                         \u2502 \u2502\n\u2502 \u2502             log_every_n_step = None                                      \u2502 \u2502\n\u2502 \u2502                   log_models = True                                      \u2502 \u2502\n\u2502 \u2502               metrics_logger = <mlflow.utils.autologging_utils.BatchMet\u2026 \u2502 \u2502\n\u2502 \u2502                                object at 0x7f935b00c5b0>                 \u2502 \u2502\n\u2502 \u2502             model_checkpoint = True                                      \u2502 \u2502\n\u2502 \u2502                     original = <function Trainer.fit at 0x7f935afb7040>  \u2502 \u2502\n\u2502 \u2502                       run_id = '14b91f00e511487b8e124e5f8558ec9a'        \u2502 \u2502\n\u2502 \u2502                         self = <lightning.pytorch.trainer.trainer.Train\u2026 \u2502 \u2502\n\u2502 \u2502                                object at 0x7f935b62f160>                 \u2502 \u2502\n\u2502 \u2502                 tracking_uri = 'file:///sqaaas-build/github.com/interTw\u2026 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/utils/autologging_utils/safety.py:559 in call_original    \u2502\n\u2502                                                                              \u2502\n\u2502    556 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   original_result = original(*_og_args, \u2502\n\u2502    557 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   return original_result                \u2502\n\u2502    558 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502                                                 \u2502\n\u2502 \u2771  559 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   return call_original_fn_with_event_logging(_o \u2502\n\u2502    560 \u2502   \u2502   \u2502   \u2502   \u2502                                                     \u2502\n\u2502    561 \u2502   \u2502   \u2502   \u2502   \u2502   # Apply the name, docstring, and signature of `or \u2502\n\u2502    562 \u2502   \u2502   \u2502   \u2502   \u2502   # This is important because several autologging p \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502                      _original_fn = <function                            \u2502 \u2502\n\u2502 \u2502                                     safe_patch.<locals>.safe_patch_func\u2026 \u2502 \u2502\n\u2502 \u2502                                     at 0x7f935afb71f0>                   \u2502 \u2502\n\u2502 \u2502                              args = (                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502                                    \u2502 \u2502\n\u2502 \u2502                                     <lightning.pytorch.trainer.trainer.\u2026 \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62f160>,           \u2502 \u2502\n\u2502 \u2502                                     \u2502   ThreeDGAN(                       \u2502 \u2502\n\u2502 \u2502                                       (generator): Generator(            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (l1): Linear(in_features=256,    \u2502 \u2502\n\u2502 \u2502                                     out_features=5184, bias=True)        \u2502 \u2502\n\u2502 \u2502                                     \u2502   (up1):                           \u2502 \u2502\n\u2502 \u2502                                     Upsample(scale_factor=(6.0, 6.0,     \u2502 \u2502\n\u2502 \u2502                                     6.0), mode=trilinear)                \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(6, 6, 8), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(8, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad3):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn4): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad4):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv5): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 5), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn5): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad5):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv6): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 3), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv7): Conv3d(6, 1,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(2, 2, 2), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                       (discriminator): Discriminator(    \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(1, 16,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1), padding=(2, 3, 3))               \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop1): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(16, 8,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop2): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop3): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop4): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (avgpool):                       \u2502 \u2502\n\u2502 \u2502                                     AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                                     stride=(2, 2, 2), padding=0)         \u2502 \u2502\n\u2502 \u2502                                     \u2502   (flatten): Flatten(start_dim=1,  \u2502 \u2502\n\u2502 \u2502                                     end_dim=-1)                          \u2502 \u2502\n\u2502 \u2502                                     \u2502   (fakeout):                       \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                     \u2502   (auxout):                        \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502           autologging_integration = 'pytorch'                            \u2502 \u2502\n\u2502 \u2502 call_original_fn_with_event_logging <function                            \u2502 \u2502\n\u2502 \u2502                                   = safe_patch.<locals>.safe_patch_func\u2026 \u2502 \u2502\n\u2502 \u2502                                     at 0x7f935b546ca0>                   \u2502 \u2502\n\u2502 \u2502                     function_name = 'fit'                                \u2502 \u2502\n\u2502 \u2502                            kwargs = {                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502   'datamodule':                    \u2502 \u2502\n\u2502 \u2502                                     <dataloader.ParticlesDataModule      \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62ff10>            \u2502 \u2502\n\u2502 \u2502                                     }                                    \u2502 \u2502\n\u2502 \u2502                           og_args = (                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502                                    \u2502 \u2502\n\u2502 \u2502                                     <lightning.pytorch.trainer.trainer.\u2026 \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62f160>,           \u2502 \u2502\n\u2502 \u2502                                     \u2502   ThreeDGAN(                       \u2502 \u2502\n\u2502 \u2502                                       (generator): Generator(            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (l1): Linear(in_features=256,    \u2502 \u2502\n\u2502 \u2502                                     out_features=5184, bias=True)        \u2502 \u2502\n\u2502 \u2502                                     \u2502   (up1):                           \u2502 \u2502\n\u2502 \u2502                                     Upsample(scale_factor=(6.0, 6.0,     \u2502 \u2502\n\u2502 \u2502                                     6.0), mode=trilinear)                \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(6, 6, 8), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(8, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad3):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 2, 2,   \u2502 \u2502\n\u2502 \u2502                                     2, 2), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(4, 4, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn4): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad4):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv5): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 5), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn5): BatchNorm3d(6, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad5):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(0, 0, 1, 1,   \u2502 \u2502\n\u2502 \u2502                                     1, 1), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv6): Conv3d(6, 6,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(3, 3, 3), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv7): Conv3d(6, 1,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(2, 2, 2), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                       (discriminator): Discriminator(    \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv1): Conv3d(1, 16,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1), padding=(2, 3, 3))               \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop1): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad1):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv2): Conv3d(16, 8,           \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop2): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (pad2):                          \u2502 \u2502\n\u2502 \u2502                                     ConstantPad3d(padding=(1, 1, 0, 0,   \u2502 \u2502\n\u2502 \u2502                                     0, 0), value=0)                      \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv3): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn2): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop3): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (conv4): Conv3d(8, 8,            \u2502 \u2502\n\u2502 \u2502                                     kernel_size=(5, 6, 6), stride=(1, 1, \u2502 \u2502\n\u2502 \u2502                                     1))                                  \u2502 \u2502\n\u2502 \u2502                                     \u2502   (bn3): BatchNorm3d(8, eps=1e-06, \u2502 \u2502\n\u2502 \u2502                                     momentum=0.1, affine=True,           \u2502 \u2502\n\u2502 \u2502                                     track_running_stats=True)            \u2502 \u2502\n\u2502 \u2502                                     \u2502   (drop4): Dropout(p=0.2,          \u2502 \u2502\n\u2502 \u2502                                     inplace=False)                       \u2502 \u2502\n\u2502 \u2502                                     \u2502   (avgpool):                       \u2502 \u2502\n\u2502 \u2502                                     AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                                     stride=(2, 2, 2), padding=0)         \u2502 \u2502\n\u2502 \u2502                                     \u2502   (flatten): Flatten(start_dim=1,  \u2502 \u2502\n\u2502 \u2502                                     end_dim=-1)                          \u2502 \u2502\n\u2502 \u2502                                     \u2502   (fakeout):                       \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                     \u2502   (auxout):                        \u2502 \u2502\n\u2502 \u2502                                     Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                                     out_features=1, bias=True)           \u2502 \u2502\n\u2502 \u2502                                       )                                  \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502                                     )                                    \u2502 \u2502\n\u2502 \u2502                         og_kwargs = {                                    \u2502 \u2502\n\u2502 \u2502                                     \u2502   'datamodule':                    \u2502 \u2502\n\u2502 \u2502                                     <dataloader.ParticlesDataModule      \u2502 \u2502\n\u2502 \u2502                                     object at 0x7f935b62ff10>            \u2502 \u2502\n\u2502 \u2502                                     }                                    \u2502 \u2502\n\u2502 \u2502                          original = <function Trainer.fit at             \u2502 \u2502\n\u2502 \u2502                                     0x7f93610aedc0>                      \u2502 \u2502\n\u2502 \u2502          original_has_been_called = True                                 \u2502 \u2502\n\u2502 \u2502                   original_result = None                                 \u2502 \u2502\n\u2502 \u2502    patch_function_run_for_testing = None                                 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/utils/autologging_utils/safety.py:494 in                  \u2502\n\u2502 call_original_fn_with_event_logging                                          \u2502\n\u2502                                                                              \u2502\n\u2502    491 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   og_args,                                      \u2502\n\u2502    492 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   og_kwargs,                                    \u2502\n\u2502    493 \u2502   \u2502   \u2502   \u2502   \u2502   )                                                 \u2502\n\u2502 \u2771  494 \u2502   \u2502   \u2502   \u2502   \u2502   original_fn_result = original_fn(*og_args, **og_k \u2502\n\u2502    495 \u2502   \u2502   \u2502   \u2502   \u2502                                                     \u2502\n\u2502    496 \u2502   \u2502   \u2502   \u2502   \u2502   try_log_autologging_event(                        \u2502\n\u2502    497 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   AutologgingEventLogger.get_logger().log_origi \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502               destination = <class                                       \u2502 \u2502\n\u2502 \u2502                             'lightning.pytorch.trainer.trainer.Trainer'> \u2502 \u2502\n\u2502 \u2502    failed_during_original = True                                         \u2502 \u2502\n\u2502 \u2502             function_name = 'fit'                                        \u2502 \u2502\n\u2502 \u2502                   og_args = (                                            \u2502 \u2502\n\u2502 \u2502                             \u2502                                            \u2502 \u2502\n\u2502 \u2502                             <lightning.pytorch.trainer.trainer.Trainer   \u2502 \u2502\n\u2502 \u2502                             object at 0x7f935b62f160>,                   \u2502 \u2502\n\u2502 \u2502                             \u2502   ThreeDGAN(                               \u2502 \u2502\n\u2502 \u2502                               (generator): Generator(                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (l1): Linear(in_features=256,            \u2502 \u2502\n\u2502 \u2502                             out_features=5184, bias=True)                \u2502 \u2502\n\u2502 \u2502                             \u2502   (up1): Upsample(scale_factor=(6.0, 6.0,  \u2502 \u2502\n\u2502 \u2502                             6.0), mode=trilinear)                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, \u2502 \u2502\n\u2502 \u2502                             8), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn1): BatchNorm3d(8, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2,  \u2502 \u2502\n\u2502 \u2502                             2, 2, 2), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, \u2502 \u2502\n\u2502 \u2502                             6), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn2): BatchNorm3d(6, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2,  \u2502 \u2502\n\u2502 \u2502                             2, 2, 2), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, \u2502 \u2502\n\u2502 \u2502                             6), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn3): BatchNorm3d(6, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2,  \u2502 \u2502\n\u2502 \u2502                             2, 2, 2), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, \u2502 \u2502\n\u2502 \u2502                             6), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn4): BatchNorm3d(6, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1,  \u2502 \u2502\n\u2502 \u2502                             1, 1, 1), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, \u2502 \u2502\n\u2502 \u2502                             5), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn5): BatchNorm3d(6, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1,  \u2502 \u2502\n\u2502 \u2502                             1, 1, 1), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, \u2502 \u2502\n\u2502 \u2502                             3), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, \u2502 \u2502\n\u2502 \u2502                             2), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                               )                                          \u2502 \u2502\n\u2502 \u2502                               (discriminator): Discriminator(            \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv1): Conv3d(1, 16, kernel_size=(5,   \u2502 \u2502\n\u2502 \u2502                             6, 6), stride=(1, 1, 1), padding=(2, 3, 3))  \u2502 \u2502\n\u2502 \u2502                             \u2502   (drop1): Dropout(p=0.2, inplace=False)   \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0,  \u2502 \u2502\n\u2502 \u2502                             0, 0, 0), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv2): Conv3d(16, 8, kernel_size=(5,   \u2502 \u2502\n\u2502 \u2502                             6, 6), stride=(1, 1, 1))                     \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn1): BatchNorm3d(8, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (drop2): Dropout(p=0.2, inplace=False)   \u2502 \u2502\n\u2502 \u2502                             \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0,  \u2502 \u2502\n\u2502 \u2502                             0, 0, 0), value=0)                           \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, \u2502 \u2502\n\u2502 \u2502                             6), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn2): BatchNorm3d(8, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (drop3): Dropout(p=0.2, inplace=False)   \u2502 \u2502\n\u2502 \u2502                             \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, \u2502 \u2502\n\u2502 \u2502                             6), stride=(1, 1, 1))                        \u2502 \u2502\n\u2502 \u2502                             \u2502   (bn3): BatchNorm3d(8, eps=1e-06,         \u2502 \u2502\n\u2502 \u2502                             momentum=0.1, affine=True,                   \u2502 \u2502\n\u2502 \u2502                             track_running_stats=True)                    \u2502 \u2502\n\u2502 \u2502                             \u2502   (drop4): Dropout(p=0.2, inplace=False)   \u2502 \u2502\n\u2502 \u2502                             \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2,  \u2502 \u2502\n\u2502 \u2502                             2), stride=(2, 2, 2), padding=0)             \u2502 \u2502\n\u2502 \u2502                             \u2502   (flatten): Flatten(start_dim=1,          \u2502 \u2502\n\u2502 \u2502                             end_dim=-1)                                  \u2502 \u2502\n\u2502 \u2502                             \u2502   (fakeout): Linear(in_features=19152,     \u2502 \u2502\n\u2502 \u2502                             out_features=1, bias=True)                   \u2502 \u2502\n\u2502 \u2502                             \u2502   (auxout): Linear(in_features=19152,      \u2502 \u2502\n\u2502 \u2502                             out_features=1, bias=True)                   \u2502 \u2502\n\u2502 \u2502                               )                                          \u2502 \u2502\n\u2502 \u2502                             )                                            \u2502 \u2502\n\u2502 \u2502                             )                                            \u2502 \u2502\n\u2502 \u2502                 og_kwargs = {                                            \u2502 \u2502\n\u2502 \u2502                             \u2502   'datamodule':                            \u2502 \u2502\n\u2502 \u2502                             <dataloader.ParticlesDataModule object at    \u2502 \u2502\n\u2502 \u2502                             0x7f935b62ff10>                              \u2502 \u2502\n\u2502 \u2502                             }                                            \u2502 \u2502\n\u2502 \u2502               original_fn = <function                                    \u2502 \u2502\n\u2502 \u2502                             safe_patch.<locals>.safe_patch_function.<lo\u2026 \u2502 \u2502\n\u2502 \u2502                             at 0x7f935afb71f0>                           \u2502 \u2502\n\u2502 \u2502                   session = <mlflow.utils.autologging_utils.safety.Auto\u2026 \u2502 \u2502\n\u2502 \u2502                             object at 0x7f935b00c220>                    \u2502 \u2502\n\u2502 \u2502 try_log_autologging_event = <function                                    \u2502 \u2502\n\u2502 \u2502                             safe_patch.<locals>.safe_patch_function.<lo\u2026 \u2502 \u2502\n\u2502 \u2502                             at 0x7f935b546dc0>                           \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/mlflow/utils/autologging_utils/safety.py:556 in _original_fn     \u2502\n\u2502                                                                              \u2502\n\u2502    553 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   disable_warnings=False,               \u2502\n\u2502    554 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   reroute_warnings=False,               \u2502\n\u2502    555 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   ):                                        \u2502\n\u2502 \u2771  556 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   original_result = original(*_og_args, \u2502\n\u2502    557 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   return original_result                \u2502\n\u2502    558 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502                                                 \u2502\n\u2502    559 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   return call_original_fn_with_event_logging(_o \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502                       _og_args = (                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502                                       \u2502 \u2502\n\u2502 \u2502                                  <lightning.pytorch.trainer.trainer.Tra\u2026 \u2502 \u2502\n\u2502 \u2502                                  object at 0x7f935b62f160>,              \u2502 \u2502\n\u2502 \u2502                                  \u2502   ThreeDGAN(                          \u2502 \u2502\n\u2502 \u2502                                    (generator): Generator(               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (l1): Linear(in_features=256,       \u2502 \u2502\n\u2502 \u2502                                  out_features=5184, bias=True)           \u2502 \u2502\n\u2502 \u2502                                  \u2502   (up1): Upsample(scale_factor=(6.0,  \u2502 \u2502\n\u2502 \u2502                                  6.0, 6.0), mode=trilinear)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(6, 6, 8), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(8, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad3): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn4): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad4): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv5): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 5), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn5): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad5): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv6): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 3), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv7): Conv3d(6, 1,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(2, 2, 2), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                    (discriminator): Discriminator(       \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(1, 16,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1), padding=(2, 3, 3))                  \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop1): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(16, 8,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop2): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop3): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop4): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (avgpool):                          \u2502 \u2502\n\u2502 \u2502                                  AvgPool3d(kernel_size=(2, 2, 2),        \u2502 \u2502\n\u2502 \u2502                                  stride=(2, 2, 2), padding=0)            \u2502 \u2502\n\u2502 \u2502                                  \u2502   (flatten): Flatten(start_dim=1,     \u2502 \u2502\n\u2502 \u2502                                  end_dim=-1)                             \u2502 \u2502\n\u2502 \u2502                                  \u2502   (fakeout):                          \u2502 \u2502\n\u2502 \u2502                                  Linear(in_features=19152,               \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (auxout): Linear(in_features=19152, \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                     _og_kwargs = {                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502   'datamodule':                       \u2502 \u2502\n\u2502 \u2502                                  <dataloader.ParticlesDataModule object  \u2502 \u2502\n\u2502 \u2502                                  at 0x7f935b62ff10>                      \u2502 \u2502\n\u2502 \u2502                                  }                                       \u2502 \u2502\n\u2502 \u2502                           args = (                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502                                       \u2502 \u2502\n\u2502 \u2502                                  <lightning.pytorch.trainer.trainer.Tra\u2026 \u2502 \u2502\n\u2502 \u2502                                  object at 0x7f935b62f160>,              \u2502 \u2502\n\u2502 \u2502                                  \u2502   ThreeDGAN(                          \u2502 \u2502\n\u2502 \u2502                                    (generator): Generator(               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (l1): Linear(in_features=256,       \u2502 \u2502\n\u2502 \u2502                                  out_features=5184, bias=True)           \u2502 \u2502\n\u2502 \u2502                                  \u2502   (up1): Upsample(scale_factor=(6.0,  \u2502 \u2502\n\u2502 \u2502                                  6.0, 6.0), mode=trilinear)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(6, 6, 8), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(8, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad3): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn4): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad4): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv5): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 5), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn5): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad5): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv6): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 3), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv7): Conv3d(6, 1,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(2, 2, 2), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                    (discriminator): Discriminator(       \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(1, 16,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1), padding=(2, 3, 3))                  \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop1): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(16, 8,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop2): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop3): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop4): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (avgpool):                          \u2502 \u2502\n\u2502 \u2502                                  AvgPool3d(kernel_size=(2, 2, 2),        \u2502 \u2502\n\u2502 \u2502                                  stride=(2, 2, 2), padding=0)            \u2502 \u2502\n\u2502 \u2502                                  \u2502   (flatten): Flatten(start_dim=1,     \u2502 \u2502\n\u2502 \u2502                                  end_dim=-1)                             \u2502 \u2502\n\u2502 \u2502                                  \u2502   (fakeout):                          \u2502 \u2502\n\u2502 \u2502                                  Linear(in_features=19152,               \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (auxout): Linear(in_features=19152, \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502        autologging_integration = 'pytorch'                               \u2502 \u2502\n\u2502 \u2502                  function_name = 'fit'                                   \u2502 \u2502\n\u2502 \u2502                         kwargs = {                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502   'datamodule':                       \u2502 \u2502\n\u2502 \u2502                                  <dataloader.ParticlesDataModule object  \u2502 \u2502\n\u2502 \u2502                                  at 0x7f935b62ff10>                      \u2502 \u2502\n\u2502 \u2502                                  }                                       \u2502 \u2502\n\u2502 \u2502                        og_args = (                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502                                       \u2502 \u2502\n\u2502 \u2502                                  <lightning.pytorch.trainer.trainer.Tra\u2026 \u2502 \u2502\n\u2502 \u2502                                  object at 0x7f935b62f160>,              \u2502 \u2502\n\u2502 \u2502                                  \u2502   ThreeDGAN(                          \u2502 \u2502\n\u2502 \u2502                                    (generator): Generator(               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (l1): Linear(in_features=256,       \u2502 \u2502\n\u2502 \u2502                                  out_features=5184, bias=True)           \u2502 \u2502\n\u2502 \u2502                                  \u2502   (up1): Upsample(scale_factor=(6.0,  \u2502 \u2502\n\u2502 \u2502                                  6.0, 6.0), mode=trilinear)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(6, 6, 8), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(8, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad3): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 2, 2, 2, 2), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(4, 4, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn4): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad4): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv5): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 5), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn5): BatchNorm3d(6, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad5): ConstantPad3d(padding=(0,   \u2502 \u2502\n\u2502 \u2502                                  0, 1, 1, 1, 1), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv6): Conv3d(6, 6,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(3, 3, 3), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv7): Conv3d(6, 1,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(2, 2, 2), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                    (discriminator): Discriminator(       \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv1): Conv3d(1, 16,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1), padding=(2, 3, 3))                  \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop1): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad1): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv2): Conv3d(16, 8,              \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn1): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop2): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (pad2): ConstantPad3d(padding=(1,   \u2502 \u2502\n\u2502 \u2502                                  1, 0, 0, 0, 0), value=0)                \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv3): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn2): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop3): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (conv4): Conv3d(8, 8,               \u2502 \u2502\n\u2502 \u2502                                  kernel_size=(5, 6, 6), stride=(1, 1,    \u2502 \u2502\n\u2502 \u2502                                  1))                                     \u2502 \u2502\n\u2502 \u2502                                  \u2502   (bn3): BatchNorm3d(8, eps=1e-06,    \u2502 \u2502\n\u2502 \u2502                                  momentum=0.1, affine=True,              \u2502 \u2502\n\u2502 \u2502                                  track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                                  \u2502   (drop4): Dropout(p=0.2,             \u2502 \u2502\n\u2502 \u2502                                  inplace=False)                          \u2502 \u2502\n\u2502 \u2502                                  \u2502   (avgpool):                          \u2502 \u2502\n\u2502 \u2502                                  AvgPool3d(kernel_size=(2, 2, 2),        \u2502 \u2502\n\u2502 \u2502                                  stride=(2, 2, 2), padding=0)            \u2502 \u2502\n\u2502 \u2502                                  \u2502   (flatten): Flatten(start_dim=1,     \u2502 \u2502\n\u2502 \u2502                                  end_dim=-1)                             \u2502 \u2502\n\u2502 \u2502                                  \u2502   (fakeout):                          \u2502 \u2502\n\u2502 \u2502                                  Linear(in_features=19152,               \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                  \u2502   (auxout): Linear(in_features=19152, \u2502 \u2502\n\u2502 \u2502                                  out_features=1, bias=True)              \u2502 \u2502\n\u2502 \u2502                                    )                                     \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                                  )                                       \u2502 \u2502\n\u2502 \u2502                      og_kwargs = {                                       \u2502 \u2502\n\u2502 \u2502                                  \u2502   'datamodule':                       \u2502 \u2502\n\u2502 \u2502                                  <dataloader.ParticlesDataModule object  \u2502 \u2502\n\u2502 \u2502                                  at 0x7f935b62ff10>                      \u2502 \u2502\n\u2502 \u2502                                  }                                       \u2502 \u2502\n\u2502 \u2502                       original = <function Trainer.fit at                \u2502 \u2502\n\u2502 \u2502                                  0x7f93610aedc0>                         \u2502 \u2502\n\u2502 \u2502       original_has_been_called = True                                    \u2502 \u2502\n\u2502 \u2502                original_result = None                                    \u2502 \u2502\n\u2502 \u2502 patch_function_run_for_testing = None                                    \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:520 in fit                  \u2502\n\u2502                                                                              \u2502\n\u2502    517 \u2502   \u2502   \"\"\"                                                           \u2502\n\u2502    518 \u2502   \u2502   model = _maybe_unwrap_optimized(model)                        \u2502\n\u2502    519 \u2502   \u2502   self.strategy._lightning_module = model                       \u2502\n\u2502 \u2771  520 \u2502   \u2502   call._call_and_handle_interrupt(                              \u2502\n\u2502    521 \u2502   \u2502   \u2502   self, self._fit_impl, model, train_dataloaders, val_datal \u2502\n\u2502    522 \u2502   \u2502   )                                                             \u2502\n\u2502    523                                                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502         ckpt_path = None                                                 \u2502 \u2502\n\u2502 \u2502        datamodule = <dataloader.ParticlesDataModule object at            \u2502 \u2502\n\u2502 \u2502                     0x7f935b62ff10>                                      \u2502 \u2502\n\u2502 \u2502             model = ThreeDGAN(                                           \u2502 \u2502\n\u2502 \u2502                       (generator): Generator(                            \u2502 \u2502\n\u2502 \u2502                     \u2502   (l1): Linear(in_features=256, out_features=5184, \u2502 \u2502\n\u2502 \u2502                     bias=True)                                           \u2502 \u2502\n\u2502 \u2502                     \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),    \u2502 \u2502\n\u2502 \u2502                     mode=trilinear)                                      \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1,    \u2502 \u2502\n\u2502 \u2502                     1), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1,    \u2502 \u2502\n\u2502 \u2502                     1), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                       )                                                  \u2502 \u2502\n\u2502 \u2502                       (discriminator): Discriminator(                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1), padding=(2, 3, 3))                 \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop1): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0,    \u2502 \u2502\n\u2502 \u2502                     0), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop2): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0,    \u2502 \u2502\n\u2502 \u2502                     0), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop3): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop4): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2),      \u2502 \u2502\n\u2502 \u2502                     stride=(2, 2, 2), padding=0)                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)      \u2502 \u2502\n\u2502 \u2502                     \u2502   (fakeout): Linear(in_features=19152,             \u2502 \u2502\n\u2502 \u2502                     out_features=1, bias=True)                           \u2502 \u2502\n\u2502 \u2502                     \u2502   (auxout): Linear(in_features=19152,              \u2502 \u2502\n\u2502 \u2502                     out_features=1, bias=True)                           \u2502 \u2502\n\u2502 \u2502                       )                                                  \u2502 \u2502\n\u2502 \u2502                     )                                                    \u2502 \u2502\n\u2502 \u2502              self = <lightning.pytorch.trainer.trainer.Trainer object at \u2502 \u2502\n\u2502 \u2502                     0x7f935b62f160>                                      \u2502 \u2502\n\u2502 \u2502 train_dataloaders = None                                                 \u2502 \u2502\n\u2502 \u2502   val_dataloaders = None                                                 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:44 in                          \u2502\n\u2502 _call_and_handle_interrupt                                                   \u2502\n\u2502                                                                              \u2502\n\u2502    41 \u2502   \u2502   if trainer.strategy.launcher is not None:                      \u2502\n\u2502    42 \u2502   \u2502   \u2502   return trainer.strategy.launcher.launch(trainer_fn, *args, \u2502\n\u2502    43 \u2502   \u2502   else:                                                          \u2502\n\u2502 \u2771  44 \u2502   \u2502   \u2502   return trainer_fn(*args, **kwargs)                         \u2502\n\u2502    45 \u2502                                                                      \u2502\n\u2502    46 \u2502   except _TunerExitException:                                        \u2502\n\u2502    47 \u2502   \u2502   _call_teardown_hook(trainer)                                   \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502       args = (                                                           \u2502 \u2502\n\u2502 \u2502              \u2502   ThreeDGAN(                                              \u2502 \u2502\n\u2502 \u2502                (generator): Generator(                                   \u2502 \u2502\n\u2502 \u2502              \u2502   (l1): Linear(in_features=256, out_features=5184,        \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),           \u2502 \u2502\n\u2502 \u2502              mode=trilinear)                                             \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502                (discriminator): Discriminator(                           \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1), padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502              \u2502   (drop1): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1))                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop2): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop3): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop4): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,  \u2502 \u2502\n\u2502 \u2502              2, 2), padding=0)                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)             \u2502 \u2502\n\u2502 \u2502              \u2502   (fakeout): Linear(in_features=19152, out_features=1,    \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (auxout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502              ),                                                          \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   <dataloader.ParticlesDataModule object at               \u2502 \u2502\n\u2502 \u2502              0x7f935b62ff10>,                                            \u2502 \u2502\n\u2502 \u2502              \u2502   None                                                    \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502     kwargs = {}                                                          \u2502 \u2502\n\u2502 \u2502     logger = <lightning.pytorch.loggers.mlflow.MLFlowLogger object at    \u2502 \u2502\n\u2502 \u2502              0x7f935b62f370>                                             \u2502 \u2502\n\u2502 \u2502    trainer = <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f935b62f160>                                             \u2502 \u2502\n\u2502 \u2502 trainer_fn = <bound method Trainer._fit_impl of                          \u2502 \u2502\n\u2502 \u2502              <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f935b62f160>>                                            \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:559 in _fit_impl            \u2502\n\u2502                                                                              \u2502\n\u2502    556 \u2502   \u2502   \u2502   model_provided=True,                                      \u2502\n\u2502    557 \u2502   \u2502   \u2502   model_connected=self.lightning_module is not None,        \u2502\n\u2502    558 \u2502   \u2502   )                                                             \u2502\n\u2502 \u2771  559 \u2502   \u2502   self._run(model, ckpt_path=ckpt_path)                         \u2502\n\u2502    560 \u2502   \u2502                                                                 \u2502\n\u2502    561 \u2502   \u2502   assert self.state.stopped                                     \u2502\n\u2502    562 \u2502   \u2502   self.training = False                                         \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502         ckpt_path = None                                                 \u2502 \u2502\n\u2502 \u2502        datamodule = <dataloader.ParticlesDataModule object at            \u2502 \u2502\n\u2502 \u2502                     0x7f935b62ff10>                                      \u2502 \u2502\n\u2502 \u2502             model = ThreeDGAN(                                           \u2502 \u2502\n\u2502 \u2502                       (generator): Generator(                            \u2502 \u2502\n\u2502 \u2502                     \u2502   (l1): Linear(in_features=256, out_features=5184, \u2502 \u2502\n\u2502 \u2502                     bias=True)                                           \u2502 \u2502\n\u2502 \u2502                     \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),    \u2502 \u2502\n\u2502 \u2502                     mode=trilinear)                                      \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2,    \u2502 \u2502\n\u2502 \u2502                     2), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1,    \u2502 \u2502\n\u2502 \u2502                     1), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1,    \u2502 \u2502\n\u2502 \u2502                     1), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                       )                                                  \u2502 \u2502\n\u2502 \u2502                       (discriminator): Discriminator(                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1), padding=(2, 3, 3))                 \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop1): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0,    \u2502 \u2502\n\u2502 \u2502                     0), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop2): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0,    \u2502 \u2502\n\u2502 \u2502                     0), value=0)                                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop3): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6),     \u2502 \u2502\n\u2502 \u2502                     stride=(1, 1, 1))                                    \u2502 \u2502\n\u2502 \u2502                     \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,   \u2502 \u2502\n\u2502 \u2502                     affine=True, track_running_stats=True)               \u2502 \u2502\n\u2502 \u2502                     \u2502   (drop4): Dropout(p=0.2, inplace=False)           \u2502 \u2502\n\u2502 \u2502                     \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2),      \u2502 \u2502\n\u2502 \u2502                     stride=(2, 2, 2), padding=0)                         \u2502 \u2502\n\u2502 \u2502                     \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)      \u2502 \u2502\n\u2502 \u2502                     \u2502   (fakeout): Linear(in_features=19152,             \u2502 \u2502\n\u2502 \u2502                     out_features=1, bias=True)                           \u2502 \u2502\n\u2502 \u2502                     \u2502   (auxout): Linear(in_features=19152,              \u2502 \u2502\n\u2502 \u2502                     out_features=1, bias=True)                           \u2502 \u2502\n\u2502 \u2502                       )                                                  \u2502 \u2502\n\u2502 \u2502                     )                                                    \u2502 \u2502\n\u2502 \u2502              self = <lightning.pytorch.trainer.trainer.Trainer object at \u2502 \u2502\n\u2502 \u2502                     0x7f935b62f160>                                      \u2502 \u2502\n\u2502 \u2502 train_dataloaders = None                                                 \u2502 \u2502\n\u2502 \u2502   val_dataloaders = None                                                 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:896 in _run                 \u2502\n\u2502                                                                              \u2502\n\u2502    893 \u2502   \u2502   self.strategy.setup_environment()                             \u2502\n\u2502    894 \u2502   \u2502   self.__setup_profiler()                                       \u2502\n\u2502    895 \u2502   \u2502                                                                 \u2502\n\u2502 \u2771  896 \u2502   \u2502   call._call_setup_hook(self)  # allow user to setup lightning_ \u2502\n\u2502    897 \u2502   \u2502                                                                 \u2502\n\u2502    898 \u2502   \u2502   # check if we should delay restoring checkpoint till later    \u2502\n\u2502    899 \u2502   \u2502   if not self.strategy.restore_checkpoint_after_setup:          \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502  ckpt_path = None                                                        \u2502 \u2502\n\u2502 \u2502 max_epochs = 5                                                           \u2502 \u2502\n\u2502 \u2502 min_epochs = 0                                                           \u2502 \u2502\n\u2502 \u2502      model = ThreeDGAN(                                                  \u2502 \u2502\n\u2502 \u2502                (generator): Generator(                                   \u2502 \u2502\n\u2502 \u2502              \u2502   (l1): Linear(in_features=256, out_features=5184,        \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),           \u2502 \u2502\n\u2502 \u2502              mode=trilinear)                                             \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502                (discriminator): Discriminator(                           \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1), padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502              \u2502   (drop1): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1))                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop2): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop3): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop4): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,  \u2502 \u2502\n\u2502 \u2502              2, 2), padding=0)                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)             \u2502 \u2502\n\u2502 \u2502              \u2502   (fakeout): Linear(in_features=19152, out_features=1,    \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (auxout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502       self = <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f935b62f160>                                             \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:81 in _call_setup_hook         \u2502\n\u2502                                                                              \u2502\n\u2502    78 \u2502   trainer.strategy.barrier(\"pre_setup\")                              \u2502\n\u2502    79 \u2502                                                                      \u2502\n\u2502    80 \u2502   if trainer.datamodule is not None:                                 \u2502\n\u2502 \u2771  81 \u2502   \u2502   _call_lightning_datamodule_hook(trainer, \"setup\", stage=fn)    \u2502\n\u2502    82 \u2502   _call_callback_hooks(trainer, \"setup\", stage=fn)                   \u2502\n\u2502    83 \u2502   _call_lightning_module_hook(trainer, \"setup\", stage=fn)            \u2502\n\u2502    84                                                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502      fn = <TrainerFn.FITTING: 'fit'>                                     \u2502 \u2502\n\u2502 \u2502 trainer = <lightning.pytorch.trainer.trainer.Trainer object at           \u2502 \u2502\n\u2502 \u2502           0x7f935b62f160>                                                \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:162 in                         \u2502\n\u2502 _call_lightning_datamodule_hook                                              \u2502\n\u2502                                                                              \u2502\n\u2502   159 \u2502   fn = getattr(trainer.datamodule, hook_name)                        \u2502\n\u2502   160 \u2502   if callable(fn):                                                   \u2502\n\u2502   161 \u2502   \u2502   with trainer.profiler.profile(f\"[LightningDataModule]{trainer. \u2502\n\u2502 \u2771 162 \u2502   \u2502   \u2502   return fn(*args, **kwargs)                                 \u2502\n\u2502   163                                                                        \u2502\n\u2502   164                                                                        \u2502\n\u2502   165 def _call_callback_hooks(                                              \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502      args = ()                                                           \u2502 \u2502\n\u2502 \u2502        fn = <bound method ParticlesDataModule.setup of                   \u2502 \u2502\n\u2502 \u2502             <dataloader.ParticlesDataModule object at 0x7f935b62ff10>>   \u2502 \u2502\n\u2502 \u2502 hook_name = 'setup'                                                      \u2502 \u2502\n\u2502 \u2502    kwargs = {'stage': <TrainerFn.FITTING: 'fit'>}                        \u2502 \u2502\n\u2502 \u2502   trainer = <lightning.pytorch.trainer.trainer.Trainer object at         \u2502 \u2502\n\u2502 \u2502             0x7f935b62f160>                                              \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 177 in setup                                                                 \u2502\n\u2502                                                                              \u2502\n\u2502   174 \u2502   \u2502   # called on every process in DDP                               \u2502\n\u2502   175 \u2502   \u2502                                                                  \u2502\n\u2502   176 \u2502   \u2502   if stage == 'fit' or stage is None:                            \u2502\n\u2502 \u2771 177 \u2502   \u2502   \u2502   self.dataset = ParticlesDataset(                           \u2502\n\u2502   178 \u2502   \u2502   \u2502   \u2502   self.datapath,                                         \u2502\n\u2502   179 \u2502   \u2502   \u2502   \u2502   max_samples=self.max_samples                           \u2502\n\u2502   180 \u2502   \u2502   \u2502   )                                                          \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e        \u2502\n\u2502 \u2502  self = <dataloader.ParticlesDataModule object at 0x7f935b62ff10> \u2502        \u2502\n\u2502 \u2502 stage = <TrainerFn.FITTING: 'fit'>                                \u2502        \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f        \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 48 in __init__                                                               \u2502\n\u2502                                                                              \u2502\n\u2502    45 \u2502   \u2502   self.max_samples = max_samples                                 \u2502\n\u2502    46 \u2502   \u2502   self.data = dict()                                             \u2502\n\u2502    47 \u2502   \u2502                                                                  \u2502\n\u2502 \u2771  48 \u2502   \u2502   self.fetch_data()                                              \u2502\n\u2502    49 \u2502                                                                      \u2502\n\u2502    50 \u2502   def __len__(self):                                                 \u2502\n\u2502    51 \u2502   \u2502   return len(self.data[\"X\"])                                     \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e     \u2502\n\u2502 \u2502    datapath = 'exp_data/*/*.h5'                                      \u2502     \u2502\n\u2502 \u2502 max_samples = 48                                                     \u2502     \u2502\n\u2502 \u2502        self = <dataloader.ParticlesDataset object at 0x7f935b00c910> \u2502     \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f     \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 79 in fetch_data                                                             \u2502\n\u2502                                                                              \u2502\n\u2502    76 \u2502   \u2502                                                                  \u2502\n\u2502    77 \u2502   \u2502   for datafile in files:                                         \u2502\n\u2502    78 \u2502   \u2502   \u2502   f = h5py.File(datafile, 'r')                               \u2502\n\u2502 \u2771  79 \u2502   \u2502   \u2502   dataset = self.GetDataAngleParallel(f)                     \u2502\n\u2502    80 \u2502   \u2502   \u2502   for field, vals_array in dataset.items():                  \u2502\n\u2502    81 \u2502   \u2502   \u2502   \u2502   if self.data.get(field) is not None:                   \u2502\n\u2502    82 \u2502   \u2502   \u2502   \u2502   \u2502   # Resize to include the new array                  \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e       \u2502\n\u2502 \u2502 datafile = 'exp_data/3dgan_data/Ele_VarAngleMeas_100_200_000.h5'   \u2502       \u2502\n\u2502 \u2502        f = <HDF5 file \"Ele_VarAngleMeas_100_200_000.h5\" (mode r)>  \u2502       \u2502\n\u2502 \u2502    files = ['exp_data/3dgan_data/Ele_VarAngleMeas_100_200_000.h5'] \u2502       \u2502\n\u2502 \u2502     self = <dataloader.ParticlesDataset object at 0x7f935b00c910>  \u2502       \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f       \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 130 in GetDataAngleParallel                                                  \u2502\n\u2502                                                                              \u2502\n\u2502   127 \u2502   \u2502   Returns:                                                       \u2502\n\u2502   128 \u2502   \u2502     Dict: Dictionary containning the preprocessed dataset        \u2502\n\u2502   129 \u2502   \u2502   \"\"\"                                                            \u2502\n\u2502 \u2771 130 \u2502   \u2502   X = np.array(dataset.get(\"ECAL\")) * xscale                     \u2502\n\u2502   131 \u2502   \u2502   Y = np.array(dataset.get(\"energy\")) / yscale                   \u2502\n\u2502   132 \u2502   \u2502   X[X < thresh] = 0                                              \u2502\n\u2502   133 \u2502   \u2502   X = X.astype(np.float32)                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e        \u2502\n\u2502 \u2502 angscale = 1                                                      \u2502        \u2502\n\u2502 \u2502  angtype = 'theta'                                                \u2502        \u2502\n\u2502 \u2502  dataset = <HDF5 file \"Ele_VarAngleMeas_100_200_000.h5\" (mode r)> \u2502        \u2502\n\u2502 \u2502    daxis = -1                                                     \u2502        \u2502\n\u2502 \u2502     self = <dataloader.ParticlesDataset object at 0x7f935b00c910> \u2502        \u2502\n\u2502 \u2502   thresh = 0.0001                                                 \u2502        \u2502\n\u2502 \u2502   xpower = 0.85                                                   \u2502        \u2502\n\u2502 \u2502   xscale = 1                                                      \u2502        \u2502\n\u2502 \u2502   yscale = 100                                                    \u2502        \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nMemoryError: Unable to allocate 1.21 GiB for an array with shape (5000, 51, 51, \n25) and data type float32\n_____________________________ test_3dgan_inference _____________________________\n\ninstall_requirements = <function install_requirements.<locals>._install_reqs at 0x7f513cb78ee0>\nfake_model_checkpoint = None\n\n    @pytest.mark.functional\n    def test_3dgan_inference(install_requirements, fake_model_checkpoint):\n        \"\"\"\n        Test 3DGAN torch lightning trainer by running it end-to-end.\n        \"\"\"\n        install_requirements(CERN_PATH, pytest.TORCH_PREFIX)\n        # cmd = (f\"micromamba run -p {pytest.TORCH_PREFIX} python \"\n        #        f\"{CERN_PATH}/train.py -p {CERN_PATH}/pipeline.yaml\")\n        # cmd = (f\"micromamba run -p {pytest.TORCH_PREFIX} itwinai exec-pipeline \"\n        #        f\"--config {CERN_PATH}/inference-pipeline.yaml\")\n    \n        getter_params = \"pipeline.init_args.steps.0.init_args\"\n        trainer_params = \"pipeline.init_args.steps.1.init_args\"\n        logger_params = trainer_params + \".config.trainer.logger.init_args\"\n        data_params = trainer_params + \".config.data.init_args\"\n        saver_params = \"pipeline.init_args.steps.2.init_args\"\n        cmd = (\n            'itwinai exec-pipeline '\n            '--config use-cases/3dgan/inference-pipeline.yaml '\n            f'-o {getter_params}.data_path=exp_data '\n            f'-o {trainer_params}.model.init_args.model_uri={CKPT_PATH} '\n            f'-o {logger_params}.save_dir=ml_logs/mlflow_logs '\n            f'-o {data_params}.datapath=exp_data/*/*.h5 '\n            f'-o {saver_params}.save_dir=3dgan-generated-data '\n        )\n>       subprocess.run(cmd.split(), check=True)\n\ntests/use-cases/test_3dgan.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninput = None, capture_output = False, timeout = None, check = True\npopenargs = (['itwinai', 'exec-pipeline', '--config', 'use-cases/3dgan/inference-pipeline.yaml', '-o', 'pipeline.init_args.steps.0.init_args.data_path=exp_data', ...],)\nkwargs = {}\nprocess = <Popen: returncode: 1 args: ['itwinai', 'exec-pipeline', '--config', 'use-ca...>\nstdout = None, stderr = None, retcode = 1\n\n    def run(*popenargs,\n            input=None, capture_output=False, timeout=None, check=False, **kwargs):\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\n    \n        The returned instance will have attributes args, returncode, stdout and\n        stderr. By default, stdout and stderr are not captured, and those attributes\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\n    \n        If check is True and the exit code was non-zero, it raises a\n        CalledProcessError. The CalledProcessError object will have the return code\n        in the returncode attribute, and output & stderr attributes if those streams\n        were captured.\n    \n        If timeout is given, and the process takes too long, a TimeoutExpired\n        exception will be raised.\n    \n        There is an optional argument \"input\", allowing you to\n        pass bytes or a string to the subprocess's stdin.  If you use this argument\n        you may not also use the Popen constructor's \"stdin\" argument, as\n        it will be used internally.\n    \n        By default, all communication is in bytes, and therefore any \"input\" should\n        be bytes, and the stdout and stderr will be bytes. If in text mode, any\n        \"input\" should be a string, and stdout and stderr will be strings decoded\n        according to locale encoding, or by \"encoding\" if set. Text mode is\n        triggered by setting any of text, encoding, errors or universal_newlines.\n    \n        The other arguments are the same as for the Popen constructor.\n        \"\"\"\n        if input is not None:\n            if kwargs.get('stdin') is not None:\n                raise ValueError('stdin and input arguments may not both be used.')\n            kwargs['stdin'] = PIPE\n    \n        if capture_output:\n            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:\n                raise ValueError('stdout and stderr arguments may not be used '\n                                 'with capture_output.')\n            kwargs['stdout'] = PIPE\n            kwargs['stderr'] = PIPE\n    \n        with Popen(*popenargs, **kwargs) as process:\n            try:\n                stdout, stderr = process.communicate(input, timeout=timeout)\n            except TimeoutExpired as exc:\n                process.kill()\n                if _mswindows:\n                    # Windows accumulates the output in a single blocking\n                    # read() call run on child threads, with the timeout\n                    # being done in a join() on those threads.  communicate()\n                    # _after_ kill() is required to collect that and add it\n                    # to the exception.\n                    exc.stdout, exc.stderr = process.communicate()\n                else:\n                    # POSIX _communicate already populated the output so\n                    # far into the TimeoutExpired exception.\n                    process.wait()\n                raise\n            except:  # Including KeyboardInterrupt, communicate handled that.\n                process.kill()\n                # We don't call process.wait() as .__exit__ does that for us.\n                raise\n            retcode = process.poll()\n            if check and retcode:\n>               raise CalledProcessError(retcode, process.args,\n                                         output=stdout, stderr=stderr)\nE               subprocess.CalledProcessError: Command '['itwinai', 'exec-pipeline', '--config', 'use-cases/3dgan/inference-pipeline.yaml', '-o', 'pipeline.init_args.steps.0.init_args.data_path=exp_data', '-o', 'pipeline.init_args.steps.1.init_args.model.init_args.model_uri=3dgan-inference.pth', '-o', 'pipeline.init_args.steps.1.init_args.config.trainer.logger.init_args.save_dir=ml_logs/mlflow_logs', '-o', 'pipeline.init_args.steps.1.init_args.config.data.init_args.datapath=exp_data/*/*.h5', '-o', 'pipeline.init_args.steps.2.init_args.save_dir=3dgan-generated-data']' returned non-zero exit status 1.\n\n.venv-pytorch/lib/python3.9/subprocess.py:528: CalledProcessError\n----------------------------- Captured stdout call -----------------------------\nRequirement already satisfied: h5py>=3.7.0 in ./.venv-pytorch/lib/python3.9/site-packages (from -r use-cases/3dgan/requirements.txt (line 1)) (3.10.0)\nRequirement already satisfied: google>=3.0.0 in ./.venv-pytorch/lib/python3.9/site-packages (from -r use-cases/3dgan/requirements.txt (line 2)) (3.0.0)\nRequirement already satisfied: protobuf>=4.24.3 in ./.venv-pytorch/lib/python3.9/site-packages (from -r use-cases/3dgan/requirements.txt (line 3)) (4.25.3)\nRequirement already satisfied: gdown>=4.7.1 in ./.venv-pytorch/lib/python3.9/site-packages (from -r use-cases/3dgan/requirements.txt (line 4)) (5.1.0)\nRequirement already satisfied: numpy>=1.17.3 in ./.venv-pytorch/lib/python3.9/site-packages (from h5py>=3.7.0->-r use-cases/3dgan/requirements.txt (line 1)) (1.26.4)\nRequirement already satisfied: beautifulsoup4 in ./.venv-pytorch/lib/python3.9/site-packages (from google>=3.0.0->-r use-cases/3dgan/requirements.txt (line 2)) (4.12.3)\nRequirement already satisfied: filelock in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.13.1)\nRequirement already satisfied: requests[socks] in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2.31.0)\nRequirement already satisfied: tqdm in ./.venv-pytorch/lib/python3.9/site-packages (from gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (4.66.2)\nRequirement already satisfied: soupsieve>1.2 in ./.venv-pytorch/lib/python3.9/site-packages (from beautifulsoup4->google>=3.0.0->-r use-cases/3dgan/requirements.txt (line 2)) (2.5)\nRequirement already satisfied: charset-normalizer<4,>=2 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2.2.1)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (2024.2.2)\nRequirement already satisfied: PySocks!=1.5.7,>=1.5.6 in ./.venv-pytorch/lib/python3.9/site-packages (from requests[socks]->gdown>=4.7.1->-r use-cases/3dgan/requirements.txt (line 4)) (1.7.1)\n#######################################\n# Starting execution of 'Pipeline'... #\n#######################################\n#######################################################\n# Starting execution of 'Lightning3DGANDownloader'... #\n#######################################################\n#################################################\n# 'Lightning3DGANDownloader' executed in 0.000s #\n#################################################\n######################################################\n# Starting execution of 'Lightning3DGANPredictor'... #\n######################################################\nSearching in : exp_data/*/*.h5\nFound 1 files. \n----------------------------- Captured stderr call -----------------------------\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\nGlobal seed set to 4231162351\nGPU available: False, used: False\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\n[rank: 0] Global seed set to 4231162351\nInitializing distributed: GLOBAL_RANK: 0, MEMBER: 1/1\n----------------------------------------------------------------------------------------------------\ndistributed_backend=gloo\nAll distributed processes registered. Starting with 1 processes\n----------------------------------------------------------------------------------------------------\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:42 in                          \u2502\n\u2502 _call_and_handle_interrupt                                                   \u2502\n\u2502                                                                              \u2502\n\u2502    39 \u2502   \"\"\"                                                                \u2502\n\u2502    40 \u2502   try:                                                               \u2502\n\u2502    41 \u2502   \u2502   if trainer.strategy.launcher is not None:                      \u2502\n\u2502 \u2771  42 \u2502   \u2502   \u2502   return trainer.strategy.launcher.launch(trainer_fn, *args, \u2502\n\u2502    43 \u2502   \u2502   else:                                                          \u2502\n\u2502    44 \u2502   \u2502   \u2502   return trainer_fn(*args, **kwargs)                         \u2502\n\u2502    45                                                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502       args = (                                                           \u2502 \u2502\n\u2502 \u2502              \u2502   ThreeDGAN(                                              \u2502 \u2502\n\u2502 \u2502                (generator): Generator(                                   \u2502 \u2502\n\u2502 \u2502              \u2502   (l1): Linear(in_features=256, out_features=5184,        \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),           \u2502 \u2502\n\u2502 \u2502              mode=trilinear)                                             \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502                (discriminator): Discriminator(                           \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1), padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502              \u2502   (drop1): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1))                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop2): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop3): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop4): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,  \u2502 \u2502\n\u2502 \u2502              2, 2), padding=0)                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)             \u2502 \u2502\n\u2502 \u2502              \u2502   (fakeout): Linear(in_features=19152, out_features=1,    \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (auxout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502              ),                                                          \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   <dataloader.ParticlesDataModule object at               \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9340>,                                            \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   None                                                    \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502     kwargs = {}                                                          \u2502 \u2502\n\u2502 \u2502    trainer = <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9160>                                             \u2502 \u2502\n\u2502 \u2502 trainer_fn = <bound method Trainer._predict_impl of                      \u2502 \u2502\n\u2502 \u2502              <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9160>>                                            \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/strategies/launchers/subprocess_script.py:92   \u2502\n\u2502 in launch                                                                    \u2502\n\u2502                                                                              \u2502\n\u2502    89 \u2502   \u2502   \"\"\"                                                            \u2502\n\u2502    90 \u2502   \u2502   if not self.cluster_environment.creates_processes_externally:  \u2502\n\u2502    91 \u2502   \u2502   \u2502   self._call_children_scripts()                              \u2502\n\u2502 \u2771  92 \u2502   \u2502   return function(*args, **kwargs)                               \u2502\n\u2502    93 \u2502                                                                      \u2502\n\u2502    94 \u2502   def kill(self, signum: _SIGNUM) -> None:                           \u2502\n\u2502    95 \u2502   \u2502   for proc in self.procs:                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502     args = (                                                             \u2502 \u2502\n\u2502 \u2502            \u2502   ThreeDGAN(                                                \u2502 \u2502\n\u2502 \u2502              (generator): Generator(                                     \u2502 \u2502\n\u2502 \u2502            \u2502   (l1): Linear(in_features=256, out_features=5184,          \u2502 \u2502\n\u2502 \u2502            bias=True)                                                    \u2502 \u2502\n\u2502 \u2502            \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),             \u2502 \u2502\n\u2502 \u2502            mode=trilinear)                                               \u2502 \u2502\n\u2502 \u2502            \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502              (discriminator): Discriminator(                             \u2502 \u2502\n\u2502 \u2502            \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502            1, 1), padding=(2, 3, 3))                                     \u2502 \u2502\n\u2502 \u2502            \u2502   (drop1): Dropout(p=0.2, inplace=False)                    \u2502 \u2502\n\u2502 \u2502            \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (drop2): Dropout(p=0.2, inplace=False)                    \u2502 \u2502\n\u2502 \u2502            \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),         \u2502 \u2502\n\u2502 \u2502            value=0)                                                      \u2502 \u2502\n\u2502 \u2502            \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (drop3): Dropout(p=0.2, inplace=False)                    \u2502 \u2502\n\u2502 \u2502            \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1,   \u2502 \u2502\n\u2502 \u2502            1, 1))                                                        \u2502 \u2502\n\u2502 \u2502            \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,            \u2502 \u2502\n\u2502 \u2502            affine=True, track_running_stats=True)                        \u2502 \u2502\n\u2502 \u2502            \u2502   (drop4): Dropout(p=0.2, inplace=False)                    \u2502 \u2502\n\u2502 \u2502            \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2, 2, \u2502 \u2502\n\u2502 \u2502            2), padding=0)                                                \u2502 \u2502\n\u2502 \u2502            \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)               \u2502 \u2502\n\u2502 \u2502            \u2502   (fakeout): Linear(in_features=19152, out_features=1,      \u2502 \u2502\n\u2502 \u2502            bias=True)                                                    \u2502 \u2502\n\u2502 \u2502            \u2502   (auxout): Linear(in_features=19152, out_features=1,       \u2502 \u2502\n\u2502 \u2502            bias=True)                                                    \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502            ),                                                            \u2502 \u2502\n\u2502 \u2502            \u2502   None,                                                     \u2502 \u2502\n\u2502 \u2502            \u2502   <dataloader.ParticlesDataModule object at                 \u2502 \u2502\n\u2502 \u2502            0x7f60b8ba9340>,                                              \u2502 \u2502\n\u2502 \u2502            \u2502   None,                                                     \u2502 \u2502\n\u2502 \u2502            \u2502   None                                                      \u2502 \u2502\n\u2502 \u2502            )                                                             \u2502 \u2502\n\u2502 \u2502 function = <bound method Trainer._predict_impl of                        \u2502 \u2502\n\u2502 \u2502            <lightning.pytorch.trainer.trainer.Trainer object at          \u2502 \u2502\n\u2502 \u2502            0x7f60b8ba9160>>                                              \u2502 \u2502\n\u2502 \u2502   kwargs = {}                                                            \u2502 \u2502\n\u2502 \u2502     self = <lightning.pytorch.strategies.launchers.subprocess_script._S\u2026 \u2502 \u2502\n\u2502 \u2502            object at 0x7f60b8c0e550>                                     \u2502 \u2502\n\u2502 \u2502  trainer = <lightning.pytorch.trainer.trainer.Trainer object at          \u2502 \u2502\n\u2502 \u2502            0x7f60b8ba9160>                                               \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:847 in _predict_impl        \u2502\n\u2502                                                                              \u2502\n\u2502    844 \u2502   \u2502   ckpt_path = self._checkpoint_connector._select_ckpt_path(     \u2502\n\u2502    845 \u2502   \u2502   \u2502   self.state.fn, ckpt_path, model_provided=model_provided,  \u2502\n\u2502    846 \u2502   \u2502   )                                                             \u2502\n\u2502 \u2771  847 \u2502   \u2502   results = self._run(model, ckpt_path=ckpt_path)               \u2502\n\u2502    848 \u2502   \u2502                                                                 \u2502\n\u2502    849 \u2502   \u2502   assert self.state.stopped                                     \u2502\n\u2502    850 \u2502   \u2502   self.predicting = False                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502          ckpt_path = None                                                \u2502 \u2502\n\u2502 \u2502        dataloaders = None                                                \u2502 \u2502\n\u2502 \u2502         datamodule = <dataloader.ParticlesDataModule object at           \u2502 \u2502\n\u2502 \u2502                      0x7f60b8ba9340>                                     \u2502 \u2502\n\u2502 \u2502              model = ThreeDGAN(                                          \u2502 \u2502\n\u2502 \u2502                        (generator): Generator(                           \u2502 \u2502\n\u2502 \u2502                      \u2502   (l1): Linear(in_features=256,                   \u2502 \u2502\n\u2502 \u2502                      out_features=5184, bias=True)                       \u2502 \u2502\n\u2502 \u2502                      \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),   \u2502 \u2502\n\u2502 \u2502                      mode=trilinear)                                     \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                        (discriminator): Discriminator(                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1), padding=(2, 3, 3))                \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop1): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop2): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop3): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop4): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                      stride=(2, 2, 2), padding=0)                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)     \u2502 \u2502\n\u2502 \u2502                      \u2502   (fakeout): Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                      \u2502   (auxout): Linear(in_features=19152,             \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                      )                                                   \u2502 \u2502\n\u2502 \u2502     model_provided = True                                                \u2502 \u2502\n\u2502 \u2502 return_predictions = None                                                \u2502 \u2502\n\u2502 \u2502               self = <lightning.pytorch.trainer.trainer.Trainer object   \u2502 \u2502\n\u2502 \u2502                      at 0x7f60b8ba9160>                                  \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:896 in _run                 \u2502\n\u2502                                                                              \u2502\n\u2502    893 \u2502   \u2502   self.strategy.setup_environment()                             \u2502\n\u2502    894 \u2502   \u2502   self.__setup_profiler()                                       \u2502\n\u2502    895 \u2502   \u2502                                                                 \u2502\n\u2502 \u2771  896 \u2502   \u2502   call._call_setup_hook(self)  # allow user to setup lightning_ \u2502\n\u2502    897 \u2502   \u2502                                                                 \u2502\n\u2502    898 \u2502   \u2502   # check if we should delay restoring checkpoint till later    \u2502\n\u2502    899 \u2502   \u2502   if not self.strategy.restore_checkpoint_after_setup:          \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502 ckpt_path = None                                                         \u2502 \u2502\n\u2502 \u2502     model = ThreeDGAN(                                                   \u2502 \u2502\n\u2502 \u2502               (generator): Generator(                                    \u2502 \u2502\n\u2502 \u2502             \u2502   (l1): Linear(in_features=256, out_features=5184,         \u2502 \u2502\n\u2502 \u2502             bias=True)                                                   \u2502 \u2502\n\u2502 \u2502             \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),            \u2502 \u2502\n\u2502 \u2502             mode=trilinear)                                              \u2502 \u2502\n\u2502 \u2502             \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502               )                                                          \u2502 \u2502\n\u2502 \u2502               (discriminator): Discriminator(                            \u2502 \u2502\n\u2502 \u2502             \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502             1, 1), padding=(2, 3, 3))                                    \u2502 \u2502\n\u2502 \u2502             \u2502   (drop1): Dropout(p=0.2, inplace=False)                   \u2502 \u2502\n\u2502 \u2502             \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (drop2): Dropout(p=0.2, inplace=False)                   \u2502 \u2502\n\u2502 \u2502             \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),        \u2502 \u2502\n\u2502 \u2502             value=0)                                                     \u2502 \u2502\n\u2502 \u2502             \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (drop3): Dropout(p=0.2, inplace=False)                   \u2502 \u2502\n\u2502 \u2502             \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1,  \u2502 \u2502\n\u2502 \u2502             1, 1))                                                       \u2502 \u2502\n\u2502 \u2502             \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,           \u2502 \u2502\n\u2502 \u2502             affine=True, track_running_stats=True)                       \u2502 \u2502\n\u2502 \u2502             \u2502   (drop4): Dropout(p=0.2, inplace=False)                   \u2502 \u2502\n\u2502 \u2502             \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,   \u2502 \u2502\n\u2502 \u2502             2, 2), padding=0)                                            \u2502 \u2502\n\u2502 \u2502             \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)              \u2502 \u2502\n\u2502 \u2502             \u2502   (fakeout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502             bias=True)                                                   \u2502 \u2502\n\u2502 \u2502             \u2502   (auxout): Linear(in_features=19152, out_features=1,      \u2502 \u2502\n\u2502 \u2502             bias=True)                                                   \u2502 \u2502\n\u2502 \u2502               )                                                          \u2502 \u2502\n\u2502 \u2502             )                                                            \u2502 \u2502\n\u2502 \u2502      self = <lightning.pytorch.trainer.trainer.Trainer object at         \u2502 \u2502\n\u2502 \u2502             0x7f60b8ba9160>                                              \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:81 in _call_setup_hook         \u2502\n\u2502                                                                              \u2502\n\u2502    78 \u2502   trainer.strategy.barrier(\"pre_setup\")                              \u2502\n\u2502    79 \u2502                                                                      \u2502\n\u2502    80 \u2502   if trainer.datamodule is not None:                                 \u2502\n\u2502 \u2771  81 \u2502   \u2502   _call_lightning_datamodule_hook(trainer, \"setup\", stage=fn)    \u2502\n\u2502    82 \u2502   _call_callback_hooks(trainer, \"setup\", stage=fn)                   \u2502\n\u2502    83 \u2502   _call_lightning_module_hook(trainer, \"setup\", stage=fn)            \u2502\n\u2502    84                                                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502      fn = <TrainerFn.PREDICTING: 'predict'>                              \u2502 \u2502\n\u2502 \u2502 trainer = <lightning.pytorch.trainer.trainer.Trainer object at           \u2502 \u2502\n\u2502 \u2502           0x7f60b8ba9160>                                                \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:162 in                         \u2502\n\u2502 _call_lightning_datamodule_hook                                              \u2502\n\u2502                                                                              \u2502\n\u2502   159 \u2502   fn = getattr(trainer.datamodule, hook_name)                        \u2502\n\u2502   160 \u2502   if callable(fn):                                                   \u2502\n\u2502   161 \u2502   \u2502   with trainer.profiler.profile(f\"[LightningDataModule]{trainer. \u2502\n\u2502 \u2771 162 \u2502   \u2502   \u2502   return fn(*args, **kwargs)                                 \u2502\n\u2502   163                                                                        \u2502\n\u2502   164                                                                        \u2502\n\u2502   165 def _call_callback_hooks(                                              \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502      args = ()                                                           \u2502 \u2502\n\u2502 \u2502        fn = <bound method ParticlesDataModule.setup of                   \u2502 \u2502\n\u2502 \u2502             <dataloader.ParticlesDataModule object at 0x7f60b8ba9340>>   \u2502 \u2502\n\u2502 \u2502 hook_name = 'setup'                                                      \u2502 \u2502\n\u2502 \u2502    kwargs = {'stage': <TrainerFn.PREDICTING: 'predict'>}                 \u2502 \u2502\n\u2502 \u2502   trainer = <lightning.pytorch.trainer.trainer.Trainer object at         \u2502 \u2502\n\u2502 \u2502             0x7f60b8ba9160>                                              \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 190 in setup                                                                 \u2502\n\u2502                                                                              \u2502\n\u2502   187 \u2502   \u2502   if stage == 'predict':                                         \u2502\n\u2502   188 \u2502   \u2502   \u2502   # TODO: inference dataset should be different in that it   \u2502\n\u2502   189 \u2502   \u2502   \u2502   # does not contain images!                                 \u2502\n\u2502 \u2771 190 \u2502   \u2502   \u2502   self.predict_dataset = ParticlesDataset(                   \u2502\n\u2502   191 \u2502   \u2502   \u2502   \u2502   self.datapath,                                         \u2502\n\u2502   192 \u2502   \u2502   \u2502   \u2502   max_samples=self.max_samples                           \u2502\n\u2502   193 \u2502   \u2502   \u2502   )                                                          \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e        \u2502\n\u2502 \u2502  self = <dataloader.ParticlesDataModule object at 0x7f60b8ba9340> \u2502        \u2502\n\u2502 \u2502 stage = <TrainerFn.PREDICTING: 'predict'>                         \u2502        \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f        \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 48 in __init__                                                               \u2502\n\u2502                                                                              \u2502\n\u2502    45 \u2502   \u2502   self.max_samples = max_samples                                 \u2502\n\u2502    46 \u2502   \u2502   self.data = dict()                                             \u2502\n\u2502    47 \u2502   \u2502                                                                  \u2502\n\u2502 \u2771  48 \u2502   \u2502   self.fetch_data()                                              \u2502\n\u2502    49 \u2502                                                                      \u2502\n\u2502    50 \u2502   def __len__(self):                                                 \u2502\n\u2502    51 \u2502   \u2502   return len(self.data[\"X\"])                                     \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e     \u2502\n\u2502 \u2502    datapath = 'exp_data/*/*.h5'                                      \u2502     \u2502\n\u2502 \u2502 max_samples = 10                                                     \u2502     \u2502\n\u2502 \u2502        self = <dataloader.ParticlesDataset object at 0x7f60b86358e0> \u2502     \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f     \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 79 in fetch_data                                                             \u2502\n\u2502                                                                              \u2502\n\u2502    76 \u2502   \u2502                                                                  \u2502\n\u2502    77 \u2502   \u2502   for datafile in files:                                         \u2502\n\u2502    78 \u2502   \u2502   \u2502   f = h5py.File(datafile, 'r')                               \u2502\n\u2502 \u2771  79 \u2502   \u2502   \u2502   dataset = self.GetDataAngleParallel(f)                     \u2502\n\u2502    80 \u2502   \u2502   \u2502   for field, vals_array in dataset.items():                  \u2502\n\u2502    81 \u2502   \u2502   \u2502   \u2502   if self.data.get(field) is not None:                   \u2502\n\u2502    82 \u2502   \u2502   \u2502   \u2502   \u2502   # Resize to include the new array                  \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e       \u2502\n\u2502 \u2502 datafile = 'exp_data/3dgan_data/Ele_VarAngleMeas_100_200_000.h5'   \u2502       \u2502\n\u2502 \u2502        f = <HDF5 file \"Ele_VarAngleMeas_100_200_000.h5\" (mode r)>  \u2502       \u2502\n\u2502 \u2502    files = ['exp_data/3dgan_data/Ele_VarAngleMeas_100_200_000.h5'] \u2502       \u2502\n\u2502 \u2502     self = <dataloader.ParticlesDataset object at 0x7f60b86358e0>  \u2502       \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f       \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/dataloader.py: \u2502\n\u2502 130 in GetDataAngleParallel                                                  \u2502\n\u2502                                                                              \u2502\n\u2502   127 \u2502   \u2502   Returns:                                                       \u2502\n\u2502   128 \u2502   \u2502     Dict: Dictionary containning the preprocessed dataset        \u2502\n\u2502   129 \u2502   \u2502   \"\"\"                                                            \u2502\n\u2502 \u2771 130 \u2502   \u2502   X = np.array(dataset.get(\"ECAL\")) * xscale                     \u2502\n\u2502   131 \u2502   \u2502   Y = np.array(dataset.get(\"energy\")) / yscale                   \u2502\n\u2502   132 \u2502   \u2502   X[X < thresh] = 0                                              \u2502\n\u2502   133 \u2502   \u2502   X = X.astype(np.float32)                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e        \u2502\n\u2502 \u2502 angscale = 1                                                      \u2502        \u2502\n\u2502 \u2502  angtype = 'theta'                                                \u2502        \u2502\n\u2502 \u2502  dataset = <HDF5 file \"Ele_VarAngleMeas_100_200_000.h5\" (mode r)> \u2502        \u2502\n\u2502 \u2502    daxis = -1                                                     \u2502        \u2502\n\u2502 \u2502     self = <dataloader.ParticlesDataset object at 0x7f60b86358e0> \u2502        \u2502\n\u2502 \u2502   thresh = 0.0001                                                 \u2502        \u2502\n\u2502 \u2502   xpower = 0.85                                                   \u2502        \u2502\n\u2502 \u2502   xscale = 1                                                      \u2502        \u2502\n\u2502 \u2502   yscale = 100                                                    \u2502        \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nMemoryError: Unable to allocate 1.21 GiB for an array with shape (5000, 51, 51, \n25) and data type float32\n\nDuring handling of the above exception, another exception occurred:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/cli.py:64 in exec_pipeline                               \u2502\n\u2502                                                                              \u2502\n\u2502    61 \u2502   }                                                                  \u2502\n\u2502    62 \u2502   parser = ConfigParser(config=config, override_keys=overrides)      \u2502\n\u2502    63 \u2502   pipeline = parser.parse_pipeline(pipeline_nested_key=pipe_key)     \u2502\n\u2502 \u2771  64 \u2502   pipeline.execute()                                                 \u2502\n\u2502    65                                                                        \u2502\n\u2502    66                                                                        \u2502\n\u2502    67 @app.command()                                                         \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502         config = PosixPath('use-cases/3dgan/inference-pipeline.yaml')    \u2502 \u2502\n\u2502 \u2502   ConfigParser = <class 'itwinai.parser.ConfigParser'>                   \u2502 \u2502\n\u2502 \u2502             os = <module 'os' from                                       \u2502 \u2502\n\u2502 \u2502                  '/sqaaas-build/github.com/interTwin-eu/itwinai/.venv-p\u2026 \u2502 \u2502\n\u2502 \u2502      overrides = {                                                       \u2502 \u2502\n\u2502 \u2502                  \u2502   'pipeline.init_args.steps.0.init_args.data_path':   \u2502 \u2502\n\u2502 \u2502                  'exp_data',                                             \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.model.init_args.\u2026 \u2502 \u2502\n\u2502 \u2502                  '3dgan-inference.pth',                                  \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.config.trainer.l\u2026 \u2502 \u2502\n\u2502 \u2502                  'ml_logs/mlflow_logs',                                  \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.config.data.init\u2026 \u2502 \u2502\n\u2502 \u2502                  'exp_data/*/*.h5',                                      \u2502 \u2502\n\u2502 \u2502                  \u2502   'pipeline.init_args.steps.2.init_args.save_dir':    \u2502 \u2502\n\u2502 \u2502                  '3dgan-generated-data'                                  \u2502 \u2502\n\u2502 \u2502                  }                                                       \u2502 \u2502\n\u2502 \u2502 overrides_list = [                                                       \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.0.init_args.data_path=exp_da\u2026 \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.model.init_args.\u2026 \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.config.trainer.l\u2026 \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.1.init_args.config.data.init\u2026 \u2502 \u2502\n\u2502 \u2502                  \u2502                                                       \u2502 \u2502\n\u2502 \u2502                  'pipeline.init_args.steps.2.init_args.save_dir=3dgan-g\u2026 \u2502 \u2502\n\u2502 \u2502                  ]                                                       \u2502 \u2502\n\u2502 \u2502         parser = <itwinai.parser.ConfigParser object at 0x7f60f0206ca0>  \u2502 \u2502\n\u2502 \u2502       pipe_key = 'pipeline'                                              \u2502 \u2502\n\u2502 \u2502       pipeline = <itwinai.pipeline.Pipeline object at 0x7f60efad5910>    \u2502 \u2502\n\u2502 \u2502            sys = <module 'sys' (built-in)>                               \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/components.py:114 in monitored_method                    \u2502\n\u2502                                                                              \u2502\n\u2502   111 \u2502   \u2502   try:                                                           \u2502\n\u2502   112 \u2502   \u2502   \u2502   # print(f'ARGS: {args}')                                   \u2502\n\u2502   113 \u2502   \u2502   \u2502   # print(f'KWARGS: {kwargs}')                               \u2502\n\u2502 \u2771 114 \u2502   \u2502   \u2502   result = method(self, *args, **kwargs)                     \u2502\n\u2502   115 \u2502   \u2502   finally:                                                       \u2502\n\u2502   116 \u2502   \u2502   \u2502   self.cleanup()                                             \u2502\n\u2502   117 \u2502   \u2502   self.exec_t = time.time() - start_t                            \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\n\u2502 \u2502    args = ()                                                   \u2502           \u2502\n\u2502 \u2502  kwargs = {}                                                   \u2502           \u2502\n\u2502 \u2502  method = <function Pipeline.execute at 0x7f60efaf01f0>        \u2502           \u2502\n\u2502 \u2502     msg = \"Starting execution of 'Pipeline'...\"                \u2502           \u2502\n\u2502 \u2502    self = <itwinai.pipeline.Pipeline object at 0x7f60efad5910> \u2502           \u2502\n\u2502 \u2502 start_t = 1711107260.2113118                                   \u2502           \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/pipeline.py:63 in execute                                \u2502\n\u2502                                                                              \u2502\n\u2502    60 \u2502   \u2502   \u2502   step: BaseComponent                                        \u2502\n\u2502    61 \u2502   \u2502   \u2502   args = self._pack_args(args)                               \u2502\n\u2502    62 \u2502   \u2502   \u2502   self.validate_args(args, step)                             \u2502\n\u2502 \u2771  63 \u2502   \u2502   \u2502   args = step.execute(*args)                                 \u2502\n\u2502    64 \u2502   \u2502                                                                  \u2502\n\u2502    65 \u2502   \u2502   return args                                                    \u2502\n\u2502    66                                                                        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502  args = ()                                                               \u2502 \u2502\n\u2502 \u2502  self = <itwinai.pipeline.Pipeline object at 0x7f60efad5910>             \u2502 \u2502\n\u2502 \u2502  step = <trainer.Lightning3DGANPredictor object at 0x7f60b913a580>       \u2502 \u2502\n\u2502 \u2502 steps = [                                                                \u2502 \u2502\n\u2502 \u2502         \u2502   <dataloader.Lightning3DGANDownloader object at               \u2502 \u2502\n\u2502 \u2502         0x7f60b913a790>,                                                 \u2502 \u2502\n\u2502 \u2502         \u2502   <trainer.Lightning3DGANPredictor object at 0x7f60b913a580>,  \u2502 \u2502\n\u2502 \u2502         \u2502   <saver.ParticleImagesSaver object at 0x7f60b91ab490>         \u2502 \u2502\n\u2502 \u2502         ]                                                                \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/itwinai/components.py:114 in monitored_method                    \u2502\n\u2502                                                                              \u2502\n\u2502   111 \u2502   \u2502   try:                                                           \u2502\n\u2502   112 \u2502   \u2502   \u2502   # print(f'ARGS: {args}')                                   \u2502\n\u2502   113 \u2502   \u2502   \u2502   # print(f'KWARGS: {kwargs}')                               \u2502\n\u2502 \u2771 114 \u2502   \u2502   \u2502   result = method(self, *args, **kwargs)                     \u2502\n\u2502   115 \u2502   \u2502   finally:                                                       \u2502\n\u2502   116 \u2502   \u2502   \u2502   self.cleanup()                                             \u2502\n\u2502   117 \u2502   \u2502   self.exec_t = time.time() - start_t                            \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e   \u2502\n\u2502 \u2502    args = ()                                                           \u2502   \u2502\n\u2502 \u2502  kwargs = {}                                                           \u2502   \u2502\n\u2502 \u2502  method = <function Lightning3DGANPredictor.execute at 0x7f60b9129c10> \u2502   \u2502\n\u2502 \u2502     msg = \"Starting execution of 'Lightning3DGANPredictor'...\"         \u2502   \u2502\n\u2502 \u2502    self = <trainer.Lightning3DGANPredictor object at 0x7f60b913a580>   \u2502   \u2502\n\u2502 \u2502 start_t = 1711107260.2115104                                           \u2502   \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f   \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/use-cases/3dgan/trainer.py:133 \u2502\n\u2502 in execute                                                                   \u2502\n\u2502                                                                              \u2502\n\u2502   130 \u2502   \u2502   if model is None:                                              \u2502\n\u2502   131 \u2502   \u2502   \u2502   model = cli.model                                          \u2502\n\u2502   132 \u2502   \u2502                                                                  \u2502\n\u2502 \u2771 133 \u2502   \u2502   predictions = cli.trainer.predict(model, datamodule=datamodule \u2502\n\u2502   134 \u2502   \u2502                                                                  \u2502\n\u2502   135 \u2502   \u2502   # Transpose predictions into images, energies and angles       \u2502\n\u2502   136 \u2502   \u2502   images = torch.cat(list(map(                                   \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502        cli = <lightning.pytorch.cli.LightningCLI object at               \u2502 \u2502\n\u2502 \u2502              0x7f60efa76c10>                                             \u2502 \u2502\n\u2502 \u2502 datamodule = <dataloader.ParticlesDataModule object at 0x7f60b8ba9340>   \u2502 \u2502\n\u2502 \u2502      model = ThreeDGAN(                                                  \u2502 \u2502\n\u2502 \u2502                (generator): Generator(                                   \u2502 \u2502\n\u2502 \u2502              \u2502   (l1): Linear(in_features=256, out_features=5184,        \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),           \u2502 \u2502\n\u2502 \u2502              mode=trilinear)                                             \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502                (discriminator): Discriminator(                           \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1), padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502              \u2502   (drop1): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1))                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop2): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop3): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop4): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,  \u2502 \u2502\n\u2502 \u2502              2, 2), padding=0)                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)             \u2502 \u2502\n\u2502 \u2502              \u2502   (fakeout): Linear(in_features=19152, out_features=1,    \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (auxout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502   old_argv = [                                                           \u2502 \u2502\n\u2502 \u2502              \u2502                                                           \u2502 \u2502\n\u2502 \u2502              '/sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytor\u2026 \u2502 \u2502\n\u2502 \u2502              \u2502   'exec-pipeline',                                        \u2502 \u2502\n\u2502 \u2502              \u2502   '--config',                                             \u2502 \u2502\n\u2502 \u2502              \u2502   'use-cases/3dgan/inference-pipeline.yaml',              \u2502 \u2502\n\u2502 \u2502              \u2502   '-o',                                                   \u2502 \u2502\n\u2502 \u2502              \u2502                                                           \u2502 \u2502\n\u2502 \u2502              'pipeline.init_args.steps.0.init_args.data_path=exp_data',  \u2502 \u2502\n\u2502 \u2502              \u2502   '-o',                                                   \u2502 \u2502\n\u2502 \u2502              \u2502                                                           \u2502 \u2502\n\u2502 \u2502              'pipeline.init_args.steps.1.init_args.model.init_args.mode\u2026 \u2502 \u2502\n\u2502 \u2502              \u2502   '-o',                                                   \u2502 \u2502\n\u2502 \u2502              \u2502                                                           \u2502 \u2502\n\u2502 \u2502              'pipeline.init_args.steps.1.init_args.config.trainer.logge\u2026 \u2502 \u2502\n\u2502 \u2502              \u2502   ... +4                                                  \u2502 \u2502\n\u2502 \u2502              ]                                                           \u2502 \u2502\n\u2502 \u2502       self = <trainer.Lightning3DGANPredictor object at 0x7f60b913a580>  \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/trainer.py:805 in predict              \u2502\n\u2502                                                                              \u2502\n\u2502    802 \u2502   \u2502   else:                                                         \u2502\n\u2502    803 \u2502   \u2502   \u2502   model = _maybe_unwrap_optimized(model)                    \u2502\n\u2502    804 \u2502   \u2502   \u2502   self.strategy._lightning_module = model                   \u2502\n\u2502 \u2771  805 \u2502   \u2502   return call._call_and_handle_interrupt(                       \u2502\n\u2502    806 \u2502   \u2502   \u2502   self, self._predict_impl, model, dataloaders, datamodule, \u2502\n\u2502    807 \u2502   \u2502   )                                                             \u2502\n\u2502    808                                                                       \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502          ckpt_path = None                                                \u2502 \u2502\n\u2502 \u2502        dataloaders = None                                                \u2502 \u2502\n\u2502 \u2502         datamodule = <dataloader.ParticlesDataModule object at           \u2502 \u2502\n\u2502 \u2502                      0x7f60b8ba9340>                                     \u2502 \u2502\n\u2502 \u2502              model = ThreeDGAN(                                          \u2502 \u2502\n\u2502 \u2502                        (generator): Generator(                           \u2502 \u2502\n\u2502 \u2502                      \u2502   (l1): Linear(in_features=256,                   \u2502 \u2502\n\u2502 \u2502                      out_features=5184, bias=True)                       \u2502 \u2502\n\u2502 \u2502                      \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),   \u2502 \u2502\n\u2502 \u2502                      mode=trilinear)                                     \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2,   \u2502 \u2502\n\u2502 \u2502                      2), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1,   \u2502 \u2502\n\u2502 \u2502                      1), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                        (discriminator): Discriminator(                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1), padding=(2, 3, 3))                \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop1): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),   \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop2): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0,   \u2502 \u2502\n\u2502 \u2502                      0), value=0)                                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop3): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6),    \u2502 \u2502\n\u2502 \u2502                      stride=(1, 1, 1))                                   \u2502 \u2502\n\u2502 \u2502                      \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,  \u2502 \u2502\n\u2502 \u2502                      affine=True, track_running_stats=True)              \u2502 \u2502\n\u2502 \u2502                      \u2502   (drop4): Dropout(p=0.2, inplace=False)          \u2502 \u2502\n\u2502 \u2502                      \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2),     \u2502 \u2502\n\u2502 \u2502                      stride=(2, 2, 2), padding=0)                        \u2502 \u2502\n\u2502 \u2502                      \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)     \u2502 \u2502\n\u2502 \u2502                      \u2502   (fakeout): Linear(in_features=19152,            \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                      \u2502   (auxout): Linear(in_features=19152,             \u2502 \u2502\n\u2502 \u2502                      out_features=1, bias=True)                          \u2502 \u2502\n\u2502 \u2502                        )                                                 \u2502 \u2502\n\u2502 \u2502                      )                                                   \u2502 \u2502\n\u2502 \u2502 return_predictions = None                                                \u2502 \u2502\n\u2502 \u2502               self = <lightning.pytorch.trainer.trainer.Trainer object   \u2502 \u2502\n\u2502 \u2502                      at 0x7f60b8ba9160>                                  \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/trainer/call.py:65 in                          \u2502\n\u2502 _call_and_handle_interrupt                                                   \u2502\n\u2502                                                                              \u2502\n\u2502    62 \u2502   except BaseException as exception:                                 \u2502\n\u2502    63 \u2502   \u2502   trainer.state.status = TrainerStatus.INTERRUPTED               \u2502\n\u2502    64 \u2502   \u2502   _call_callback_hooks(trainer, \"on_exception\", exception)       \u2502\n\u2502 \u2771  65 \u2502   \u2502   trainer.strategy.on_exception(exception)                       \u2502\n\u2502    66 \u2502   \u2502   for logger in trainer.loggers:                                 \u2502\n\u2502    67 \u2502   \u2502   \u2502   logger.finalize(\"failed\")                                  \u2502\n\u2502    68 \u2502   \u2502   trainer._teardown()                                            \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502       args = (                                                           \u2502 \u2502\n\u2502 \u2502              \u2502   ThreeDGAN(                                              \u2502 \u2502\n\u2502 \u2502                (generator): Generator(                                   \u2502 \u2502\n\u2502 \u2502              \u2502   (l1): Linear(in_features=256, out_features=5184,        \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (up1): Upsample(scale_factor=(6.0, 6.0, 6.0),           \u2502 \u2502\n\u2502 \u2502              mode=trilinear)                                             \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(8, 8, kernel_size=(6, 6, 8), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(8, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad3): ConstantPad3d(padding=(1, 1, 2, 2, 2, 2),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(6, 6, kernel_size=(4, 4, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn4): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad4): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv5): Conv3d(6, 6, kernel_size=(3, 3, 5), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn5): BatchNorm3d(6, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (pad5): ConstantPad3d(padding=(0, 0, 1, 1, 1, 1),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv6): Conv3d(6, 6, kernel_size=(3, 3, 3), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (conv7): Conv3d(6, 1, kernel_size=(2, 2, 2), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502                (discriminator): Discriminator(                           \u2502 \u2502\n\u2502 \u2502              \u2502   (conv1): Conv3d(1, 16, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1), padding=(2, 3, 3))                        \u2502 \u2502\n\u2502 \u2502              \u2502   (drop1): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad1): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv2): Conv3d(16, 8, kernel_size=(5, 6, 6),           \u2502 \u2502\n\u2502 \u2502              stride=(1, 1, 1))                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (bn1): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop2): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (pad2): ConstantPad3d(padding=(1, 1, 0, 0, 0, 0),       \u2502 \u2502\n\u2502 \u2502              value=0)                                                    \u2502 \u2502\n\u2502 \u2502              \u2502   (conv3): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn2): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop3): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (conv4): Conv3d(8, 8, kernel_size=(5, 6, 6), stride=(1, \u2502 \u2502\n\u2502 \u2502              1, 1))                                                      \u2502 \u2502\n\u2502 \u2502              \u2502   (bn3): BatchNorm3d(8, eps=1e-06, momentum=0.1,          \u2502 \u2502\n\u2502 \u2502              affine=True, track_running_stats=True)                      \u2502 \u2502\n\u2502 \u2502              \u2502   (drop4): Dropout(p=0.2, inplace=False)                  \u2502 \u2502\n\u2502 \u2502              \u2502   (avgpool): AvgPool3d(kernel_size=(2, 2, 2), stride=(2,  \u2502 \u2502\n\u2502 \u2502              2, 2), padding=0)                                           \u2502 \u2502\n\u2502 \u2502              \u2502   (flatten): Flatten(start_dim=1, end_dim=-1)             \u2502 \u2502\n\u2502 \u2502              \u2502   (fakeout): Linear(in_features=19152, out_features=1,    \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502              \u2502   (auxout): Linear(in_features=19152, out_features=1,     \u2502 \u2502\n\u2502 \u2502              bias=True)                                                  \u2502 \u2502\n\u2502 \u2502                )                                                         \u2502 \u2502\n\u2502 \u2502              ),                                                          \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   <dataloader.ParticlesDataModule object at               \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9340>,                                            \u2502 \u2502\n\u2502 \u2502              \u2502   None,                                                   \u2502 \u2502\n\u2502 \u2502              \u2502   None                                                    \u2502 \u2502\n\u2502 \u2502              )                                                           \u2502 \u2502\n\u2502 \u2502     kwargs = {}                                                          \u2502 \u2502\n\u2502 \u2502    trainer = <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9160>                                             \u2502 \u2502\n\u2502 \u2502 trainer_fn = <bound method Trainer._predict_impl of                      \u2502 \u2502\n\u2502 \u2502              <lightning.pytorch.trainer.trainer.Trainer object at        \u2502 \u2502\n\u2502 \u2502              0x7f60b8ba9160>>                                            \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/strategies/ddp.py:395 in on_exception          \u2502\n\u2502                                                                              \u2502\n\u2502   392 \u2502   \u2502   \u2502   )                                                          \u2502\n\u2502   393 \u2502                                                                      \u2502\n\u2502   394 \u2502   def on_exception(self, exception: BaseException) -> None:          \u2502\n\u2502 \u2771 395 \u2502   \u2502   _augment_message(                                              \u2502\n\u2502   396 \u2502   \u2502   \u2502   exception,                                                 \u2502\n\u2502   397 \u2502   \u2502   \u2502   pattern=\".*Expected to have finished reduction in the prio \u2502\n\u2502   398 \u2502   \u2502   \u2502   new_message=(                                              \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502 exception = MemoryError((5000, 51, 51, 25), dtype('<f4'))                \u2502 \u2502\n\u2502 \u2502      self = <lightning.pytorch.strategies.ddp.DDPStrategy object at      \u2502 \u2502\n\u2502 \u2502             0x7f60b8c0e970>                                              \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/utilities/exceptions.py:40 in _augment_message \u2502\n\u2502                                                                              \u2502\n\u2502   37 \u2502   \u2502   exception.add_note(new_message)                                 \u2502\n\u2502   38 \u2502   else:                                                               \u2502\n\u2502   39 \u2502   \u2502   # Remove this when Python 3.11 becomes the minimum supported ve \u2502\n\u2502 \u2771 40 \u2502   \u2502   exception.args = tuple(                                         \u2502\n\u2502   41 \u2502   \u2502   \u2502   new_message if re.match(pattern, message, re.DOTALL) else m \u2502\n\u2502   42 \u2502   \u2502   )                                                               \u2502\n\u2502   43                                                                         \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502   exception = MemoryError((5000, 51, 51, 25), dtype('<f4'))              \u2502 \u2502\n\u2502 \u2502 new_message = 'It looks like your LightningModule has parameters that    \u2502 \u2502\n\u2502 \u2502               were not used in producin'+297                             \u2502 \u2502\n\u2502 \u2502     pattern = '.*Expected to have finished reduction in the prior        \u2502 \u2502\n\u2502 \u2502               iteration.*'                                               \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/si \u2502\n\u2502 te-packages/lightning/pytorch/utilities/exceptions.py:41 in <genexpr>        \u2502\n\u2502                                                                              \u2502\n\u2502   38 \u2502   else:                                                               \u2502\n\u2502   39 \u2502   \u2502   # Remove this when Python 3.11 becomes the minimum supported ve \u2502\n\u2502   40 \u2502   \u2502   exception.args = tuple(                                         \u2502\n\u2502 \u2771 41 \u2502   \u2502   \u2502   new_message if re.match(pattern, message, re.DOTALL) else m \u2502\n\u2502   42 \u2502   \u2502   )                                                               \u2502\n\u2502   43                                                                         \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502          .0 = <tuple_iterator object at 0x7f60b8635bb0>                  \u2502 \u2502\n\u2502 \u2502     message = (5000, 51, 51, 25)                                         \u2502 \u2502\n\u2502 \u2502 new_message = 'It looks like your LightningModule has parameters that    \u2502 \u2502\n\u2502 \u2502               were not used in producin'+297                             \u2502 \u2502\n\u2502 \u2502     pattern = '.*Expected to have finished reduction in the prior        \u2502 \u2502\n\u2502 \u2502               iteration.*'                                               \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                              \u2502\n\u2502 /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/re \u2502\n\u2502 .py:191 in match                                                             \u2502\n\u2502                                                                              \u2502\n\u2502   188 def match(pattern, string, flags=0):                                   \u2502\n\u2502   189 \u2502   \"\"\"Try to apply the pattern at the start of the string, returning  \u2502\n\u2502   190 \u2502   a Match object, or None if no match was found.\"\"\"                  \u2502\n\u2502 \u2771 191 \u2502   return _compile(pattern, flags).match(string)                      \u2502\n\u2502   192                                                                        \u2502\n\u2502   193 def fullmatch(pattern, string, flags=0):                               \u2502\n\u2502   194 \u2502   \"\"\"Try to apply the pattern to all of the string, returning        \u2502\n\u2502                                                                              \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502   flags = re.DOTALL                                                      \u2502 \u2502\n\u2502 \u2502 pattern = '.*Expected to have finished reduction in the prior            \u2502 \u2502\n\u2502 \u2502           iteration.*'                                                   \u2502 \u2502\n\u2502 \u2502  string = (5000, 51, 51, 25)                                             \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: expected string or bytes-like object\n=============================== warnings summary ===============================\ntests/use-cases/test_3dgan.py::test_3dgan_inference\n  /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/lightning_utilities/core/imports.py:14: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n    import pkg_resources\n\ntests/use-cases/test_3dgan.py::test_3dgan_inference\n  /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/lightning/fabric/plugins/environments/xla.py:18: DeprecationWarning: `ModuleAvailableCache` is a special case of `RequirementCache`. Please use `RequirementCache(module=...)` instead.\n    from lightning.fabric.accelerators.tpu import _XLA_AVAILABLE, TPUAccelerator\n\ntests/use-cases/test_3dgan.py::test_3dgan_inference\n  /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/lightning/fabric/__init__.py:36: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('lightning.fabric')`.\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n    __import__(\"pkg_resources\").declare_namespace(__name__)\n\ntests/use-cases/test_3dgan.py::test_3dgan_inference\ntests/use-cases/test_3dgan.py::test_3dgan_inference\n  /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/pkg_resources/__init__.py:2317: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('lightning')`.\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n    declare_namespace(parent)\n\ntests/use-cases/test_3dgan.py::test_3dgan_inference\n  /sqaaas-build/github.com/interTwin-eu/itwinai/.venv-pytorch/lib/python3.9/site-packages/lightning/pytorch/__init__.py:36: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('lightning.pytorch')`.\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n    __import__(\"pkg_resources\").declare_namespace(__name__)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/use-cases/test_3dgan.py::test_3dgan_train - subprocess.CalledPro...\nFAILED tests/use-cases/test_3dgan.py::test_3dgan_inference - subprocess.Calle...\n= 2 failed, 27 passed, 3 skipped, 3 deselected, 6 warnings in 1376.00s (0:22:56) =",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/124/log?consoleFull"
                                },
                                "level": null,
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Ver": {
            "valid": true,
            "subcriteria": {
                "QC.Ver01.0": {
                    "description": "Are tags being used for releasing software",
                    "requirement_level": "MUST",
                    "hint": "Git tags are a convenient way to release software. This subcriterion checks if any git tag is present in the code history. More info on it-scm.com/book/en/v2/Git-Basics-Tagging\" target=\"_blank\">git tagging</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "The code repository uses tags for releasing new software versions",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/interTwin-eu/itwinai get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['v0.1.0-beta', 'v0.1.0-alpha']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/133/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "v0.1.0-beta",
                                "v0.1.0-alpha"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver01": {
                    "description": "Is the latest release compliant with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Latest tag must be compliant with <a href=\"https://semver.org\" target=\"_blank\">SemVer specification</a>",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Latest release tag v0.1.0-beta found, but is not SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/interTwin-eu/itwinai get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['v0.1.0-beta', 'v0.1.0-alpha']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/133/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "v0.1.0-beta",
                                "v0.1.0-alpha"
                            ]
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                },
                "QC.Ver02": {
                    "description": "Are all release tags with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Existent release tags shall be <a href=\"https://semver.org\" target=\"_blank\">SemVer</a> compliant for this subcriterion to be successful",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Not all release tags are SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/interTwin-eu/itwinai get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['v0.1.0-beta', 'v0.1.0-alpha']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/execution/node/133/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/itwinai.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "v0.1.0-beta",
                                "v0.1.0-alpha"
                            ]
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 33,
                "total_subcriteria": 3,
                "success_subcriteria": 1
            }
        },
        "QC.Met": {
            "valid": false,
            "subcriteria": {
                "QC.Met01": {
                    "description": "Is the software citable?",
                    "valid": false,
                    "hint": "The two formats for software citation supported by SQAaaS are: 1) <a href=\"https://codemeta.github.io/\" target=\"_blank\">CodeMeta</a> and 2) <a href=\"https://citation-file-format.github.io/\" target=\"_blank\">Citation File Format (CFF)</a>. While CodeMeta provides you with a more comprehensive description, CFF is a more lightweight, good-enough approach to software (with built-in support by GitHub) citation. Both provide tools (<a href=\"https://codemeta.github.io/codemeta-generator/\" target=\"_blank\">CodeMeta generator</a>, <a href=\"https://citation-file-format.github.io/cff-initializer-javascript/#/\" target=\"_blank\">CFFINIT</a>)to easily generate a working citation file. Once having the file, be sure to add it to the root path of your code repo.",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <CodeMeta> in repository searching by extensions or filenames\nNo matching files found for language <Citation File Format> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": true
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        }
    },
    "badge": {
        "software": {
            "criteria": {
                "bronze": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ],
                    "missing": [],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ]
                },
                "silver": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Met",
                        "QC.Doc",
                        "QC.Ver"
                    ],
                    "missing": [
                        "QC.Met"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc",
                        "QC.Ver"
                    ]
                },
                "gold": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Uni",
                        "QC.Lic",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty",
                        "QC.Doc",
                        "QC.Ver"
                    ],
                    "missing": [
                        "QC.Uni",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc",
                        "QC.Ver"
                    ]
                }
            },
            "data": {
                "entityType": "Assertion",
                "entityId": "XQKX10RaR2qWzzYACTy7VA",
                "openBadgeId": "https://api.eu.badgr.io/public/assertions/XQKX10RaR2qWzzYACTy7VA",
                "createdAt": "2024-03-22T11:57:22.408893606Z",
                "createdBy": "aS1lWKgIR4u8bGjPZUzAyg",
                "badgeclass": "UOmgyH_TSpSPXiro4aNBoQ",
                "badgeclassOpenBadgeId": "https://api.eu.badgr.io/public/badges/UOmgyH_TSpSPXiro4aNBoQ",
                "issuer": "aS1lWKgIR4u8bGjPZUzAyg",
                "issuerOpenBadgeId": "https://api.eu.badgr.io/public/issuers/aS1lWKgIR4u8bGjPZUzAyg",
                "image": "https://api.eu.badgr.io/public/assertions/XQKX10RaR2qWzzYACTy7VA/image",
                "recipient": {
                    "identity": "sha256$e3858ded67817ac12fbb897f33a99be5ac8049426b6f8f89f8b4a7954e111a3c",
                    "hashed": true,
                    "type": "url",
                    "salt": "IugXHLNs2wwg9qSR",
                    "plaintextIdentity": "https://github.com/interTwin-eu/itwinai"
                },
                "issuedOn": "2024-03-22T11:57:22.408897423Z",
                "narrative": "SQAaaS assessment results for repository https://github.com/interTwin-eu/itwinai (commit: 628299b4a52edc9400ae25d30fe5d49a27a7b278, branch/tag: unit_test_4_dev)",
                "evidence": [
                    {
                        "url": "https://github.com/EOSC-synergy/itwinai.assess.sqaaas/commit/1389a60e1d3b58bcd8cc59daeafe1be31da5a530",
                        "narrative": "SQAaaS build repository"
                    },
                    {
                        "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/itwinai.assess.sqaaas/job/unit_test_4_dev/51/",
                        "narrative": "Build page from Jenkins CI"
                    }
                ],
                "revoked": false,
                "revocationReason": null,
                "acceptance": "Unaccepted",
                "expires": null,
                "extensions": {},
                "assertionRef": {
                    "assertionUrl": "https://api.eu.badgr.io/public/assertions/XQKX10RaR2qWzzYACTy7VA"
                },
                "badgeRef": {
                    "badgeUrl": "https://api.eu.badgr.io/public/badges/UOmgyH_TSpSPXiro4aNBoQ"
                },
                "issuerRef": {
                    "issuerUrl": "https://api.eu.badgr.io/public/issuers/aS1lWKgIR4u8bGjPZUzAyg"
                },
                "pending": null,
                "source": "local",
                "sourceUrl": null,
                "originalJson": null,
                "imagePath": "uploads/badges/assertion-XQKX10RaR2qWzzYACTy7VA.png"
            },
            "share": "<!--\nSPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>\nSPDX-FileContributor: Pablo Orviz <orviz@ifca.unican.es>\n\nSPDX-License-Identifier: GPL-3.0-only\n-->\n\n<blockquote class=\"badgr-badge\" style=\"font-family: Helvetica, Roboto, &quot;Segoe UI&quot;, Calibri, sans-serif;\"><a href=\"https://api.eu.badgr.io/public/assertions/XQKX10RaR2qWzzYACTy7VA?identity__url=https%3A//github.com/EOSC-synergy/itwinai.assess.sqaaas/commit/1389a60e1d3b58bcd8cc59daeafe1be31da5a530\"><img width=\"120px\" height=\"120px\" src=\"https://api.eu.badgr.io/public/assertions/XQKX10RaR2qWzzYACTy7VA/image\"></a><script async=\"async\" src=\"https://eu.badgr.com/assets/widgets.bundle.js\"></script></blockquote>",
            "verification_url": "https://badgecheck.io/?url=https%3A%2F%2Fapi.eu.badgr.io%2Fpublic%2Fassertions%2FXQKX10RaR2qWzzYACTy7VA?identity__url=https%3A%2F%2Fgithub.com%2FEOSC-synergy%2Fitwinai.assess.sqaaas%2Fcommit%2F1389a60e1d3b58bcd8cc59daeafe1be31da5a530&amp;identity__url=https%3A%2F%2Fgithub.com%2FEOSC-synergy%2Fitwinai.assess.sqaaas%2Fcommit%2F1389a60e1d3b58bcd8cc59daeafe1be31da5a530"
        }
    }
}